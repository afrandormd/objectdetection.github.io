/*! For license information please see 2.74d5ba8c.chunk.js.LICENSE.txt */
(this.webpackJsonphandpose=this.webpackJsonphandpose||[]).push([[2],[function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return ce})),n.d(e,"AdagradOptimizer",(function(){return le})),n.d(e,"AdamOptimizer",(function(){return he})),n.d(e,"AdamaxOptimizer",(function(){return be})),n.d(e,"MomentumOptimizer",(function(){return ye})),n.d(e,"Optimizer",(function(){return ie})),n.d(e,"RMSPropOptimizer",(function(){return xe})),n.d(e,"SGDOptimizer",(function(){return ge})),n.d(e,"Tensor",(function(){return Y.a})),n.d(e,"TensorBuffer",(function(){return Y.b})),n.d(e,"Variable",(function(){return Y.c})),n.d(e,"Rank",(function(){return ve.a})),n.d(e,"sumOutType",(function(){return ve.b})),n.d(e,"upcastType",(function(){return ve.c})),n.d(e,"abs",(function(){return we.b})),n.d(e,"acos",(function(){return we.c})),n.d(e,"acosh",(function(){return we.d})),n.d(e,"add",(function(){return we.e})),n.d(e,"addN",(function(){return we.f})),n.d(e,"all",(function(){return we.h})),n.d(e,"any",(function(){return we.i})),n.d(e,"argMax",(function(){return we.j})),n.d(e,"argMin",(function(){return we.k})),n.d(e,"asin",(function(){return we.l})),n.d(e,"asinh",(function(){return we.m})),n.d(e,"atan",(function(){return we.n})),n.d(e,"atan2",(function(){return we.o})),n.d(e,"atanh",(function(){return we.p})),n.d(e,"avgPool",(function(){return we.q})),n.d(e,"avgPool3d",(function(){return we.r})),n.d(e,"basicLSTMCell",(function(){return we.s})),n.d(e,"batchToSpaceND",(function(){return we.x})),n.d(e,"batchNorm",(function(){return we.t})),n.d(e,"batchNorm2d",(function(){return we.u})),n.d(e,"batchNorm3d",(function(){return we.v})),n.d(e,"batchNorm4d",(function(){return we.w})),n.d(e,"bincount",(function(){return we.y})),n.d(e,"broadcastTo",(function(){return we.A})),n.d(e,"buffer",(function(){return we.B})),n.d(e,"cast",(function(){return we.C})),n.d(e,"ceil",(function(){return we.D})),n.d(e,"clipByValue",(function(){return we.E})),n.d(e,"clone",(function(){return we.F})),n.d(e,"complex",(function(){return we.G})),n.d(e,"concat",(function(){return we.H})),n.d(e,"concat1d",(function(){return we.I})),n.d(e,"concat2d",(function(){return we.J})),n.d(e,"concat3d",(function(){return we.K})),n.d(e,"concat4d",(function(){return we.L})),n.d(e,"conv1d",(function(){return we.M})),n.d(e,"conv2d",(function(){return we.N})),n.d(e,"conv2dTranspose",(function(){return we.O})),n.d(e,"conv3d",(function(){return we.P})),n.d(e,"conv3dTranspose",(function(){return we.Q})),n.d(e,"cos",(function(){return we.R})),n.d(e,"cosh",(function(){return we.S})),n.d(e,"cumsum",(function(){return we.U})),n.d(e,"denseBincount",(function(){return we.V})),n.d(e,"depthToSpace",(function(){return we.W})),n.d(e,"depthwiseConv2d",(function(){return we.X})),n.d(e,"diag",(function(){return we.Y})),n.d(e,"dilation2d",(function(){return we.Z})),n.d(e,"div",(function(){return we.ab})),n.d(e,"divNoNan",(function(){return we.bb})),n.d(e,"dot",(function(){return we.db})),n.d(e,"elu",(function(){return we.fb})),n.d(e,"equal",(function(){return we.hb})),n.d(e,"erf",(function(){return we.jb})),n.d(e,"exp",(function(){return we.kb})),n.d(e,"expandDims",(function(){return we.lb})),n.d(e,"expm1",(function(){return we.mb})),n.d(e,"eye",(function(){return we.nb})),n.d(e,"fill",(function(){return we.pb})),n.d(e,"floor",(function(){return we.qb})),n.d(e,"floorDiv",(function(){return we.rb})),n.d(e,"gather",(function(){return we.tb})),n.d(e,"greater",(function(){return we.vb})),n.d(e,"greaterEqual",(function(){return we.wb})),n.d(e,"imag",(function(){return we.Ab})),n.d(e,"isFinite",(function(){return we.Eb})),n.d(e,"isInf",(function(){return we.Fb})),n.d(e,"isNaN",(function(){return we.Gb})),n.d(e,"leakyRelu",(function(){return we.Hb})),n.d(e,"less",(function(){return we.Ib})),n.d(e,"lessEqual",(function(){return we.Jb})),n.d(e,"linspace",(function(){return we.Nb})),n.d(e,"localResponseNormalization",(function(){return we.Ob})),n.d(e,"log",(function(){return we.Pb})),n.d(e,"log1p",(function(){return we.Qb})),n.d(e,"logSigmoid",(function(){return we.Rb})),n.d(e,"logSoftmax",(function(){return we.Sb})),n.d(e,"logSumExp",(function(){return we.Tb})),n.d(e,"logicalAnd",(function(){return we.Ub})),n.d(e,"logicalNot",(function(){return we.Vb})),n.d(e,"logicalOr",(function(){return we.Wb})),n.d(e,"logicalXor",(function(){return we.Xb})),n.d(e,"matMul",(function(){return we.Zb})),n.d(e,"max",(function(){return we.ac})),n.d(e,"maxPool",(function(){return we.bc})),n.d(e,"maxPool3d",(function(){return we.cc})),n.d(e,"maxPoolWithArgmax",(function(){return we.dc})),n.d(e,"maximum",(function(){return we.ec})),n.d(e,"mean",(function(){return we.gc})),n.d(e,"min",(function(){return we.hc})),n.d(e,"minimum",(function(){return we.ic})),n.d(e,"mirrorPad",(function(){return we.kc})),n.d(e,"mod",(function(){return we.lc})),n.d(e,"moments",(function(){return we.nc})),n.d(e,"mul",(function(){return we.pc})),n.d(e,"multiRNNCell",(function(){return we.rc})),n.d(e,"multinomial",(function(){return we.sc})),n.d(e,"neg",(function(){return we.tc})),n.d(e,"notEqual",(function(){return we.vc})),n.d(e,"oneHot",(function(){return we.xc})),n.d(e,"ones",(function(){return we.yc})),n.d(e,"onesLike",(function(){return we.zc})),n.d(e,"outerProduct",(function(){return we.Bc})),n.d(e,"pad",(function(){return we.Cc})),n.d(e,"pad1d",(function(){return we.Dc})),n.d(e,"pad2d",(function(){return we.Ec})),n.d(e,"pad3d",(function(){return we.Fc})),n.d(e,"pad4d",(function(){return we.Gc})),n.d(e,"pool",(function(){return we.Hc})),n.d(e,"pow",(function(){return we.Ic})),n.d(e,"prelu",(function(){return we.Kc})),n.d(e,"print",(function(){return we.Lc})),n.d(e,"prod",(function(){return we.Mc})),n.d(e,"rand",(function(){return we.Nc})),n.d(e,"randomGamma",(function(){return we.Oc})),n.d(e,"randomNormal",(function(){return we.Pc})),n.d(e,"randomUniform",(function(){return we.Qc})),n.d(e,"range",(function(){return we.Rc})),n.d(e,"real",(function(){return we.Sc})),n.d(e,"reciprocal",(function(){return we.Tc})),n.d(e,"relu",(function(){return we.Uc})),n.d(e,"relu6",(function(){return we.Vc})),n.d(e,"reshape",(function(){return we.Wc})),n.d(e,"reverse",(function(){return we.Xc})),n.d(e,"reverse1d",(function(){return we.Yc})),n.d(e,"reverse2d",(function(){return we.Zc})),n.d(e,"reverse3d",(function(){return we.ad})),n.d(e,"reverse4d",(function(){return we.bd})),n.d(e,"round",(function(){return we.dd})),n.d(e,"rsqrt",(function(){return we.ed})),n.d(e,"scalar",(function(){return we.fd})),n.d(e,"selu",(function(){return we.hd})),n.d(e,"separableConv2d",(function(){return we.id})),n.d(e,"setdiff1dAsync",(function(){return we.jd})),n.d(e,"sigmoid",(function(){return we.kd})),n.d(e,"sign",(function(){return we.ld})),n.d(e,"sin",(function(){return we.nd})),n.d(e,"sinh",(function(){return we.od})),n.d(e,"slice",(function(){return we.pd})),n.d(e,"slice1d",(function(){return we.qd})),n.d(e,"slice2d",(function(){return we.rd})),n.d(e,"slice3d",(function(){return we.sd})),n.d(e,"slice4d",(function(){return we.td})),n.d(e,"softmax",(function(){return we.ud})),n.d(e,"softplus",(function(){return we.vd})),n.d(e,"spaceToBatchND",(function(){return we.wd})),n.d(e,"fft",(function(){return we.ob})),n.d(e,"ifft",(function(){return we.zb})),n.d(e,"irfft",(function(){return we.Db})),n.d(e,"rfft",(function(){return we.cd})),n.d(e,"split",(function(){return we.zd})),n.d(e,"sqrt",(function(){return we.Ad})),n.d(e,"square",(function(){return we.Bd})),n.d(e,"squaredDifference",(function(){return we.Cd})),n.d(e,"squeeze",(function(){return we.Ed})),n.d(e,"stack",(function(){return we.Fd})),n.d(e,"step",(function(){return we.Gd})),n.d(e,"stridedSlice",(function(){return we.Hd})),n.d(e,"sub",(function(){return we.Id})),n.d(e,"sum",(function(){return we.Kd})),n.d(e,"tan",(function(){return we.Ld})),n.d(e,"tanh",(function(){return we.Md})),n.d(e,"tensor",(function(){return we.Nd})),n.d(e,"tensor1d",(function(){return we.Od})),n.d(e,"tensor2d",(function(){return we.Pd})),n.d(e,"tensor3d",(function(){return we.Qd})),n.d(e,"tensor4d",(function(){return we.Rd})),n.d(e,"tensor5d",(function(){return we.Sd})),n.d(e,"tensor6d",(function(){return we.Td})),n.d(e,"tile",(function(){return we.Ud})),n.d(e,"topk",(function(){return we.Vd})),n.d(e,"truncatedNormal",(function(){return we.Xd})),n.d(e,"unique",(function(){return we.Yd})),n.d(e,"unsortedSegmentSum",(function(){return we.Zd})),n.d(e,"unstack",(function(){return we.ae})),n.d(e,"variable",(function(){return we.be})),n.d(e,"where",(function(){return we.ce})),n.d(e,"whereAsync",(function(){return we.de})),n.d(e,"zeros",(function(){return we.ee})),n.d(e,"zerosLike",(function(){return we.fe})),n.d(e,"booleanMaskAsync",(function(){return we.z})),n.d(e,"equalStrict",(function(){return we.ib})),n.d(e,"greaterEqualStrict",(function(){return we.xb})),n.d(e,"greaterStrict",(function(){return we.yb})),n.d(e,"lessEqualStrict",(function(){return we.Kb})),n.d(e,"lessStrict",(function(){return we.Lb})),n.d(e,"notEqualStrict",(function(){return we.wc})),n.d(e,"addStrict",(function(){return we.g})),n.d(e,"divStrict",(function(){return we.cb})),n.d(e,"maximumStrict",(function(){return we.fc})),n.d(e,"minimumStrict",(function(){return we.jc})),n.d(e,"modStrict",(function(){return we.mc})),n.d(e,"mulStrict",(function(){return we.qc})),n.d(e,"powStrict",(function(){return we.Jc})),n.d(e,"squaredDifferenceStrict",(function(){return we.Dd})),n.d(e,"subStrict",(function(){return we.Jd})),n.d(e,"transpose",(function(){return we.Wd})),n.d(e,"norm",(function(){return we.uc})),n.d(e,"movingAverage",(function(){return we.oc})),n.d(e,"scatterND",(function(){return we.gd})),n.d(e,"sparseToDense",(function(){return we.xd})),n.d(e,"gatherND",(function(){return we.ub})),n.d(e,"dropout",(function(){return we.eb})),n.d(e,"enclosingPowerOfTwo",(function(){return we.gb})),n.d(e,"cosineWindow",(function(){return we.T})),n.d(e,"inTopKAsync",(function(){return we.Cb})),n.d(e,"op",(function(){return we.Ac})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return we.a})),n.d(e,"image",(function(){return we.Bb})),n.d(e,"linalg",(function(){return we.Mb})),n.d(e,"losses",(function(){return we.Yb})),n.d(e,"spectral",(function(){return we.yd})),n.d(e,"fused",(function(){return we.sb})),n.d(e,"signal",(function(){return we.md})),n.d(e,"Reduction",(function(){return ke.a})),n.d(e,"train",(function(){return Ne})),n.d(e,"enableProdMode",(function(){return Jt.g})),n.d(e,"enableDebugMode",(function(){return Jt.f})),n.d(e,"disableDeprecationWarnings",(function(){return Jt.c})),n.d(e,"deprecationWarn",(function(){return Jt.b})),n.d(e,"disposeVariables",(function(){return Jt.e})),n.d(e,"engine",(function(){return Jt.h})),n.d(e,"memory",(function(){return Jt.m})),n.d(e,"profile",(function(){return Jt.n})),n.d(e,"tidy",(function(){return Jt.t})),n.d(e,"dispose",(function(){return Jt.d})),n.d(e,"keep",(function(){return Jt.l})),n.d(e,"time",(function(){return Jt.u})),n.d(e,"setBackend",(function(){return Jt.r})),n.d(e,"ready",(function(){return Jt.o})),n.d(e,"getBackend",(function(){return Jt.k})),n.d(e,"removeBackend",(function(){return Jt.q})),n.d(e,"findBackend",(function(){return Jt.i})),n.d(e,"findBackendFactory",(function(){return Jt.j})),n.d(e,"registerBackend",(function(){return Jt.p})),n.d(e,"backend",(function(){return Jt.a})),n.d(e,"setPlatform",(function(){return Jt.s})),n.d(e,"getKernel",(function(){return kt.c})),n.d(e,"getGradient",(function(){return kt.b})),n.d(e,"getKernelsForBackend",(function(){return kt.d})),n.d(e,"registerKernel",(function(){return kt.f})),n.d(e,"registerGradient",(function(){return kt.e})),n.d(e,"unregisterKernel",(function(){return kt.h})),n.d(e,"unregisterGradient",(function(){return kt.g})),n.d(e,"copyRegisteredKernels",(function(){return kt.a})),n.d(e,"customGrad",(function(){return se.a})),n.d(e,"grad",(function(){return se.b})),n.d(e,"grads",(function(){return se.c})),n.d(e,"valueAndGrad",(function(){return se.d})),n.d(e,"valueAndGrads",(function(){return se.e})),n.d(e,"variableGrads",(function(){return se.f})),n.d(e,"Environment",(function(){return h.b})),n.d(e,"env",(function(){return h.c})),n.d(e,"ENV",(function(){return h.a})),n.d(e,"version_core",(function(){return Zt})),n.d(e,"nextFrame",(function(){return Ie.a})),n.d(e,"browser",(function(){return s})),n.d(e,"io",(function(){return a})),n.d(e,"math",(function(){return r})),n.d(e,"serialization",(function(){return c})),n.d(e,"test_util",(function(){return Yt})),n.d(e,"util",(function(){return Qt})),n.d(e,"backend_util",(function(){return l})),n.d(e,"tensor_util",(function(){return Xt})),n.d(e,"slice_util",(function(){return i})),n.d(e,"gather_util",(function(){return o})),n.d(e,"scatter_util",(function(){return jt})),n.d(e,"device_util",(function(){return fn})),n.d(e,"kernel_impls",(function(){return d})),n.d(e,"KernelBackend",(function(){return gn.b})),n.d(e,"DataStorage",(function(){return gn.a})),n.d(e,"Abs",(function(){return wt.a})),n.d(e,"Acos",(function(){return wt.b})),n.d(e,"Acosh",(function(){return wt.c})),n.d(e,"Add",(function(){return wt.d})),n.d(e,"AddN",(function(){return wt.e})),n.d(e,"All",(function(){return wt.f})),n.d(e,"Any",(function(){return wt.g})),n.d(e,"ArgMax",(function(){return wt.h})),n.d(e,"ArgMin",(function(){return wt.i})),n.d(e,"Asin",(function(){return wt.j})),n.d(e,"Asinh",(function(){return wt.k})),n.d(e,"Atan",(function(){return wt.l})),n.d(e,"Atanh",(function(){return wt.n})),n.d(e,"Atan2",(function(){return wt.m})),n.d(e,"AvgPool",(function(){return wt.o})),n.d(e,"AvgPoolGrad",(function(){return wt.r})),n.d(e,"AvgPool3D",(function(){return wt.p})),n.d(e,"AvgPool3DGrad",(function(){return wt.q})),n.d(e,"BatchMatMul",(function(){return wt.s})),n.d(e,"BatchToSpaceND",(function(){return wt.t})),n.d(e,"Bincount",(function(){return wt.u})),n.d(e,"BroadcastTo",(function(){return wt.v})),n.d(e,"Cast",(function(){return wt.w})),n.d(e,"Ceil",(function(){return wt.x})),n.d(e,"ClipByValue",(function(){return wt.y})),n.d(e,"Complex",(function(){return wt.z})),n.d(e,"ComplexAbs",(function(){return wt.A})),n.d(e,"Concat",(function(){return wt.B})),n.d(e,"Conv2D",(function(){return wt.C})),n.d(e,"Conv2DBackpropFilter",(function(){return wt.D})),n.d(e,"Conv2DBackpropInput",(function(){return wt.E})),n.d(e,"Conv3D",(function(){return wt.F})),n.d(e,"Conv3DBackpropFilterV2",(function(){return wt.G})),n.d(e,"Conv3DBackpropInputV2",(function(){return wt.H})),n.d(e,"Cos",(function(){return wt.I})),n.d(e,"Cosh",(function(){return wt.J})),n.d(e,"Cumsum",(function(){return wt.L})),n.d(e,"CropAndResize",(function(){return wt.K})),n.d(e,"DenseBincount",(function(){return wt.M})),n.d(e,"DepthToSpace",(function(){return wt.N})),n.d(e,"DepthwiseConv2dNative",(function(){return wt.O})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return wt.P})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return wt.Q})),n.d(e,"Diag",(function(){return wt.R})),n.d(e,"Dilation2D",(function(){return wt.S})),n.d(e,"Dilation2DBackpropInput",(function(){return wt.U})),n.d(e,"Dilation2DBackpropFilter",(function(){return wt.T})),n.d(e,"RealDiv",(function(){return wt.kc})),n.d(e,"Elu",(function(){return wt.V})),n.d(e,"EluGrad",(function(){return wt.W})),n.d(e,"Erf",(function(){return wt.Y})),n.d(e,"Equal",(function(){return wt.X})),n.d(e,"Exp",(function(){return wt.Z})),n.d(e,"ExpandDims",(function(){return wt.ab})),n.d(e,"Expm1",(function(){return wt.bb})),n.d(e,"FFT",(function(){return wt.cb})),n.d(e,"Fill",(function(){return wt.db})),n.d(e,"FlipLeftRight",(function(){return wt.eb})),n.d(e,"Floor",(function(){return wt.fb})),n.d(e,"FloorDiv",(function(){return wt.gb})),n.d(e,"FusedBatchNorm",(function(){return wt.ib})),n.d(e,"GatherV2",(function(){return wt.mb})),n.d(e,"GatherNd",(function(){return wt.lb})),n.d(e,"Greater",(function(){return wt.nb})),n.d(e,"GreaterEqual",(function(){return wt.ob})),n.d(e,"Identity",(function(){return wt.qb})),n.d(e,"IFFT",(function(){return wt.pb})),n.d(e,"Imag",(function(){return wt.rb})),n.d(e,"IsFinite",(function(){return wt.sb})),n.d(e,"IsInf",(function(){return wt.tb})),n.d(e,"IsNan",(function(){return wt.ub})),n.d(e,"LeakyRelu",(function(){return wt.xb})),n.d(e,"Less",(function(){return wt.yb})),n.d(e,"LessEqual",(function(){return wt.zb})),n.d(e,"LinSpace",(function(){return wt.Ab})),n.d(e,"Log",(function(){return wt.Bb})),n.d(e,"Log1p",(function(){return wt.Cb})),n.d(e,"LogicalAnd",(function(){return wt.Eb})),n.d(e,"LogicalNot",(function(){return wt.Fb})),n.d(e,"LogicalOr",(function(){return wt.Gb})),n.d(e,"LogSoftmax",(function(){return wt.Db})),n.d(e,"LRN",(function(){return wt.vb})),n.d(e,"LRNGrad",(function(){return wt.wb})),n.d(e,"Max",(function(){return wt.Hb})),n.d(e,"Maximum",(function(){return wt.Nb})),n.d(e,"MaxPool",(function(){return wt.Ib})),n.d(e,"MaxPoolGrad",(function(){return wt.Lb})),n.d(e,"MaxPool3D",(function(){return wt.Jb})),n.d(e,"MaxPool3DGrad",(function(){return wt.Kb})),n.d(e,"MaxPoolWithArgmax",(function(){return wt.Mb})),n.d(e,"Mean",(function(){return wt.Ob})),n.d(e,"Min",(function(){return wt.Pb})),n.d(e,"Minimum",(function(){return wt.Qb})),n.d(e,"MirrorPad",(function(){return wt.Rb})),n.d(e,"Mod",(function(){return wt.Sb})),n.d(e,"Multinomial",(function(){return wt.Tb})),n.d(e,"Multiply",(function(){return wt.Ub})),n.d(e,"Neg",(function(){return wt.Vb})),n.d(e,"NotEqual",(function(){return wt.Zb})),n.d(e,"NonMaxSuppressionV3",(function(){return wt.Wb})),n.d(e,"NonMaxSuppressionV4",(function(){return wt.Xb})),n.d(e,"NonMaxSuppressionV5",(function(){return wt.Yb})),n.d(e,"OnesLike",(function(){return wt.bc})),n.d(e,"OneHot",(function(){return wt.ac})),n.d(e,"Pack",(function(){return wt.cc})),n.d(e,"PadV2",(function(){return wt.dc})),n.d(e,"Pool",(function(){return wt.ec})),n.d(e,"Pow",(function(){return wt.fc})),n.d(e,"Prelu",(function(){return wt.gc})),n.d(e,"Prod",(function(){return wt.hc})),n.d(e,"Range",(function(){return wt.ic})),n.d(e,"Real",(function(){return wt.jc})),n.d(e,"Reciprocal",(function(){return wt.lc})),n.d(e,"Relu",(function(){return wt.mc})),n.d(e,"Reshape",(function(){return wt.oc})),n.d(e,"ResizeNearestNeighbor",(function(){return wt.rc})),n.d(e,"ResizeNearestNeighborGrad",(function(){return wt.sc})),n.d(e,"ResizeBilinear",(function(){return wt.pc})),n.d(e,"ResizeBilinearGrad",(function(){return wt.qc})),n.d(e,"Relu6",(function(){return wt.nc})),n.d(e,"Reverse",(function(){return wt.tc})),n.d(e,"Round",(function(){return wt.vc})),n.d(e,"Rsqrt",(function(){return wt.wc})),n.d(e,"ScatterNd",(function(){return wt.xc})),n.d(e,"Select",(function(){return wt.yc})),n.d(e,"Selu",(function(){return wt.zc})),n.d(e,"Slice",(function(){return wt.Ec})),n.d(e,"Sin",(function(){return wt.Cc})),n.d(e,"Sinh",(function(){return wt.Dc})),n.d(e,"Sign",(function(){return wt.Bc})),n.d(e,"Sigmoid",(function(){return wt.Ac})),n.d(e,"Softplus",(function(){return wt.Gc})),n.d(e,"Sqrt",(function(){return wt.Kc})),n.d(e,"Sum",(function(){return wt.Qc})),n.d(e,"SpaceToBatchND",(function(){return wt.Hc})),n.d(e,"SplitV",(function(){return wt.Jc})),n.d(e,"Softmax",(function(){return wt.Fc})),n.d(e,"SquaredDifference",(function(){return wt.Mc})),n.d(e,"Square",(function(){return wt.Lc})),n.d(e,"Sub",(function(){return wt.Pc})),n.d(e,"SparseToDense",(function(){return wt.Ic})),n.d(e,"StridedSlice",(function(){return wt.Oc})),n.d(e,"Tan",(function(){return wt.Rc})),n.d(e,"Tanh",(function(){return wt.Sc})),n.d(e,"Tile",(function(){return wt.Tc})),n.d(e,"TopK",(function(){return wt.Uc})),n.d(e,"Transpose",(function(){return wt.Vc})),n.d(e,"Unique",(function(){return wt.Wc})),n.d(e,"Unpack",(function(){return wt.Xc})),n.d(e,"UnsortedSegmentSum",(function(){return wt.Yc})),n.d(e,"ZerosLike",(function(){return wt.Zc})),n.d(e,"Step",(function(){return wt.Nc})),n.d(e,"FromPixels",(function(){return wt.hb})),n.d(e,"RotateWithOffset",(function(){return wt.uc})),n.d(e,"_FusedMatMul",(function(){return wt.ad})),n.d(e,"FusedConv2D",(function(){return wt.jb})),n.d(e,"FusedDepthwiseConv2D",(function(){return wt.kb}));var a={};n.r(a),n.d(a,"copyModel",(function(){return V})),n.d(a,"listModels",(function(){return B})),n.d(a,"moveModel",(function(){return U})),n.d(a,"removeModel",(function(){return W})),n.d(a,"browserFiles",(function(){return tt})),n.d(a,"browserHTTPRequest",(function(){return lt})),n.d(a,"concatenateArrayBuffers",(function(){return f.d})),n.d(a,"decodeWeights",(function(){return f.e})),n.d(a,"encodeWeights",(function(){return f.f})),n.d(a,"fromMemory",(function(){return ht})),n.d(a,"getLoadHandlers",(function(){return x})),n.d(a,"getModelArtifactsInfoForJSON",(function(){return f.g})),n.d(a,"getSaveHandlers",(function(){return y})),n.d(a,"http",(function(){return ut})),n.d(a,"isHTTPScheme",(function(){return it})),n.d(a,"loadWeights",(function(){return rt})),n.d(a,"registerLoadRouter",(function(){return g})),n.d(a,"registerSaveRouter",(function(){return b})),n.d(a,"weightsLoaderFactory",(function(){return st})),n.d(a,"withSaveHandler",(function(){return ft}));var r={};n.r(r),n.d(r,"confusionMatrix",(function(){return vt}));var s={};n.r(s),n.d(s,"toPixels",(function(){return It})),n.d(s,"fromPixels",(function(){return St}));var o={};n.r(o),n.d(o,"prepareAndValidate",(function(){return Tt}));var i={};n.r(i),n.d(i,"assertParamsValid",(function(){return Ct})),n.d(i,"maskToAxes",(function(){return Et})),n.d(i,"computeOutShape",(function(){return At})),n.d(i,"stridesWithElidedDims",(function(){return _t})),n.d(i,"getNormalizedAxes",(function(){return Ft})),n.d(i,"startIndicesWithElidedDims",(function(){return Mt})),n.d(i,"stopIndicesWithElidedDims",(function(){return zt})),n.d(i,"stridesForAxis",(function(){return Lt})),n.d(i,"startForAxis",(function(){return Pt})),n.d(i,"stopForAxis",(function(){return Bt})),n.d(i,"isSliceContinous",(function(){return Wt})),n.d(i,"computeFlatOffset",(function(){return Vt})),n.d(i,"parseSliceParams",(function(){return Ut})),n.d(i,"sliceInfo",(function(){return Gt}));var c={};n.r(c),n.d(c,"Serializable",(function(){return Ht})),n.d(c,"SerializationMap",(function(){return qt})),n.d(c,"registerClass",(function(){return Kt}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return on})),n.d(u,"computeOutShape",(function(){return cn})),n.d(u,"collectGatherOpShapeInfo",(function(){return un}));var l={};n.r(l),n.d(l,"axesAreInnerMostDims",(function(){return Te.b})),n.d(l,"combineLocations",(function(){return Te.c})),n.d(l,"computeOutAndReduceShapes",(function(){return Te.d})),n.d(l,"expandShapeToKeepDim",(function(){return Te.e})),n.d(l,"assertAxesAreInnerMostDims",(function(){return Te.a})),n.d(l,"getAxesPermutation",(function(){return Te.f})),n.d(l,"getUndoAxesPermutation",(function(){return Te.h})),n.d(l,"getInnerMostAxes",(function(){return Te.g})),n.d(l,"getBroadcastDims",(function(){return je.b})),n.d(l,"getReductionAxes",(function(){return je.c})),n.d(l,"assertAndGetBroadcastShape",(function(){return je.a})),n.d(l,"assertParamsConsistent",(function(){return Ce})),n.d(l,"computeOutShape",(function(){return Ee})),n.d(l,"computeDilation2DInfo",(function(){return Ae.d})),n.d(l,"computePool2DInfo",(function(){return Ae.e})),n.d(l,"computePool3DInfo",(function(){return Ae.f})),n.d(l,"computeConv2DInfo",(function(){return Ae.a})),n.d(l,"computeConv3DInfo",(function(){return Ae.b})),n.d(l,"computeDefaultPad",(function(){return Ae.c})),n.d(l,"tupleValuesAreOne",(function(){return Ae.i})),n.d(l,"eitherStridesOrDilationsAreOne",(function(){return Ae.h})),n.d(l,"convertConv2DDataFormat",(function(){return Ae.g})),n.d(l,"getFusedDyActivation",(function(){return _e.c})),n.d(l,"getFusedBiasGradient",(function(){return _e.b})),n.d(l,"applyActivation",(function(){return _e.a})),n.d(l,"shouldFuse",(function(){return _e.d})),n.d(l,"PARALLELIZE_THRESHOLD",(function(){return Re})),n.d(l,"computeOptimalWindowSize",(function(){return De})),n.d(l,"slice_util",(function(){return i})),n.d(l,"upcastType",(function(){return ve.c})),n.d(l,"getImageCenter",(function(){return Fe})),n.d(l,"getReshaped",(function(){return Me})),n.d(l,"getPermuted",(function(){return ze})),n.d(l,"getReshapedPermuted",(function(){return Le})),n.d(l,"getSliceBeginCoords",(function(){return Pe})),n.d(l,"getSliceSize",(function(){return Be})),n.d(l,"prepareAndValidate",(function(){return Tt})),n.d(l,"validateUpdateShape",(function(){return jt.validateUpdateShape})),n.d(l,"validateInput",(function(){return jt.validateInput})),n.d(l,"calculateShapes",(function(){return jt.calculateShapes})),n.d(l,"SELU_SCALEALPHA",(function(){return We})),n.d(l,"SELU_SCALE",(function(){return Ve})),n.d(l,"ERF_P",(function(){return Ue})),n.d(l,"ERF_A1",(function(){return Ge})),n.d(l,"ERF_A2",(function(){return He})),n.d(l,"ERF_A3",(function(){return qe})),n.d(l,"ERF_A4",(function(){return Ke})),n.d(l,"ERF_A5",(function(){return Xe})),n.d(l,"warn",(function(){return Ye})),n.d(l,"log",(function(){return Qe})),n.d(l,"mergeRealAndImagArrays",(function(){return Ze})),n.d(l,"splitRealAndImagArrays",(function(){return Je})),n.d(l,"complexWithEvenIndex",(function(){return $e})),n.d(l,"complexWithOddIndex",(function(){return tn})),n.d(l,"getComplexWithIndex",(function(){return en})),n.d(l,"assignToTypedArray",(function(){return nn})),n.d(l,"exponents",(function(){return an})),n.d(l,"exponent",(function(){return rn})),n.d(l,"prepareSplitSize",(function(){return sn})),n.d(l,"segment_util",(function(){return u})),n.d(l,"castTensor",(function(){return ln})),n.d(l,"reshapeTensor",(function(){return dn})),n.d(l,"fromUint8ToStringArray",(function(){return pn})),n.d(l,"fromStringArrayToUint8",(function(){return hn}));var d={};n.r(d),n.d(d,"nonMaxSuppressionV3Impl",(function(){return mn.a})),n.d(d,"nonMaxSuppressionV4Impl",(function(){return mn.b})),n.d(d,"nonMaxSuppressionV5Impl",(function(){return mn.c})),n.d(d,"whereImpl",(function(){return bn.a}));var p=n(5),h=(n(123),n(22)),f=n(34);class m{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerSaveRouter(t){m.getInstance().saveRouters.push(t)}static registerLoadRouter(t){m.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return m.getHandlers(t,"save")}static getLoadHandlers(t,e){return m.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?m.getInstance().loadRouters:m.getInstance().saveRouters).forEach(e=>{const r=e(t,n);null!==r&&a.push(r)}),a}}const b=t=>m.registerSaveRouter(t),g=t=>m.registerLoadRouter(t),y=t=>m.getSaveHandlers(t),x=(t,e)=>m.getLoadHandlers(t,e);function v(){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function w(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class k{constructor(t){if(this.indexedDB=v(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const a=this.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=()=>w(a),a.onsuccess=()=>{const r=a.result;if(null==e){const e=r.transaction("models_store","readonly"),a=e.objectStore("models_store").get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(r.close(),n(a.error)),e.oncomplete=()=>r.close()}else{const a=Object(f.g)(e),s=r.transaction("model_info_store","readwrite");let o=s.objectStore("model_info_store");const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:a});let c;i.onsuccess=()=>{c=r.transaction("models_store","readwrite");const i=c.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});i.onsuccess=()=>t({modelArtifactsInfo:a}),i.onerror=t=>{o=s.objectStore("model_info_store");const e=o.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(i.error)),e.onerror=t=>(r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=t=>n(a.error)})}}k.URL_SCHEME="indexeddb://";const O=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(k.URL_SCHEME)?(e=t.slice(k.URL_SCHEME.length),new k(e)):null;var e};m.registerSaveRouter(O),m.registerLoadRouter(O);class N{constructor(){this.indexedDB=v()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>w(n),n.onsuccess=()=>{const a=n.result,r=a.transaction("model_info_store","readonly"),s=r.objectStore("model_info_store").getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(a.close(),e(s.error)),r.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(k.URL_SCHEME)?e.slice(k.URL_SCHEME.length):e,new Promise((e,n)=>{const a=this.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=()=>w(a),a.onsuccess=()=>{const r=a.result,s=r.transaction("model_info_store","readwrite"),o=s.objectStore("model_info_store"),i=o.get(t);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=o.delete(t),s=()=>{c=r.transaction("models_store","readwrite");const a=c.objectStore("models_store").delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=s,a.onerror=t=>(s(),r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=t=>n(a.error)})}}var I=n(7);const S="tensorflowjs_models",T="info",j="model_topology",C="weight_specs",E="weight_data",A="model_metadata";function _(t){return{info:[S,t,T].join("/"),topology:[S,t,j].join("/"),weightSpecs:[S,t,C].join("/"),weightData:[S,t,E].join("/"),modelMetadata:[S,t,A].join("/")}}function R(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join("/")}class D{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=_(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),a=JSON.stringify(t.weightSpecs),r=Object(f.g)(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,Object(f.a)(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=Object(f.b)(s),e}}D.URL_SCHEME="localstorage://";const F=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(D.URL_SCHEME)?(e=t.slice(D.URL_SCHEME.length),new D(e)):null;var e};m.registerSaveRouter(F),m.registerLoadRouter(F);class M{constructor(){Object(I.b)(Object(h.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(I.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=S+"/",n="/"+T;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(n)){t[R(r)]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){var e;const n=_(t=(e=t).startsWith(D.URL_SCHEME)?e.slice(D.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),a}}class z{constructor(){this.managers={}}static getInstance(){return null==z.instance&&(z.instance=new z),z.instance}static registerManager(t,e){Object(I.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(I.b)(t.length>0,()=>"scheme must not be an empty string.");const n=z.getInstance();Object(I.b)(null==n.managers[t],()=>"A model store manager is already registered for scheme '".concat(t,"'.")),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function L(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(z.getSchemes().join(",")));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function P(t,e,n=!1){Object(I.b)(t!==e,()=>"Old path and new path are the same: '".concat(t,"'"));const a=m.getLoadHandlers(t);Object(I.b)(a.length>0,()=>"Copying failed because no load handler is found for source URL ".concat(t,".")),Object(I.b)(a.length<2,()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(t,"."));const r=a[0],s=m.getSaveHandlers(e);Object(I.b)(s.length>0,()=>"Copying failed because no save handler is found for destination "+"URL ".concat(e,".")),Object(I.b)(s.length<2,()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(e,"."));const o=s[0],i=L(t).scheme,c=L(t).path,u=i===L(t).scheme,l=await r.load();n&&u&&await z.getManager(i).removeModel(c);const d=await o.save(l);return n&&!u&&await z.getManager(i).removeModel(c),d.modelArtifactsInfo}async function B(){const t=z.getSchemes(),e={};for(const n of t){const t=await z.getManager(n).listModels();for(const a in t){e[n+"://"+a]=t[a]}}return e}async function W(t){const e=L(t);return z.getManager(e.scheme).removeModel(e.path)}async function V(t,e){return P(t,e,!1)}async function U(t,e){return P(t,e,!0)}class G{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(h.c)().get("IS_BROWSER")){Object(h.c)().setPlatform("browser",new G);try{z.registerManager(D.URL_SCHEME,new M)}catch(jo){}try{z.registerManager(k.URL_SCHEME,new N)}catch(jo){}}n(241);var H=n(40),q=n(11),K=n(58),X=n(132),Y=n(6);Object(p.b)();const Q={buffer:H.a,cast:q.a,clone:K.a,print:X.a};Object(Y.e)(Q);function Z(t){return new Promise(t=>setTimeout(t)).then(t)}class J{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(J.URL_SCHEME)&&(t=t.slice(J.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await Z(()=>s.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Z(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(f.g)(t)}}}}J.URL_SCHEME="downloads://";class ${constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(t));this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,a)=>{const r=new FileReader;r.onload=r=>{const s=JSON.parse(r.target.result),o=s.modelTopology;if(null==o)return void a(new Error("modelTopology field is missing from file ".concat(t.name)));0===e.length&&n({modelTopology:o});const i=s.weightsManifest;if(null==i)return void a(new Error("weightManifest field is missing from file ".concat(t.name)));let c;try{c=this.checkManifestAndWeightFiles(i,e)}catch(jo){return void a(jo)}const u=[],l=[],d=[];i.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),u.push(...t.weights)}),i.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const a=e.target.result,r=l.indexOf(t);if(d[r]=a,-1===d.indexOf(null)){const t={modelTopology:o,weightSpecs:u,weightData:Object(f.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(t.signature=s.signature),null!=s.userDefinedMetadata&&(t.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(t.modelInitializer=s.modelInitializer),n(t)}},e.onerror=e=>a("Failed to weights data from file of path '".concat(t,"'.")),e.readAsArrayBuffer(c[t])})})},r.onerror=e=>a("Failed to read model topology and weights manifest JSON "+"from file '".concat(t.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),r.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],a=e.map(t=>Object(f.c)(t.name)),r={};for(const s of t)s.paths.forEach(t=>{const s=Object(f.c)(t);if(-1!==n.indexOf(s))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(s,"'"));if(n.push(s),-1===a.indexOf(s))throw new Error("Weight file with basename '".concat(s,"' is not provided."));r[t]=e[a.indexOf(s)]});if(n.length!==e.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(n.length,") and the number of weight files provided ")+"(".concat(e.length,")."));return r}}function tt(t){return new $(t)}function et(t,e,n,a){!function(t){Object(I.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(I.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t)),Object(I.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e)),Object(I.b)(e>=t,()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(t.map(s=>(s.then(s=>{const o=n+ ++r/t.length*(a-n);return e(o),s}),s)))}m.registerSaveRouter(t=>Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(J.URL_SCHEME)?function(t="model"){return new J(t)}(t.slice(J.URL_SCHEME.length)):null);var nt=n(128);async function at(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(h.c)().platform.fetch:e.fetchFunc,a=t.map(t=>n(t,e.requestInit,{isBinary:!0})),r=(null==e.onProgress?await Promise.all(a):await et(a,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(r):await et(r,e.onProgress,.5,1)}async function rt(t,e="",n,a){return st(t=>at(t,{requestInit:a}))(t,e,n)}function st(t){return async(e,n="",a)=>{const r=e.map(()=>!1),s={},o=null!=a?a.map(()=>!1):[],i=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const c="quantization"in t?t.quantization.dtype:t.dtype,u=nt.a[c]*I.N(t.shape),l=()=>{r[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=a?a.forEach((e,n)=>{e===t.name&&(l(),o[n]=!0)}):l(),i.push(t.name),n+=u})}),!o.every(t=>t)){const t=a.filter((t,e)=>!o[e]);throw new Error("Could not find weights in manifest with names: "+"".concat(t.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce((t,e,n)=>(e&&t.push(n),t),[]),u=[];c.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)})});const l=await t(u),d={};let p=0;return c.forEach(t=>{const n=e[t].paths.length;let a=0;for(let e=0;e<n;e++)a+=l[p+e].byteLength;const r=new ArrayBuffer(a),o=new Uint8Array(r);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[p+e]);o.set(t,i),i+=t.byteLength}s[t].forEach(t=>{const e=r.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(f.e)(e,[t.manifestEntry]);for(const a in n)d[a]=n[a]}),p+=n}),d}}class ot{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(I.b)("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(h.c)().platform.fetch,Object(I.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(I.b)(2===t.length,()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,").")),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Object(f.g)(t),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(h){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,a=e.weightsManifest,r=e.generatedBy,s=e.convertedBy,o=e.format,i=e.signature,c=e.userDefinedMetadata;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");let u,l;if(null!=a){const t=await this.loadWeights(a);[u,l]=t}const d={modelTopology:n,weightSpecs:u,weightData:l,generatedBy:r,convertedBy:s,format:o};null!=i&&(d.signature=i),null!=c&&(d.userDefinedMetadata=c);const p=e.modelInitializer;return p&&(d.modelInitializer=p),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),a=t.substring(0,e),r=n>e?t.substring(n):"";return[a+"/",r]}(e),r=this.weightPathPrefix||n,s=[];for(const u of t)s.push(...u.weights);const o=[],i=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):o.push(r+t+a);this.weightUrlConverter&&o.push(...await Promise.all(i));const c=await at(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(f.d)(c)]}}function it(t){return null!=t.match(ot.URL_SCHEME_REGEX)}ot.URL_SCHEME_REGEX=/^https?:\/\//;const ct=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>it(t)):it(t),n)return ut(t,e)}return null};function ut(t,e){return new ot(t,e)}function lt(t,e){return ut(t,e)}m.registerSaveRouter(ct),m.registerLoadRouter(ct);class dt{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class pt{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function ht(t,e,n,a){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new dt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new dt({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new dt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:a})}function ft(t){return new pt(t)}var mt=n(1),bt=n(25),gt=n(94),yt=n(4),xt=n(45);const vt=Object(yt.b)({confusionMatrix_:function(t,e,n){const a=Object(mt.a)(t,"labels","confusionMatrix"),r=Object(mt.a)(e,"predictions","confusionMatrix");I.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n)),I.b(1===a.rank,()=>"Expected the rank of labels to be 1, but got ".concat(a.rank)),I.b(1===r.rank,()=>"Expected the rank of predictions to be 1, "+"but got ".concat(r.rank)),I.b(a.shape[0]===r.shape[0],()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(r.shape[0],". ")+"Labels and predictions should have the same number of elements."),I.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+"".concat(n));const s=Object(gt.a)(Object(q.a)(a,"int32"),n),o=Object(gt.a)(Object(q.a)(r,"int32"),n),i=Object(xt.a)(s),c=Object(bt.a)(i,o);return Object(q.a)(c,"int32")}});var wt=n(3),kt=n(60),Ot=n(159);let Nt;async function It(t,e){let n=Object(mt.a)(t,"img","toPixels");if(!(t instanceof Y.a)){const t=n;n=Object(q.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(n.rank,"."));const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(s));if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error("Unsupported type for toPixels: ".concat(n.dtype,".")+" Please use float32 or int32 tensors.");const o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let u=0;u<a*r;++u){const t=[0,0,0,255];for(let a=0;a<s;a++){const e=o[u*s+a];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===s?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[a]=e*i}const e=4*u;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){e.width=r,e.height=a;const t=e.getContext("2d"),n=new ImageData(c,r,a);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}const St=Object(yt.b)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(kt.c)(wt.hb,p.a.backendName)){const n={pixels:t},a={numChannels:e};return p.a.runKernel(wt.hb,n,a)}const[c,u]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,d;if(o?l=t.getContext("2d").getImageData(0,0,c,u).data:a||n?l=t.data:(s||r||i)&&(null==Nt&&(Nt=document.createElement("canvas").getContext("2d")),Nt.canvas.width=c,Nt.canvas.height=u,Nt.drawImage(t,0,0,c,u),l=Nt.getImageData(0,0,c,u).data),4===e)d=new Int32Array(l);else{const t=c*u;d=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)d[n*e+t]=l[4*n+t]}const h=[u,c,e];return Object(Ot.a)(d,h,"int32")}});function Tt(t,e){const n=t.shape.length,a=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[a-1]," vs. ").concat(n));if(0===Object(I.N)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const r=e.shape,s=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=t.shape,c=r.slice();c.pop();let u=1;for(let d=s;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Object(I.j)(t.shape).map(t=>t/u),1].slice(0,s);return[c,o,u,l]}var jt=n(99);function Ct(t,e,n){const a=t.shape.length;I.b(a===e.length,()=>"Error in slice".concat(a,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(a,").")),I.b(a===n.length,()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,")."));for(let r=0;r<a;++r)I.b(e[r]+n[r]<=t.shape[r],()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(e[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(t.shape[r],")"))}function Et(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function At(t,e,n){const a=[];for(let r=0;r<t.length;r++)a[r]=Math.ceil((e[r]-t[r])/n[r]);return a}function _t(t,e,n,a){const r=[...t];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Rt(t,e,n){return n<=t?n:n-(e-1)}function Dt(t,e){const n=[];for(let a=0;a<t;a++)n.push(e+a);return n}function Ft(t,e,n,a,r,s,o,i,c){const u=t.length;let l=new Array(u),d=new Array(u),p=new Array(u);if(e.length&&n>0){const c=e[0],u=n+1;l=Mt(o,c,u,a,t),d=zt(i,c,u,r,t),p=_t(s,c,u,t)}else for(let h=0;h<u;h++)l[h]=Pt(o,a,s,t,h,c),d[h]=Bt(i,r,s,t,h,c),p[h]=Lt(s,h,c);return{begin:l,end:d,strides:p}}function Mt(t,e,n,a,r){const s=[...r],o=Dt(n,e);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Rt(e,n,i);let o=a[r];t&1<<r&&(o=0),s[i]=o}return s}function zt(t,e,n,a,r){const s=[...r],o=Dt(n,e);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Rt(e,n,i);let o=a[r];t&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const t=r[i];s[i]<0&&(s[i]+=t),s[i]=I.i(0,s[i],r[i])}return s}function Lt(t,e,n){let a=t[e];return(n&1<<e||null==a)&&(a=1),a}function Pt(t,e,n,a,r,s){let o=e[r];const i=n[r]||1;(t&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=I.i(0,o,c-1),o}function Bt(t,e,n,a,r,s){let o=e[r];const i=n[r]||1;(t&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=i>0?I.i(0,o,c):I.i(-1,o,c-1),o}function Wt(t,e,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function Vt(t,e){let n=t.length>0?t[t.length-1]:1;for(let a=0;a<t.length-1;a++)n+=t[a]*e[a];return n}function Ut(t,e,n){let a;const r=t.shape.length;let s;return a="number"===typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),a.forEach(t=>{I.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map((e,n)=>e>=0?e:(I.b(-1===e,()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,".")),t.shape[n]-a[n])),[a,s]}function Gt(t,e,n,a,r,s,o,i,c){let u=e.slice(),l=n.slice(),d=a;null==a&&(d=new Array(u.length));const p=Et(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==c)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=t.length-u.length,f=Et(i),m=t.slice();f.forEach(t=>{u[t]=0,l[t]=1,m.splice(t,0,1)});const{begin:b,end:g,strides:y}=Ft(m,p,h,u,l,d,r,s,o);u=b,l=g,d=y;const x=Et(c);x.forEach(t=>{l[t]=u[t]+1,d[t]=1});const v=At(u,l,d),w=v.filter((t,e)=>-1===x.indexOf(e));return{nonStrided:d.every(t=>1===t),$begin:u,$end:l,$strides:d,size:v,newShape:m,outShape:w}}class Ht{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class qt{constructor(){this.classNameMap={}}static getMap(){return null==qt.instance&&(qt.instance=new qt),qt.instance}static register(t){qt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Kt(t){Object(I.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(I.b)("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(I.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),qt.register(t)}var Xt=n(21),Yt=n(121),Qt=n(10);const Zt="2.8.6";var Jt=n(19),$t=n(12),te=n(14),ee=n(9),ne=n(32),ae=n(23),re=n(20),se=n(29),oe=n(15);class ie extends Ht{minimize(t,e=!1,n){const{value:a,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:r[t.name]}));this.applyGradients(t)}else this.applyGradients(r);return Object(Jt.d)(r),e?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(se.f)(t,e)}dispose(){null!=this.iterations_&&Object(Jt.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(oe.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(ie,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class ce extends ie{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const a=p.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:Object(Jt.t)(()=>Object(re.a)(a).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:Object(Jt.t)(()=>Object(re.a)(a).variable(!1))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Object(Jt.t)(()=>{const t=Object($t.a)(Object(ee.a)(s,this.rho),Object(ee.a)(Object(ae.a)(r),1-this.rho)),e=Object(ee.a)(Object(te.a)(Object(ne.a)(Object($t.a)(o,this.epsilon)),Object(ne.a)(Object($t.a)(s,this.epsilon))),r),n=Object($t.a)(Object(ee.a)(o,this.rho),Object(ee.a)(Object(ae.a)(e),1-this.rho));s.assign(t),o.assign(n);const i=Object($t.a)(Object(ee.a)(e,-this.learningRate),a);a.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Jt.d)(this.accumulatedGrads.map(t=>t.variable)),Object(Jt.d)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ce.className="Adadelta",Kt(ce);var ue=n(101);class le extends ie{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const a=p.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:Object(Jt.t)(()=>Object(ue.a)(a.shape,this.initialAccumulatorValue).variable(t))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=this.accumulatedGrads[n].variable;Object(Jt.t)(()=>{const t=Object($t.a)(s,Object(ae.a)(r));s.assign(t);const e=Object($t.a)(Object(ee.a)(Object(te.a)(r,Object(ne.a)(Object($t.a)(t,p.a.backend.epsilon()))),-this.learningRate),a);a.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Jt.d)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}le.className="Adagrad",Kt(le);var de=n(41),pe=n(13);class he extends ie{constructor(t,e,n,a=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Jt.t)(()=>{this.accBeta1=Object(oe.a)(e).variable(),this.accBeta2=Object(oe.a)(n).variable()}),null==a&&(this.epsilon=p.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Jt.t)(()=>{const n=Object(pe.a)(1,this.accBeta1),a=Object(pe.a)(1,this.accBeta2);e.forEach((e,r)=>{const s=p.a.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(e,"/m"),variable:Object(Jt.t)(()=>Object(re.a)(s).variable(!1))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(e,"/v"),variable:Object(Jt.t)(()=>Object(re.a)(s).variable(!1))});const o=Array.isArray(t)?t[r].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,u=Object($t.a)(Object(ee.a)(i,this.beta1),Object(ee.a)(o,1-this.beta1)),l=Object($t.a)(Object(ee.a)(c,this.beta2),Object(ee.a)(Object(ae.a)(o),1-this.beta2)),d=Object(te.a)(u,n),h=Object(te.a)(l,a);i.assign(u),c.assign(l);const f=Object($t.a)(Object(ee.a)(Object(te.a)(d,Object($t.a)(Object(ne.a)(h),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Object(ee.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(ee.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Jt.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(Jt.d)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(Jt.t)(()=>{this.accBeta1.assign(Object(de.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(de.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}he.className="Adam",Kt(he);var fe=n(36),me=n(66);class be extends ie{constructor(t,e,n,a=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Jt.t)(()=>{this.iteration=Object(oe.a)(0).variable(),this.accBeta1=Object(oe.a)(e).variable()}),null==a&&(this.epsilon=p.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Jt.t)(()=>{const n=Object(pe.a)(1,this.accBeta1),a=Object(te.a)(-this.learningRate,Object($t.a)(Object(ee.a)(this.iteration,this.decay),1));e.forEach((e,r)=>{const s=p.a.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(e,"/m"),variable:Object(re.a)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(e,"/v"),variable:Object(re.a)(s).variable(!1)});const o=Array.isArray(t)?t[r].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,u=Object($t.a)(Object(ee.a)(i,this.beta1),Object(ee.a)(o,1-this.beta1)),l=Object(ee.a)(c,this.beta2),d=Object(fe.a)(o),h=Object(me.a)(l,d);i.assign(u),c.assign(h);const f=Object($t.a)(Object(ee.a)(Object(te.a)(a,n),Object(te.a)(u,Object($t.a)(h,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Object($t.a)(this.iteration,1)),this.accBeta1.assign(Object(ee.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Jt.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(Jt.d)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}be.className="Adamax",Kt(be);class ge extends ie{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const r=p.a.registeredVariables[e];Object(Jt.t)(()=>{const t=Object($t.a)(Object(ee.a)(this.c,a),r);r.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(Jt.l)(Object(oe.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}ge.className="SGD",Kt(ge);class ye extends ge{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(oe.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const a=p.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:Object(Jt.t)(()=>Object(re.a)(a).variable(t))}}const r=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Object(Jt.t)(()=>{let t;const e=Object($t.a)(Object(ee.a)(this.m,r),s);t=this.useNesterov?Object($t.a)(Object(ee.a)(this.c,Object($t.a)(s,Object(ee.a)(e,this.m))),a):Object($t.a)(Object(ee.a)(this.c,e),a),r.assign(e),a.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Jt.d)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}ye.className="Momentum",Kt(ye);class xe extends ie{constructor(t,e=.9,n=0,a=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=p.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const a=p.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:Object(Jt.t)(()=>Object(re.a)(a).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:Object(Jt.t)(()=>Object(re.a)(a).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:Object(Jt.t)(()=>Object(re.a)(a).variable(!1))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(Jt.t)(()=>{const t=Object($t.a)(Object(ee.a)(s,this.decay),Object(ee.a)(Object(ae.a)(r),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=Object($t.a)(Object(ee.a)(e,this.decay),Object(ee.a)(r,1-this.decay)),c=Object(te.a)(Object(ee.a)(r,this.learningRate),Object(ne.a)(Object(pe.a)(t,Object($t.a)(Object(ae.a)(i),this.epsilon)))),u=Object($t.a)(Object(ee.a)(o,this.momentum),c);s.assign(t),e.assign(i),o.assign(u);const l=Object(pe.a)(a,u);a.assign(l)}else{const t=Object($t.a)(Object(ee.a)(s,this.decay),Object(ee.a)(Object(ae.a)(r),1-this.decay)),e=Object($t.a)(Object(ee.a)(o,this.momentum),Object(te.a)(Object(ee.a)(r,this.learningRate),Object(ne.a)(Object($t.a)(t,this.epsilon))));s.assign(t),o.assign(e);const n=Object(pe.a)(a,e);a.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Jt.d)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(Jt.d)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(Jt.d)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}xe.className="RMSProp",Kt(xe);var ve=n(79),we=n(17),ke=n(30);class Oe{static sgd(t){return new ge(t)}static momentum(t,e,n=!1){return new ye(t,e,n)}static rmsprop(t,e=.9,n=0,a=null,r=!1){return new xe(t,e,n,a,r)}static adam(t=.001,e=.9,n=.999,a=null){return new he(t,e,n,a)}static adadelta(t=.001,e=.95,n=null){return new ce(t,e,n)}static adamax(t=.002,e=.9,n=.999,a=null,r=0){return new be(t,e,n,a,r)}static adagrad(t,e=.1){return new le(t,e)}}const Ne={sgd:Oe.sgd,momentum:Oe.momentum,adadelta:Oe.adadelta,adagrad:Oe.adagrad,rmsprop:Oe.rmsprop,adamax:Oe.adamax,adam:Oe.adam};var Ie=n(208),Se=n(57),Te=n(33),je=n(16);function Ce(t,e){const n=t[0].length;t.forEach((t,e)=>{I.b(t.length===n,()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")"))}),I.b(e>=0&&e<n,()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,"."));const a=t[0];t.forEach((t,r)=>{for(let s=0;s<n;s++)I.b(s===e||t[s]===a[s],()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,"."))})}function Ee(t,e){const n=t[0].slice();for(let a=1;a<t.length;a++)n[e]+=t[a][e];return n}var Ae=n(26),_e=n(37);const Re=30;function De(t){return t<=Re?t:Object(I.G)(t,Math.floor(Math.sqrt(t)))}function Fe(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Me(t,e,n,a=!0){let r=[];if(a)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let a=0;a<n;++a)r=r.concat([t[a+1]/e[a],e[a]]);r=r.concat(t.slice(n+1))}return r}function ze(t,e,n=!0){const a=[];if(n){a.push(e);for(let n=e+1;n<t;++n)n<=2*e?(a.push(n),a.push(n-(e+1))):a.push(n)}else{const n=[],r=[];for(let a=1;a<t;++a)a>=2*e+1||a%2===1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function Le(t,e,n,a=!0){const r=[];a?r.push(t[0]/n):r.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?a?r.push(e[s-1]*t[s]):r.push(t[s]/e[s-1]):r.push(t[s]);return r}function Pe(t,e){const n=[0];for(let a=0;a<e;++a)n.push(t[a][0]);return n}function Be(t,e,n){const a=t.slice(0,1);for(let r=0;r<n;++r)a.push(t[r+1]-e[r][0]-e[r][1]);return a}const We=1.7580993408473768,Ve=1.0507009873554805,Ue=.3275911,Ge=.254829592,He=-.284496736,qe=1.421413741,Ke=-1.453152027,Xe=1.061405429;function Ye(...t){Object(h.c)().getBool("IS_TEST")||console.warn(...t)}function Qe(...t){Object(h.c)().getBool("IS_TEST")||console.log(...t)}function Ze(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let a=0;a<n.length;a+=2)n[a]=t[a/2],n[a+1]=e[a/2];return n}function Je(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<t.length;a+=2)e[a/2]=t[a],n[a/2]=t[a+1];return{real:e,imag:n}}function $e(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let r=0;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],a[Math.floor(r/4)]=t[r+1];return{real:n,imag:a}}function tn(t){const e=Math.floor(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let r=2;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],a[Math.floor(r/4)]=t[r+1];return{real:n,imag:a}}function en(t,e){return{real:t[2*e],imag:t[2*e+1]}}function nn(t,e,n,a){t[2*a]=e,t[2*a+1]=n}function an(t,e){const n=new Float32Array(t/2),a=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const s=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function rn(t,e,n){const a=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(a),imag:Math.sin(a)}}function sn(t,e,n=0){let a=[];if("number"===typeof e)Object(I.b)(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),a=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(I.b)(r<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const a=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-a}Object(I.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),a=e}return a}function on(t,e){let n,a=!1;for(t<=Re?(n=t,a=!0):n=Object(I.G)(t,Math.floor(Math.sqrt(t)));!a;)n>e||n===t?a=!0:n=Object(I.G)(t,n+1);return n}function cn(t,e,n){const a=[],r=t.length;for(let s=0;s<r;s++)s!==e?a.push(t[s]):a.push(n);return a}function un(t,e,n,a){const r=e.shape.length,s=t.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(t.shape[d]!==e.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(t.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(e.shape[d],"."));const o=t.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<a;++d)i.push(t.shape[d]),c*=t.shape[d];for(let d=a;d<n;d++)i.push(t.shape[d]),u*=t.shape[d];for(let d=a;d<r;d++)i.push(e.shape[d]);for(let d=n+1;d<s;d++)i.push(t.shape[d]),l*=t.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:o,outputShape:i}}function ln(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(Se.a)(t.shape),a=Object(q.a)(t,"float32"),r=n.complex(a,e);return e.dispose(),a.dispose(),r}if(!Object(I.p)(t.dtype,e))return p.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const a=n.real(t),r=Object(q.a)(a,e);return a.dispose(),r}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(oe.a)(0,t.dtype),a=n.notEqual(t,e);return e.dispose(),a}throw new Error("Error in Cast: failed to cast ".concat(t.dtype," to ").concat(e))}function dn(t,e){return p.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function pn(t){try{return t.map(t=>Object(Qt.decodeString)(t))}catch(jo){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(jo))}}function hn(t){return t.map(t=>Object(Qt.encodeString)(t))}var fn=n(131),mn=n(65),bn=n(163),gn=n(124),yn=n(71);const xn={kernelName:wt.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(yn.a)(Object(q.a)(n,"float32"),-1))}}};var vn=n(27);const wn={kernelName:wt.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ae.a)(Object(q.a)(n,"float32")),a=Object(ne.a)(Object(pe.a)(Object(oe.a)(1),e));return Object(vn.a)(Object(te.a)(t,a))}}}},kn={kernelName:wt.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ne.a)(Object(pe.a)(Object(ae.a)(Object(q.a)(n,"float32")),1));return Object(te.a)(t,e)}}}};var On=n(8),Nn=n(18);const In={kernelName:wt.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=je.a(n.shape,a.shape);return{a:()=>{let e=t;const a=je.c(n.shape,r);return a.length>0&&(e=Object(Nn.a)(e,a)),Object(On.a)(e,n.shape)},b:()=>{let e=t;const n=je.c(a.shape,r);return n.length>0&&(e=Object(Nn.a)(e,n)),Object(On.a)(e,a.shape)}}}},Sn={kernelName:wt.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,a)=>{n[a]=()=>t.clone()}),n}},Tn={kernelName:wt.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(re.a)(n)}}},jn={kernelName:wt.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(re.a)(n)}}},Cn={kernelName:wt.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(ne.a)(Object(pe.a)(Object(oe.a)(1),Object(ae.a)(Object(q.a)(n,"float32")))))}}},En={kernelName:wt.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ne.a)(Object($t.a)(Object(oe.a)(1),Object(ae.a)(Object(q.a)(n,"float32"))));return Object(te.a)(t,e)}}}},An={kernelName:wt.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Object(je.a)(n.shape,a.shape);return{a:()=>{const e=Object($t.a)(Object(ae.a)(n),Object(ae.a)(a));let s=Object(ee.a)(t,Object(te.a)(a,e));const o=Object(je.c)(n.shape,r);return o.length>0&&(s=Object(Nn.a)(s,o)),Object(On.a)(s,n.shape)},b:()=>{const e=Object($t.a)(Object(ae.a)(n),Object(ae.a)(a));let s=Object(vn.a)(Object(ee.a)(t,Object(te.a)(n,e)));const o=Object(je.c)(a.shape,r);return o.length>0&&(s=Object(Nn.a)(s,o)),Object(On.a)(s,a.shape)}}}},_n={kernelName:wt.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object($t.a)(Object(ae.a)(Object(q.a)(n,"float32")),1))}}},Rn={kernelName:wt.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(pe.a)(Object(oe.a)(1),Object(ae.a)(Object(q.a)(n,"float32"))))}}};const Dn=Object(yt.b)({avgPool3dGrad_:function(t,e,n,a,r=[1,1,1],s,o){const i=Object(mt.a)(t,"dy","avgPool3dGrad"),c=Object(mt.a)(e,"input","avgPool3dGrad");let u=i,l=c,d=!1;4===c.rank&&(d=!0,u=Object(On.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Object(On.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),I.b(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,".")),I.b(5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,".")),I.b(Ae.h(a,r),()=>"Error in avgPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(a," and dilations '").concat(r,"'")),null!=o&&I.b(I.v(s),()=>"Error in avgPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(o," but got pad ").concat(s,"."));const h={dy:u,input:l},f={filterSize:n,strides:a,dilations:r,pad:s,dimRoundingMode:o},m=p.a.runKernel(wt.q,h,f);return d?Object(On.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Fn={kernelName:wt.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,dilations:o,pad:i,dimRoundingMode:c}=n,u=null==o?[1,1,1]:o;return{x:()=>Dn(t,a,r,s,u,i,c)}}};const Mn=Object(yt.b)({avgPoolGrad_:function(t,e,n,a,r){const s=Object(mt.a)(t,"dy","avgPoolGrad"),o=Object(mt.a)(e,"input","avgPoolGrad");I.b(o.rank===s.rank,()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")"));let i=o,c=s,u=!1;3===o.rank&&(u=!0,i=Object(On.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=Object(On.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),I.b(4===c.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,".")),I.b(4===i.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,"."));const l={dy:c,input:i},d={filterSize:n,strides:a,pad:r},h=p.a.runKernel(wt.r,l,d);return u?Object(On.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),zn={kernelName:wt.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,pad:o}=n;return{x:()=>Mn(t,a,r,s,o)}}},Ln={kernelName:wt.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,r]=e,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Object(bt.a)(t,r,!1,!1),b:()=>Object(bt.a)(t,a,!0,!1)}:s&&!o?{a:()=>Object(bt.a)(r,t,!1,!0),b:()=>Object(bt.a)(a,t,!1,!1)}:{a:()=>Object(bt.a)(r,t,!0,!0),b:()=>Object(bt.a)(t,a,!0,!0)}:{a:()=>Object(bt.a)(t,r,!1,!0),b:()=>Object(bt.a)(a,t,!0,!1)}}};var Pn=n(86);const Bn={kernelName:wt.t,gradFunc:(t,e,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Object(Pn.a)(t,a,r)}}},Wn={kernelName:wt.v,gradFunc:(t,e,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>Object(Nn.a)(t,i,!0)}}},Vn={kernelName:wt.w,gradFunc:t=>({x:()=>t.clone()})},Un={kernelName:wt.x,gradFunc:t=>({x:()=>Object(re.a)(t)})};var Gn=n(47),Hn=n(48),qn=n(52),Kn=n(31);const Xn={kernelName:wt.y,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Object(Kn.a)(Object(qn.a)(Object(Gn.a)(a,r),Object(Hn.a)(a,s)),t,Object(re.a)(t))}}},Yn={kernelName:wt.A,inputsToSave:["x"],gradFunc:xn.gradFunc};var Qn=n(63);const Zn={kernelName:wt.B,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map(t=>t.shape),{axis:r}=n,s=Object(I.I)(r,e[0].shape)[0],o=a.map(t=>t[s]);return Object(Qn.a)(t,o,s).map(t=>()=>t)}};var Jn=n(122),$n=n(120);const ta={kernelName:wt.C,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return I.b(Ae.i(s),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")),{x:()=>Object($n.a)(a.shape,t,r,o,i,c),filter:()=>Object(Jn.a)(a,t,r.shape,o,i,c)}}};var ea=n(56);const na={kernelName:wt.E,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Object(ea.a)(t,r,s,o,i,1,c),filter:()=>Object(Jn.a)(t,a,r.shape,s,o,i,c)}}};const aa=Object(yt.b)({conv3DBackpropFilter_:function(t,e,n,a,r){let s=t;4===t.rank&&(s=Object(On.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=Object(On.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),I.b(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,".")),I.b(5===o.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,".")),I.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,".")),I.b(s.shape[4]===n[3],()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],".")),I.b(o.shape[4]===n[4],()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],")."));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return p.a.runKernel(wt.G,i,c)}});var ra=n(164);const sa={kernelName:wt.F,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s}=n;I.b(Object(Ae.i)(a),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'"));const[o,i]=e;return{x:()=>Object(ra.a)(o.shape,t,i,r,s),filter:()=>aa(o,t,i.shape,r,s)}}};var oa=n(156);const ia={kernelName:wt.I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(vn.a)(Object(oa.a)(Object(q.a)(n,"float32"))),t)}}};var ca=n(157);const ua={kernelName:wt.J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(ca.a)(Object(q.a)(n,"float32")),t)}}};var la=n(104);const da={kernelName:wt.L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const e=Object(Te.f)([r],a.rank);let n=Object(la.a)(t,r,s,!o);return null!=e&&(n=Object(xt.a)(n,e)),n}}}};var pa=n(168),ha=n(167);const fa={kernelName:wt.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;I.b(Ae.i(i),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'"));const[c,u]=e;return I.b(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,".")),I.b(4===u.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(u.rank,".")),I.b(c.shape[3]===u.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(u.shape[2],".")),I.b(Ae.h(r,i),()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'.")),null!=o&&I.b(I.v(s),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(s,".")),{x:()=>Object(ha.a)(c.shape,t,u,r,s,a,o),filter:()=>Object(pa.a)(c,t,u.shape,r,s,a,o)}}},ma={kernelName:wt.S,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,s={x:a,filter:r,dy:t},o={x:a,filter:r,dy:t};return{x:()=>p.a.runKernel(wt.U,s,n),filter:()=>p.a.runKernel(wt.T,o,n)}}},ba={kernelName:wt.V,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>p.a.runKernel(wt.W,a)}}};var ga=n(35);const ya={kernelName:wt.Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=Object(ee.a)(Object(ga.a)(Object(vn.a)(Object(ae.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(ee.a)(t,a)}}},xa={kernelName:wt.Z,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,n)}}},va={kernelName:wt.ab,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Object(On.a)(t,n.shape)}}},wa={kernelName:wt.bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(ga.a)(n))}}},ka={kernelName:wt.fb,gradFunc:t=>({x:()=>Object(re.a)(t)})},Oa={kernelName:wt.gb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Object(je.a)(n.shape,a.shape);return{a:()=>{const e=Object(te.a)(t,Object(q.a)(a,"float32")),s=Object(je.c)(n.shape,r);return s.length>0?Object(On.a)(Object(Nn.a)(e,s),n.shape):e},b:()=>{let e=Object(ee.a)(t,Object(q.a)(n,"float32"));const s=Object(je.c)(a.shape,r);s.length>0&&(e=Object(On.a)(Object(Nn.a)(e,s),a.shape));const o=Object(ae.a)(a);return Object(vn.a)(Object(te.a)(e,Object(q.a)(o,"float32")))}}}};var Na=n(153),Ia=n(75);const Sa={kernelName:wt.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=e,c=null==i?Object(oe.a)(1):i,u=Object(je.c)(s.shape,r.shape),l=[];if(1===s.rank){for(let t=0;t<r.shape.length-1;++t)l.push(r.shape[t]);l.push(1)}const d=Object(pe.a)(r,s),p=Object(ee.a)(t,c),h=Object(Na.a)(Object($t.a)(o,Object(oe.a)(a))),f=Object(ee.a)(Object(ee.a)(Object(ee.a)(h,h),h),Object(oe.a)(-.5));return{x:()=>1===s.rank?Object(On.a)(Object(ee.a)(Object(ee.a)(t,Object(Ia.a)(Object(On.a)(h,[1,1,1,s.shape[0]]),l)),c),r.shape):Object(On.a)(Object(ee.a)(Object(ee.a)(t,h),c),r.shape),mean:()=>{let t=Object(ee.a)(Object(ee.a)(h,Object(oe.a)(-1)),p);return 1===s.rank&&(t=Object(Nn.a)(t,u)),Object(On.a)(t,s.shape)},variance:()=>{let t=Object(ee.a)(Object(ee.a)(f,d),p);return 1===s.rank&&(t=Object(Nn.a)(t,u)),Object(On.a)(t,s.shape)},scale:()=>{const e=Object(ee.a)(d,h);let n=Object(ee.a)(t,e);return 1===s.rank&&(n=Object(Nn.a)(n,u)),Object(On.a)(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Object(Nn.a)(e,u)),Object(On.a)(e,s.shape)}}}};var Ta=n(117);const ja={kernelName:wt.mb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,r]=e,{axis:s}=n,o=Object(I.I)(s,a.shape)[0];return{x:()=>{const e=a.shape,n=r.size,i=e.slice(0,o),c=i.length,u=e.slice(s,e.length).slice(1),l=u.length,d=Ca(0,c),p=Ca(c+1,c+1+l),h=Ea([i,[n],u]),f=Object(On.a)(t,h),m=Object(On.a)(r,[n]),b=Ea([[c],d,p]),g=Object(xt.a)(f,b);let y=Object(Ta.a)(g,m,a.shape[o]);const x=Object(Te.h)(b);return y=Object(xt.a)(y,x),y},indices:()=>r}}};function Ca(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function Ea(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}const Aa={kernelName:wt.ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>Object(re.a)(n),b:()=>Object(re.a)(a)}}},_a={kernelName:wt.qb,gradFunc:t=>({x:()=>Object(q.a)(t,"float32")})},Ra={kernelName:wt.sb,gradFunc:t=>({x:()=>Object(re.a)(t)})},Da={kernelName:wt.tb,gradFunc:t=>({x:()=>Object(re.a)(t)})},Fa={kernelName:wt.ub,gradFunc:t=>({x:()=>Object(re.a)(t)})};var Ma=n(39);const za={kernelName:wt.xb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:r}=n,s=Object(Ma.a)(a,0);return{x:()=>Object(Kn.a)(s,t,Object(ee.a)(t,r))}}},La={kernelName:wt.Cb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object($t.a)(n,1))}}},Pa={kernelName:wt.Bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(q.a)(n,"float32"))}}},Ba={kernelName:wt.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n;return{logits:()=>{const e=Object(ga.a)(a);return Object(pe.a)(t,Object(ee.a)(Object(Nn.a)(t,r,!0),e))}}}};const Wa=Object(yt.b)({localResponseNormalizationBackprop_:function(t,e,n,a=5,r=1,s=1,o=.5){const i={x:t,y:e,dy:n},c={depthRadius:a,bias:r,alpha:s,beta:o};return p.a.runKernel(wt.wb,i,c)}}),Va={kernelName:wt.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Wa(a,r,t,s,o,i,c)}}};var Ua=n(68);function Ga(t,e,n,a){return e.rank<n.rank&&(e=Object(On.a)(e,Te.e(e.shape,a))),t.rank<n.rank&&(t=Object(On.a)(t,Te.e(t.shape,a))),{x:()=>Object(ee.a)(t,Object(q.a)(Object(Ua.a)(n,e),t.dtype))}}const Ha={kernelName:wt.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:r}=a,s=e[0],o=Ga(t,e[1],s,I.I(r,s.shape));return{x:()=>o.x()}}};var qa=n(82);const Ka={kernelName:wt.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>Object(ee.a)(t,Object(q.a)(Object(Gn.a)(n,a),"float32")),b:()=>Object(ee.a)(t,Object(q.a)(Object(qa.a)(n,a),"float32"))}}};const Xa=Object(yt.b)({maxPool3dGrad_:function(t,e,n,a,r,s=[1,1,1],o,i){const c=Object(mt.a)(t,"dy","maxPool3dGrad"),u=Object(mt.a)(e,"input","maxPool3dGrad"),l=Object(mt.a)(n,"output","maxPool3dGrad");let d=c,h=u,f=l,m=!1;4===u.rank&&(m=!0,d=Object(On.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=Object(On.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=Object(On.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),I.b(5===d.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(d.rank,".")),I.b(5===h.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,".")),I.b(5===f.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(f.rank,".")),I.b(Ae.h(r,s),()=>"Error in maxPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(r," and dilations '").concat(s,"'")),null!=i&&I.b(I.v(o),()=>"Error in maxPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(i," but got pad ").concat(o,"."));const b={dy:d,input:h,output:f},g={filterSize:a,strides:r,dilations:s,pad:o,dimRoundingMode:i},y=p.a.runKernel(wt.Kb,b,g);return m?Object(On.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Ya={kernelName:wt.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,dilations:i,pad:c,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>Xa(t,a,r,s,o,l,c,u)}}};const Qa=Object(yt.b)({maxPoolGrad_:function(t,e,n,a,r,s,o){const i=Object(mt.a)(t,"dy","maxPoolGrad"),c=Object(mt.a)(e,"input","maxPoolGrad"),u=Object(mt.a)(n,"output","maxPoolGrad");I.b(c.rank===i.rank,()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")")),I.b(4===i.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,".")),I.b(4===c.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,".")),null!=o&&I.b(I.v(s),()=>"Error in maxPoolGrad: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(s,"."));const l={dy:i,input:c,output:u},d={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return p.a.runKernel(wt.Lb,l,d)}}),Za={kernelName:wt.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Qa(t,a,r,s,o,i)}}};var Ja=n(69);const $a={kernelName:wt.Ob,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n,s=I.I(r,a.shape),o=Object(Te.d)(a.shape,s)[1],i=I.N(o);return{x:()=>{const e=a.shape.slice();s.forEach(t=>{e[t]=1});const n=Object(On.a)(t,e);return Object(te.a)(Object(ee.a)(n,Object(Ja.a)(a.shape,"float32")),i)}}}},tr={kernelName:wt.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:r}=a,[s,o]=e,i=Ga(t,o,s,I.I(r,s.shape));return{x:()=>i.x()}}},er={kernelName:wt.Qb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>Object(ee.a)(t,Object(q.a)(Object(Hn.a)(n,a),"float32")),b:()=>Object(ee.a)(t,Object(q.a)(Object(Ma.a)(n,a),"float32"))}}};var nr=n(24);const ar={kernelName:wt.Rb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map(t=>t[0]);return{x:()=>Object(nr.a)(t,s,a.shape)}}};var rr=n(106);const sr={kernelName:wt.Sb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Object(je.a)(n.shape,a.shape);return{a:()=>{const e=Object(je.c)(n.shape,r);return e.length>0?Object(On.a)(Object(Nn.a)(t,e),n.shape):t},b:()=>{const e=Object(ee.a)(t,Object(vn.a)(Object(rr.a)(Object(te.a)(n,a)))),s=Object(je.c)(a.shape,r);return s.length>0?Object(On.a)(Object(Nn.a)(e,s),a.shape):e}}}},or={kernelName:wt.Ub,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Object(je.a)(n.shape,a.shape);return{a:()=>{const e=Object(ee.a)(t,Object(q.a)(a,"float32")),s=Object(je.c)(n.shape,r);return s.length>0?Object(On.a)(Object(Nn.a)(e,s),n.shape):e},b:()=>{const e=Object(ee.a)(t,Object(q.a)(n,"float32")),s=Object(je.c)(a.shape,r);return s.length>0?Object(On.a)(Object(Nn.a)(e,s),a.shape):e}}}},ir={kernelName:wt.Vb,gradFunc:t=>({x:()=>Object(vn.a)(t)})},cr={kernelName:wt.ac,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(Se.a)(n.shape,"float32")}}},ur={kernelName:wt.bc,gradFunc:t=>({x:()=>Object(re.a)(t)})};var lr=n(72);const dr={kernelName:wt.cc,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return Object(lr.a)(t,a).map(t=>()=>t)}},pr={kernelName:wt.dc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map(t=>t[0]);return{x:()=>Object(nr.a)(t,s,a.shape)}}};var hr=n(62);const fr={kernelName:wt.fc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,r]=e,s=n,o=a,i=je.a(s.shape,o.shape);return{a:()=>{const e=Object(q.a)(o,"float32");let n=Object(ee.a)(t,Object(ee.a)(e,Object(de.a)(s,Object(pe.a)(e,Object(oe.a)(1)))));const a=je.c(s.shape,i);return a.length>0&&(n=Object(Nn.a)(n,a)),Object(On.a)(n,s.shape)},b:()=>{const e=Object(Ma.a)(s,0),n=Object(Kn.a)(e,Object(hr.a)(s),Object(re.a)(s));let a=Object(ee.a)(t,Object(ee.a)(r,n));const c=je.c(o.shape,i);return c.length>0&&(a=Object(Nn.a)(a,c)),Object(On.a)(a,o.shape)}}}},mr={kernelName:wt.gc,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,r=Object(Ma.a)(n,0);return{x:()=>Object(Kn.a)(r,t,Object(ee.a)(t,a)),alpha:()=>{let e=Object(Kn.a)(r,Object(re.a)(t),Object(ee.a)(t,n));const s=Object(je.c)(a.shape,t.shape);return s.length>0&&(e=Object(Nn.a)(e,s)),Object(On.a)(e,a.shape)}}}},br={kernelName:wt.kc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=je.a(n.shape,a.shape);return{a:()=>{const e=Object(te.a)(t,Object(q.a)(a,"float32")),s=je.c(n.shape,r);return s.length>0?Object(On.a)(Object(Nn.a)(e,s),n.shape):e},b:()=>{let e=Object(ee.a)(t,Object(q.a)(n,"float32"));const s=je.c(a.shape,r);s.length>0&&(e=Object(On.a)(Object(Nn.a)(e,s),a.shape));const o=Object(ae.a)(a);return Object(vn.a)(Object(te.a)(e,Object(q.a)(o,"float32")))}}}},gr={kernelName:wt.lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(vn.a)(Object(ae.a)(n)))}}},yr={kernelName:wt.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=Object(ee.a)(Object(Hn.a)(n,6),Object(yn.a)(n));return{x:()=>Object(ee.a)(t,Object(q.a)(a,"float32"))}}},xr={kernelName:wt.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(q.a)(Object(yn.a)(n),"float32"))}}},vr={kernelName:wt.oc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(On.a)(t,n.shape)}}},wr={kernelName:wt.pc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>p.a.runKernel(wt.qc,r,n)}}},kr={kernelName:wt.rc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>p.a.runKernel(wt.sc,r,n)}}};var Or=n(42);const Nr={kernelName:wt.tc,gradFunc:(t,e,n)=>{const{dims:a}=n,r=Object(I.I)(a,t.shape);return{x:()=>Object(Or.a)(t,r)}}},Ir={kernelName:wt.vc,gradFunc:t=>({x:()=>Object(re.a)(t)})},Sr={kernelName:wt.wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(vn.a)(Object(te.a)(t,Object(ee.a)(Object(de.a)(n,1.5),2)))}}};var Tr=n(83);const jr={kernelName:wt.yc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(q.a)(Object(re.a)(n),"float32"),t:()=>Object(ee.a)(t,Object(q.a)(n,t.dtype)),e:()=>Object(ee.a)(t,Object(q.a)(Object(Tr.a)(n),t.dtype))}}},Cr={kernelName:wt.zc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Ma.a)(n,Object(oe.a)(0)),a=Object(oe.a)(We),r=Object(oe.a)(Ve),s=Object(ee.a)(t,r),o=Object(ee.a)(Object(ee.a)(t,a),Object(ga.a)(Object(q.a)(n,"float32")));return Object(Kn.a)(e,s,o)}}}},Er={kernelName:wt.Ac,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(ee.a)(n,Object(pe.a)(Object(oe.a)(1),n)))}}},Ar={kernelName:wt.Bc,gradFunc:t=>({x:()=>Object(re.a)(t)})};var _r=n(103);const Rr={kernelName:wt.Cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(_r.a)(Object(q.a)(n,"float32")),t)}}};var Dr=n(140);const Fr={kernelName:wt.Dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(Dr.a)(Object(q.a)(n,"float32")),t)}}};var Mr=n(49);const zr={kernelName:wt.Ec,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:r,size:s}=n,o=a.shape,[i,c]=Ut(a,r,s),u=[];for(let l=0;l<t.rank;l++)u.push([i[l],o[l]-i[l]-c[l]]);return{x:()=>Object(Mr.a)(t,u)}}},Lr={kernelName:wt.Fc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:r}=n,s=Object(ee.a)(t,a);return{logits:()=>Object(pe.a)(s,Object(ee.a)(Object(Nn.a)(s,[r],!0),a))}}};var Pr=n(74);const Br={kernelName:wt.Gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(Pr.a)(n))}}};var Wr=n(80);const Vr={kernelName:wt.Hc,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>Object(Wr.a)(t,a,r)}}};var Ur=n(28);const Gr={kernelName:wt.Jc,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>Object(Ur.a)(t,a)}}},Hr={kernelName:wt.Kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(ee.a)(Object(ne.a)(Object(q.a)(n,"float32")),2))}}},qr={kernelName:wt.Lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(ee.a)(Object(q.a)(n,"float32"),2))}}},Kr={kernelName:wt.Mc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Object(oe.a)(2);return{a:()=>Object(ee.a)(t,Object(ee.a)(r,Object(pe.a)(n,a))),b:()=>Object(ee.a)(t,Object(ee.a)(r,Object(pe.a)(a,n)))}}},Xr={kernelName:wt.Nc,gradFunc:t=>({x:()=>Object(re.a)(t)})},Yr={kernelName:wt.Pc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=je.a(n.shape,a.shape);return{a:()=>{let e=t;const a=je.c(n.shape,r);return a.length>0&&(e=Object(Nn.a)(e,a)),Object(On.a)(e,n.shape)},b:()=>{let e=t;const n=je.c(a.shape,r);return n.length>0&&(e=Object(Nn.a)(e,n)),Object(On.a)(Object(vn.a)(e),a.shape)}}}},Qr={kernelName:wt.Qc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,r=a.shape.slice(),{axis:s}=n;Object(I.I)(s,a.shape).forEach(t=>{r[t]=1});const o=Object(On.a)(t,r),i=Object(ee.a)(o,Object(Ja.a)(a.shape,"float32"));return{x:()=>i}}},Zr={kernelName:wt.Rc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(ae.a)(Object(_r.a)(n)))}}},Jr={kernelName:wt.Sc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(pe.a)(Object(oe.a)(1),Object(ae.a)(n)),t)}}},$r={kernelName:wt.Tc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:r}=n;return{x:()=>{let e=Object(re.a)(a);if(1===a.rank)for(let n=0;n<r[0];++n)e=Object($t.a)(e,Object(nr.a)(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)e=Object($t.a)(e,Object(nr.a)(t,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)e=Object($t.a)(e,Object(nr.a)(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)e=Object($t.a)(e,Object(nr.a)(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},ts={kernelName:wt.Vc,gradFunc:(t,e,n)=>{const a=n,{perm:r}=a,s=Te.h(r);return{x:()=>Object(xt.a)(t,s)}}};var es=n(53);const ns={kernelName:wt.Xc,gradFunc:(t,e,n)=>{const a=n,{axis:r}=a;return{value:()=>Object(es.a)(t,r)}}};var as=n(54),rs=n(81);const ss=[xn,wn,kn,In,Sn,Tn,jn,Cn,En,An,_n,Rn,Fn,zn,Ln,Bn,Wn,Vn,Un,Xn,Yn,Zn,na,ta,sa,ia,ua,da,fa,ma,br,ba,ya,xa,va,wa,Oa,ka,Sa,ja,Aa,_a,Ra,Da,Fa,za,La,Pa,Ba,Va,Ha,Ha,Ka,Ya,Za,$a,tr,er,ar,sr,or,ir,cr,ur,dr,pr,pr,fr,mr,gr,yr,xr,vr,wr,kr,Nr,Ir,Sr,jr,Cr,Er,Ar,Rr,Fr,zr,Lr,Br,Vr,Vr,Gr,Gr,Hr,Kr,qr,Xr,Yr,Qr,Zr,Jr,$r,ts,ns,{kernelName:wt.Yc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(me.a)(e,Object(re.a)(e)),a=Object(rs.a)(t,n);let r=Object(Gn.a)(e,Object(oe.a)(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=Object(as.a)(r,i+1);r=Object(qn.a)(r,Object(Ja.a)(a.shape,"bool"));const o=Object(re.a)(a);return Object(Kn.a)(r,a,o)}(t,n)}}},{kernelName:wt.Zc,gradFunc:t=>({x:()=>Object(re.a)(t)})}];for(const Co of ss)Object(kt.e)(Co);Y.a.prototype.abs=function(){return this.throwIfDisposed(),Object(fe.a)(this)};var os=n(171);Y.a.prototype.acos=function(){return this.throwIfDisposed(),Object(os.a)(this)};var is=n(172);Y.a.prototype.acosh=function(){return this.throwIfDisposed(),Object(is.a)(this)};var cs=n(205);Y.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object(cs.a)(this,t)},Y.a.prototype.add=function(t){return this.throwIfDisposed(),Object($t.a)(this,t)};var us=n(133);Y.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(us.a)(this,t,e)};var ls=n(134);Y.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(ls.a)(this,t,e)};var ds=n(135);Y.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(ds.a)(this,t)};var ps=n(136);Y.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(ps.a)(this,t)},Y.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(I.b)(1===this.size,()=>"The array must have only 1 element."),Object(On.a)(this,[])},Y.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(q.a)(this,t)},Y.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(On.a)(this,[this.size])},Y.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(On.a)(this,[t,e])},Y.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(On.a)(this,[t,e,n])},Y.a.prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),Object(On.a)(this,[t,e,n,a])},Y.a.prototype.as5D=function(t,e,n,a,r){return this.throwIfDisposed(),Object(On.a)(this,[t,e,n,a,r])};var hs=n(174);Y.a.prototype.asin=function(){return this.throwIfDisposed(),Object(hs.a)(this)};var fs=n(175);Y.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(fs.a)(this)};var ms=n(176);Y.a.prototype.atan=function(){return this.throwIfDisposed(),Object(ms.a)(this)};var bs=n(137);Y.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(bs.a)(this,t)};var gs=n(177);Y.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(gs.a)(this)};var ys=n(102);Y.a.prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),Object(ys.a)(this,t,e,n,a)},Y.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(Wr.a)(this,t,e)};var xs=n(73);Y.a.prototype.batchNorm=function(t,e,n,a,r){return this.throwIfDisposed(),Object(xs.a)(this,t,e,n,a,r)};var vs=n(92);Y.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(vs.a)(this,t)},Y.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(q.a)(this,t)};var ws=n(180);Y.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(ws.a)(this)};var ks=n(181);Y.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(ks.a)(this,t,e)},Y.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Y.a&&(t=[t]),Object(Ur.a)([this,...t],e)};var Os=n(138);Y.a.prototype.conv1d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Object(Os.a)(this,t,e,n,a,r,s)};var Ns=n(139);Y.a.prototype.conv2dTranspose=function(t,e,n,a,r){return this.throwIfDisposed(),Object(Ns.a)(this,t,e,n,a,r)},Y.a.prototype.conv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Object(ea.a)(this,t,e,n,a,r,s)},Y.a.prototype.cos=function(){return this.throwIfDisposed(),Object(_r.a)(this)},Y.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(Dr.a)(this)},Y.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(la.a)(this,t,e,n)};var Is=n(141);Y.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Is.a)(this,t,e)};var Ss=n(67);Y.a.prototype.depthwiseConv2D=function(t,e,n,a,r,s){return Object(Jt.b)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(Ss.a)(this,t,e,n,a,r,s)},Y.a.prototype.depthwiseConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Object(Ss.a)(this,t,e,n,a,r,s)};var Ts=n(142);Y.a.prototype.dilation2d=function(t,e,n,a,r){return this.throwIfDisposed(),Object(Ts.a)(this,t,e,n,a,r)};var js=n(143);Y.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(js.a)(this,t)},Y.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object(cs.b)(this,t)},Y.a.prototype.div=function(t){return this.throwIfDisposed(),Object(te.a)(this,t)};var Cs=n(144);Y.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(Cs.a)(this,t)};var Es=n(105);Y.a.prototype.elu=function(){return this.throwIfDisposed(),Object(Es.a)(this)};var As=n(204);Y.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(As.a)(this,t)},Y.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(Ua.a)(this,t)};var _s=n(184);Y.a.prototype.erf=function(){return this.throwIfDisposed(),Object(_s.a)(this)},Y.a.prototype.exp=function(){return this.throwIfDisposed(),Object(ga.a)(this)},Y.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(as.a)(this,t)};var Rs=n(185);Y.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(Rs.a)(this)};var Ds=n(115);Y.a.prototype.fft=function(){return this.throwIfDisposed(),Object(Ds.a)(this)},Y.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(On.a)(this,[this.size])},Y.a.prototype.floor=function(){return this.throwIfDisposed(),Object(rr.a)(this)};var Fs=n(100);Y.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(Fs.a)(this,t)},Y.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(rs.a)(this,t,e)},Y.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(As.b)(this,t)},Y.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(Gn.a)(this,t)},Y.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(As.c)(this,t)},Y.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(Ma.a)(this,t)};var Ms=n(96);Y.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(Ms.a)(this)};var zs=n(158);Y.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(zs.a)(this)};var Ls=n(186);Y.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(Ls.a)(this)};var Ps=n(187);Y.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(Ps.a)(this)};var Bs=n(188);Y.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(Bs.a)(this)};var Ws=n(108);Y.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(Ws.a)(this,t)},Y.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(As.d)(this,t)},Y.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(Hn.a)(this,t)},Y.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(As.e)(this,t)},Y.a.prototype.less=function(t){return this.throwIfDisposed(),Object(qa.a)(this,t)};var Vs=n(145);Y.a.prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),Object(Vs.a)(this,t,e,n,a)};var Us=n(190);Y.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(Us.a)(this)};var Gs=n(191);Y.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(Gs.a)(this,t)};var Hs=n(109);Y.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(Hs.a)(this,t,e)},Y.a.prototype.log=function(){return this.throwIfDisposed(),Object(hr.a)(this)};var qs=n(146);Y.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(qs.a)(this)},Y.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(qn.a)(this,t)},Y.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Tr.a)(this)};var Ks=n(110);Y.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(Ks.a)(this,t)};var Xs=n(148);Y.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(Xs.a)(this,t)},Y.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(bt.a)(this,t,e,n)};var Ys=n(111);Y.a.prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),Object(Ys.a)(this,t,e,n,a)};var Qs=n(59);Y.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(Qs.a)(this,t,e)},Y.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(cs.c)(this,t)},Y.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(me.a)(this,t)};var Zs=n(78);Y.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(Zs.a)(this,t,e)};var Js=n(93);Y.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object(Js.a)(this,t,e)},Y.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(cs.d)(this,t)};var $s=n(84);Y.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object($s.a)(this,t)};var to=n(149);Y.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(to.a)(this,t,e)},Y.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object(cs.e)(this,t)};var eo=n(112);Y.a.prototype.mod=function(t){return this.throwIfDisposed(),Object(eo.a)(this,t)},Y.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(cs.f)(this,t)},Y.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(ee.a)(this,t)},Y.a.prototype.neg=function(){return this.throwIfDisposed(),Object(vn.a)(this)};var no=n(118);Y.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(no.a)(this,t,e,n)},Y.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(As.f)(this,t)};var ao=n(85);Y.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object(ao.a)(this,t)},Y.a.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(gt.a)(this,t,e,n)};var ro=n(195);Y.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(ro.a)(this)},Y.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(Mr.a)(this,t,e)};var so=n(150);Y.a.prototype.pool=function(t,e,n,a,r){return this.throwIfDisposed(),Object(so.a)(this,t,e,n,a,r)},Y.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object(cs.g)(this,t)},Y.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(de.a)(this,t)};var oo=n(113);Y.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object(oo.a)(this,t)};var io=n(151);Y.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(io.a)(this,t,e)};var co=n(196);Y.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(co.a)(this)};var uo=n(70);Y.a.prototype.relu=function(){return this.throwIfDisposed(),Object(uo.a)(this)};var lo=n(114);Y.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(lo.a)(this)},Y.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(On.a)(this,t.shape)},Y.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(On.a)(this,t)};var po=n(166);Y.a.prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Object(po.a)(this,t,e,n)};var ho=n(165);Y.a.prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Object(ho.a)(this,t,e,n)},Y.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(Or.a)(this,t)};var fo=n(116);Y.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(fo.a)(this)};var mo=n(197);Y.a.prototype.round=function(){return this.throwIfDisposed(),Object(mo.a)(this)},Y.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Na.a)(this)};var bo=n(154);Y.a.prototype.selu=function(){return this.throwIfDisposed(),Object(bo.a)(this)};var go=n(155);Y.a.prototype.separableConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Object(go.a)(this,t,e,n,a,r,s)},Y.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Pr.a)(this)};var yo=n(199);Y.a.prototype.sign=function(){return this.throwIfDisposed(),Object(yo.a)(this)},Y.a.prototype.sin=function(){return this.throwIfDisposed(),Object(oa.a)(this)},Y.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(ca.a)(this)},Y.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(nr.a)(this,t,e)};var xo=n(200);Y.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(xo.a)(this,t)};var vo=n(147);Y.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(vo.a)(this)},Y.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(Pn.a)(this,t,e)},Y.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(Qn.a)(this,t,e)},Y.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(ne.a)(this)},Y.a.prototype.square=function(){return this.throwIfDisposed(),Object(ae.a)(this)};var wo=n(87);Y.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(wo.a)(this,t)},Y.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(cs.h)(this,t)};var ko=n(88);Y.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(ko.a)(this,t)},Y.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Y.a?[this,t]:[this,...t];return Object(es.a)(n,e)},Y.a.prototype.step=function(t){return this.throwIfDisposed(),Object(yn.a)(this,t)};var Oo=n(201);Y.a.prototype.stridedSlice=function(t,e,n,a,r,s,o,i){return this.throwIfDisposed(),Object(Oo.a)(this,t,e,n,a,r,s,o,i)},Y.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object(cs.i)(this,t)},Y.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(pe.a)(this,t)},Y.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(Nn.a)(this,t,e)};var No=n(202);Y.a.prototype.tan=function(){return this.throwIfDisposed(),Object(No.a)(this)};var Io=n(125);Y.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(Io.a)(this)},Y.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(Ia.a)(this,t)},Y.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(q.a)(this,"bool")},Y.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(q.a)(this,"float32")},Y.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(q.a)(this,"int32")};var So=n(160);Y.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(So.a)(this,t,e)},Y.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(xt.a)(this,t)};var To=n(161);Y.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(To.a)(this,t)},Y.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(Ta.a)(this,t,e)},Y.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(lr.a)(this,t)},Y.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(Kn.a)(t,this,e)},Y.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(re.a)(this)}},function(t,e,n){"use strict";n.d(e,"c",(function(){return c})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var a=n(5),r=n(22),s=n(6),o=n(7),i=n(10);function c(t,e){let n=t;if(Object(o.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||Object(o.A)(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&Object(r.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,a){if(a=a||[],!Array.isArray(e)&&!Object(o.A)(e))return void Object(o.b)(0===n.length,()=>"Element arr[".concat(a.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(n[0]," elements"));Object(o.b)(n.length>0,()=>"Element arr[".concat(a.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements")),Object(o.b)(e.length===n[0],()=>"Element arr[".concat(a.join("]["),"] should have ").concat(n[0]," ")+"elements, but has ".concat(e.length," elements"));const r=n.slice(1);for(let s=0;s<e.length;++s)t(e[s],r,a.concat(s))}(t,a,[]),a}function u(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function l(t,e,n,r="numeric"){if(t instanceof s.a)return u(r,t.dtype,e,n),t;let l=Object(o.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(r)>=0&&(l=r),u(r,l,e,n),null==t||!Object(o.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const d=c(t,l);Object(o.A)(t)||Array.isArray(t)||(t=[t]);const p="string"!==l?Object(i.toTypedArray)(t,l):Object(o.m)(t,[],!0);return a.a.makeTensor(p,d,l)}function d(t,e,n,a="numeric"){if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map((t,r)=>l(t,"".concat(e,"[").concat(r,"]"),n,a))}},function(t,e,n){"use strict";n.d(e,"d",(function(){return r})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return o})),n.d(e,"b",(function(){return i})),n.d(e,"g",(function(){return u})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var a=n(0);function r(t,e,n,r,o){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,c=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return s(e.inputNames[i.inputIndexStart],n,r,o);if("tensors"===i.type){return e.inputNames.slice(t,c).map(t=>s(t,n,r,o))}const u=s(e.inputNames.slice(t)[0],n,r,o),l=u.dataSync();return"number"===i.type?l[0]:a.util.toNestedArray(u.shape,l)}const c=e.attrParams[t];return c&&c.value}function s(t,e,n,a){const[r,s]=u(t);if(null!=a){const t=a.getHashTableHandleByName(r);if(null!=t)return t}const o=n.currentContextIds.find(t=>!!e[c(r,t)]);return void 0!==o?e[c(r,o)][s]:void 0}function o(t,e,n){return e[c(t,n.currentContextId)]}function i(t,e){const[n,a]=u(t);return[c(n,e&&e.currentContextId),a]}function c(t,e){return e?"".concat(t,"-").concat(e):t}function u(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let a=r("pad",t,e,n);if("explicit"===a){a=r("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=a[2*t],s[t][1]=a[2*t+1];return s}return a}function d(t){return t.kept?t:Object(a.clone)(t)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return o})),n.d(e,"e",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"g",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return p})),n.d(e,"k",(function(){return h})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return x})),n.d(e,"q",(function(){return v})),n.d(e,"s",(function(){return w})),n.d(e,"t",(function(){return k})),n.d(e,"u",(function(){return O})),n.d(e,"v",(function(){return N})),n.d(e,"w",(function(){return I})),n.d(e,"x",(function(){return S})),n.d(e,"y",(function(){return T})),n.d(e,"z",(function(){return j})),n.d(e,"A",(function(){return C})),n.d(e,"B",(function(){return E})),n.d(e,"C",(function(){return A})),n.d(e,"D",(function(){return _})),n.d(e,"E",(function(){return R})),n.d(e,"F",(function(){return D})),n.d(e,"G",(function(){return F})),n.d(e,"H",(function(){return M})),n.d(e,"I",(function(){return z})),n.d(e,"J",(function(){return L})),n.d(e,"L",(function(){return P})),n.d(e,"K",(function(){return B})),n.d(e,"M",(function(){return W})),n.d(e,"N",(function(){return V})),n.d(e,"O",(function(){return U})),n.d(e,"P",(function(){return G})),n.d(e,"Q",(function(){return H})),n.d(e,"R",(function(){return q})),n.d(e,"S",(function(){return K})),n.d(e,"U",(function(){return X})),n.d(e,"T",(function(){return Y})),n.d(e,"kc",(function(){return Q})),n.d(e,"V",(function(){return Z})),n.d(e,"W",(function(){return J})),n.d(e,"Y",(function(){return $})),n.d(e,"X",(function(){return tt})),n.d(e,"Z",(function(){return et})),n.d(e,"ab",(function(){return nt})),n.d(e,"bb",(function(){return at})),n.d(e,"cb",(function(){return rt})),n.d(e,"db",(function(){return st})),n.d(e,"eb",(function(){return ot})),n.d(e,"fb",(function(){return it})),n.d(e,"gb",(function(){return ct})),n.d(e,"ib",(function(){return ut})),n.d(e,"mb",(function(){return lt})),n.d(e,"lb",(function(){return dt})),n.d(e,"nb",(function(){return pt})),n.d(e,"ob",(function(){return ht})),n.d(e,"qb",(function(){return ft})),n.d(e,"pb",(function(){return mt})),n.d(e,"rb",(function(){return bt})),n.d(e,"sb",(function(){return gt})),n.d(e,"tb",(function(){return yt})),n.d(e,"ub",(function(){return xt})),n.d(e,"xb",(function(){return vt})),n.d(e,"yb",(function(){return wt})),n.d(e,"zb",(function(){return kt})),n.d(e,"Ab",(function(){return Ot})),n.d(e,"Bb",(function(){return Nt})),n.d(e,"Cb",(function(){return It})),n.d(e,"Eb",(function(){return St})),n.d(e,"Fb",(function(){return Tt})),n.d(e,"Gb",(function(){return jt})),n.d(e,"Db",(function(){return Ct})),n.d(e,"vb",(function(){return Et})),n.d(e,"wb",(function(){return At})),n.d(e,"Hb",(function(){return _t})),n.d(e,"Nb",(function(){return Rt})),n.d(e,"Ib",(function(){return Dt})),n.d(e,"Lb",(function(){return Ft})),n.d(e,"Jb",(function(){return Mt})),n.d(e,"Kb",(function(){return zt})),n.d(e,"Mb",(function(){return Lt})),n.d(e,"Ob",(function(){return Pt})),n.d(e,"Pb",(function(){return Bt})),n.d(e,"Qb",(function(){return Wt})),n.d(e,"Rb",(function(){return Vt})),n.d(e,"Sb",(function(){return Ut})),n.d(e,"Tb",(function(){return Gt})),n.d(e,"Ub",(function(){return Ht})),n.d(e,"Vb",(function(){return qt})),n.d(e,"Zb",(function(){return Kt})),n.d(e,"Wb",(function(){return Xt})),n.d(e,"Xb",(function(){return Yt})),n.d(e,"Yb",(function(){return Qt})),n.d(e,"bc",(function(){return Zt})),n.d(e,"ac",(function(){return Jt})),n.d(e,"cc",(function(){return $t})),n.d(e,"dc",(function(){return te})),n.d(e,"ec",(function(){return ee})),n.d(e,"fc",(function(){return ne})),n.d(e,"gc",(function(){return ae})),n.d(e,"hc",(function(){return re})),n.d(e,"ic",(function(){return se})),n.d(e,"jc",(function(){return oe})),n.d(e,"lc",(function(){return ie})),n.d(e,"mc",(function(){return ce})),n.d(e,"oc",(function(){return ue})),n.d(e,"rc",(function(){return le})),n.d(e,"sc",(function(){return de})),n.d(e,"pc",(function(){return pe})),n.d(e,"qc",(function(){return he})),n.d(e,"nc",(function(){return fe})),n.d(e,"tc",(function(){return me})),n.d(e,"vc",(function(){return be})),n.d(e,"wc",(function(){return ge})),n.d(e,"xc",(function(){return ye})),n.d(e,"yc",(function(){return xe})),n.d(e,"zc",(function(){return ve})),n.d(e,"Ec",(function(){return we})),n.d(e,"Cc",(function(){return ke})),n.d(e,"Dc",(function(){return Oe})),n.d(e,"Bc",(function(){return Ne})),n.d(e,"Ac",(function(){return Ie})),n.d(e,"Gc",(function(){return Se})),n.d(e,"Kc",(function(){return Te})),n.d(e,"Qc",(function(){return je})),n.d(e,"Hc",(function(){return Ce})),n.d(e,"Jc",(function(){return Ee})),n.d(e,"Fc",(function(){return Ae})),n.d(e,"Mc",(function(){return _e})),n.d(e,"Lc",(function(){return Re})),n.d(e,"Pc",(function(){return De})),n.d(e,"Ic",(function(){return Fe})),n.d(e,"Oc",(function(){return Me})),n.d(e,"Rc",(function(){return ze})),n.d(e,"Sc",(function(){return Le})),n.d(e,"Tc",(function(){return Pe})),n.d(e,"Uc",(function(){return Be})),n.d(e,"Vc",(function(){return We})),n.d(e,"Wc",(function(){return Ve})),n.d(e,"Xc",(function(){return Ue})),n.d(e,"Yc",(function(){return Ge})),n.d(e,"Zc",(function(){return He})),n.d(e,"Nc",(function(){return qe})),n.d(e,"hb",(function(){return Ke})),n.d(e,"uc",(function(){return Xe})),n.d(e,"ad",(function(){return Ye})),n.d(e,"jb",(function(){return Qe})),n.d(e,"kb",(function(){return Ze}));const a="Abs",r="Acos",s="Acosh",o="Add",i="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",O="Bincount",N="BroadcastTo",I="Cast",S="Ceil",T="ClipByValue",j="Complex",C="ComplexAbs",E="Concat",A="Conv2D",_="Conv2DBackpropFilter",R="Conv2DBackpropInput",D="Conv3D",F="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",L="Cosh",P="Cumsum",B="CropAndResize",W="DenseBincount",V="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",X="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Q="RealDiv",Z="Elu",J="EluGrad",$="Erf",tt="Equal",et="Exp",nt="ExpandDims",at="Expm1",rt="FFT",st="Fill",ot="FlipLeftRight",it="Floor",ct="FloorDiv",ut="FusedBatchNorm",lt="GatherV2",dt="GatherNd",pt="Greater",ht="GreaterEqual",ft="Identity",mt="IFFT",bt="Imag",gt="IsFinite",yt="IsInf",xt="IsNan",vt="LeakyRelu",wt="Less",kt="LessEqual",Ot="LinSpace",Nt="Log",It="Log1p",St="LogicalAnd",Tt="LogicalNot",jt="LogicalOr",Ct="LogSoftmax",Et="LRN",At="LRNGrad",_t="Max",Rt="Maximum",Dt="MaxPool",Ft="MaxPoolGrad",Mt="MaxPool3D",zt="MaxPool3DGrad",Lt="MaxPoolWithArgmax",Pt="Mean",Bt="Min",Wt="Minimum",Vt="MirrorPad",Ut="Mod",Gt="Multinomial",Ht="Multiply",qt="Neg",Kt="NotEqual",Xt="NonMaxSuppressionV3",Yt="NonMaxSuppressionV4",Qt="NonMaxSuppressionV5",Zt="OnesLike",Jt="OneHot",$t="Pack",te="PadV2",ee="Pool",ne="Pow",ae="Prelu",re="Prod",se="Range",oe="Real",ie="Reciprocal",ce="Relu",ue="Reshape",le="ResizeNearestNeighbor",de="ResizeNearestNeighborGrad",pe="ResizeBilinear",he="ResizeBilinearGrad",fe="Relu6",me="Reverse",be="Round",ge="Rsqrt",ye="ScatterNd",xe="Select",ve="Selu",we="Slice",ke="Sin",Oe="Sinh",Ne="Sign",Ie="Sigmoid",Se="Softplus",Te="Sqrt",je="Sum",Ce="SpaceToBatchND",Ee="SplitV",Ae="Softmax",_e="SquaredDifference",Re="Square",De="Sub",Fe="SparseToDense",Me="StridedSlice",ze="Tan",Le="Tanh",Pe="Tile",Be="TopK",We="Transpose",Ve="Unique",Ue="Unpack",Ge="UnsortedSegmentSum",He="ZerosLike",qe="Step",Ke="FromPixels",Xe="RotateWithOffset",Ye="_FusedMatMul",Qe="FusedConv2D",Ze="FusedDepthwiseConv2D"},function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return o}));var a=n(5),r=n(7);const s="__op";function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=(...t)=>{a.a.startScope(n);try{const e=o(...t);return Object(r.x)(e)&&console.error("Cannot return a Promise inside of tidy."),a.a.endScope(e),e}catch(e){throw a.a.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},function(t,e,n){"use strict";n.d(e,"b",(function(){return g})),n.d(e,"a",(function(){return y}));var a=n(124),r=n(22),s=n(127),o=n(3),i=n(60),c=n(7);class u{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let a;const s=this.backendTimer.time(()=>{a=n()});if(Object(r.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const e=a[r];e.data().then(n=>{l(n,e.dtype,t)})}return{kernelName:t,outputs:a,inputs:e,timeMs:s.then(t=>t.kernelMs),extraInfo:s.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:r,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),a,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class d{logKernelProfile(t,e,n,a,r,s){const o="number"===typeof a?c.L("".concat(a,"ms"),9):a.error,i=c.L(t,25),u=e.rank,l=e.size,d=c.L(e.shape.toString(),14);let p="";for(const c in r){const t=r[c];if(null!=t){const n=t.shape||e.shape,a=n.length;p+="".concat(c,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(u,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(p,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n(6),h=n(21),f=n(10);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new u(this.backendInstance),!0}setupRegisteredKernels(){Object(i.d)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(i.d)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof a.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,r=this.readSync(e);a.disposeData(e),n.backend=t,t.move(e,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun(()=>this.startScope(a),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return y.runKernelFunc(e=>e.cast(t,"float32"),e,null,o.w,n)}}),[],{}),e}runKernel(t,e,n,a,r){return this.runKernelFunc(null,e,null,t,n,a,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let r=0;n.forEach(t=>{r+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-e-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(t,"'"))}runKernelFunc(t,e,n,a,r,s,o){let c,u=[];const l=this.isTapeOn();null==a&&(a=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,p=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=Object(i.c)(a,this.backendName);let m,b;if(null!=f)h=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:r,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,t,n);const i=n.map(t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:a}=t;return this.makeTensorFromDataId(e,n,a)});if(l){let t=this.getTensorsForGradient(a,e,i);if(null==t){null==o&&(o=[]);const e=i.filter((t,e)=>o[e]);t=(s||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return i};else{if(null==t)throw new Error("Error running ".concat(a,": Neither modular kernel nor forward func passed"));const e=t=>{l&&(u=t.map(t=>this.keep(this.clone(t))))};h=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const r=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,n,r),r}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(a,e,()=>h()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),c=b.outputs):c=h()}),l&&this.addTapeNode(a,e,c,n,u,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:a,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:c.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?c:c[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const a=Object(i.b)(t);if(null!=a){const t=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(c.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const o=n.filter((t,e)=>r[e]);return s.concat(o)}return null}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=t;"string"===n&&c.z(t[0])&&(r=t.map(t=>f.encodeString(t)));const s=a.write(r,e,n),o=new p.a(e,n,s,this.nextTensorId());if(this.incRef(o,a),"string"===n){const t=this.state.tensorInfo.get(s),e=Object(c.f)(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,a){n=n||"float32";const r=new p.a(e,n,t,this.nextTensorId());return this.incRef(r,a),r}makeVariable(t,e=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const r=new p.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*c.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof p.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):(e.backend.decComplexRef(t.dataId),this.state.tensorInfo.get(t.dataId).refCount--)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},u=Object(i.b)(t);null!=u&&(a=u.gradFunc),null!=a&&(o.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],a=c.F(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t}),a(t.length>1?t:t[0],r,s))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(h.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let r=0;r<this.state.activeScope.track.length;r++){const t=this.state.activeScope.track[r];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==a.id||this.track(t)})}gradients(t,e,n,a=!1){if(c.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));c.b(r instanceof p.a,()=>"The result y returned by f() must be a tensor.");const s=function(t,e,n){const a={},r={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],s=n.inputs;for(const t in s){const o=s[t];let i=!1;for(let t=0;t<e.length;t++)if(a[o.id]){n.outputs.forEach(t=>a[t.id]=!0),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,o[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(r[e.id]&&o[e.id]){const t={};for(const r in e.inputs){const n=e.inputs[r];a[n.id]&&(t[r]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,r);if(!a&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[r.id]=null==n?function(t){const e=Object(c.D)(Object(c.N)(t),"float32");return y.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,a){for(let r=e.length-1;r>=0;r--){const s=e[r],o=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)}),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const e in s.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n(()=>i[e]());if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[e];if(!c.a(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==t[o.id])t[o.id]=r;else{const e=t[o.id];t[o.id]=a(e,r),e.dispose()}}}}(t,s,t=>this.tidy(t),x);const a=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:r,grads:a}})}customGrad(t){return c.b(c.u(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;c.b(e.every(t=>t instanceof p.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const a={};return e.forEach((t,e)=>{a[e]=t}),this.runKernelFunc((a,r)=>(n=t(...e,r),c.b(n.value instanceof p.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c.b(c.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a,(t,a)=>{const r=n.gradFunc(t,a),s=Array.isArray(r)?r:[r];c.b(s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c.b(s.every(t=>t instanceof p.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return s.forEach((t,e)=>{o[e]=()=>t}),o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(f.now)(),n=await this.backend.time(t);return n.wallMs=Object(f.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(){const t=Object(s.b)();if(null==t._tfengine){const e=new r.b(t);t._tfengine=new b(e)}return Object(r.d)(t._tfengine.ENV),Object(p.f)(()=>t._tfengine),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const y=g();function x(t,e){const n={a:t,b:e};return y.runKernel(o.d,n)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return u})),n.d(e,"f",(function(){return h})),n.d(e,"e",(function(){return f})),n.d(e,"d",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"c",(function(){return g}));var a=n(7);function r(t,e,n,r){const c=Object(a.j)(e),u=function(t,e,n,r){const o=Object(a.N)(e),c=r[r.length-1],u=new Array(c).fill(0),l=e.length,d="complex64"===n?i(t):t;if(l>1)for(let a=0;a<o/c;a++){const t=a*c;for(let e=0;e<c;e++)u[e]=Math.max(u[e],s(d[t+e],0,n).length)}return u}(t,e,n,c),l=e.length,d=function t(e,n,a,r,c,u=!0){const l="complex64"===a?2:1,d=n[0],p=n.length;if(0===p){if("complex64"===a){return[s(i(e)[0],0,a)]}return"bool"===a?[o(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),r=Array.from(e.slice((d-3)*l,d*l));return"complex64"===a&&(n=i(n),r=i(r)),["["+n.map((t,e)=>s(t,c[e],a)).join(", ")+", ..., "+r.map((t,e)=>s(t,c[d-3+e],a)).join(", ")+"]"]}return["["+("complex64"===a?i(e):Array.from(e)).map((t,e)=>s(t,c[e],a)).join(", ")+"]"]}const h=n.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const r=n*m,s=r+m;b.push(...t(e.slice(r,s),h,a,f,c,!1))}b.push("...");for(let n=d-3;n<d;n++){const r=n*m,s=r+m;b.push(...t(e.slice(r,s),h,a,f,c,n===d-1))}}else for(let s=0;s<d;s++){const n=s*m,r=n+m;b.push(...t(e.slice(n,r),h,a,f,c,s===d-1))}const g=2===p?",":"";b[0]="["+b[0]+g;for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+g;let y=",\n";for(let s=2;s<p;s++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(u?"":y),b}(t,e,n,c,u),p=["Tensor"];return r&&(p.push("  dtype: ".concat(n)),p.push("  rank: ".concat(l)),p.push("  shape: [".concat(e,"]")),p.push("  values:")),p.push(d.map(t=>"    "+t).join("\n")),p.join("\n")}function s(t,e,n){let r;return r=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(7))," + ")+"".concat(parseFloat(t[1].toFixed(7)),"j"):Object(a.z)(t)?"'".concat(t,"'"):"bool"===n?o(t):parseFloat(t.toFixed(7)).toString(),Object(a.L)(r,e)}function o(t){return 0===t?"false":"true"}function i(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var c=n(10);class u{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=a.N(t),null!=n){const t=n.length;a.b(t===this.size,()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'."))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(e,this.size),this.strides=Object(a.j)(t)}set(t,...e){0===e.length&&(e=[0]),a.b(e.length===this.rank,()=>"The number of provided coordinates (".concat(e.length,") must ")+"match the rank (".concat(this.rank,")"));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const a of t){if(a<0||a>=this.shape[e]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}e++}let n=t[t.length-1];for(let a=0;a<t.length-1;++a)n+=this.strides[a]*t[a];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,d=null,p=null;function h(t){l=t}function f(t){d=t}function m(t){p=t}class b{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=a.N(t),this.strides=Object(a.j)(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return d.buffer(this.shape,this.dtype,t)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(a.S)(this.shape,t)}arraySync(){return Object(a.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=l().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>c.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=l().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>c.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await l().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return d.print(this,t)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(t=!1){return r(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),d.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),l().makeVariable(this,t,e,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class g extends b{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!a.a(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));l().disposeTensor(this),this.dataId=t.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof b&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";function a(t){let e=t.length,n=0,a=0;for(;e>0;)a=Math.random()*e|0,e--,n=t[e],t[e]=t[a],t[a]=n}function r(t,e,n){return Math.max(t,Math.min(e,n))}function s(t){return t%2===0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function i(t,e){const n=Math.random();return e*n+(1-n)*t}function c(t,e){let n=0;for(let a=0;a<t.length;a++){const r=Number(t[a])-Number(e[a]);n+=r*r}return n}function u(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function l(t,e,n=""){u(m(t,e),()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}function d(t){u(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function p(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||E(t)&&!n)for(let a=0;a<t.length;++a)p(t[a],e,n);else e.push(t);return e}function h(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function x(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return a(e),e}function v(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function w(t,e=(t=>0),n){return new Promise((a,r)=>{let s=0;const o=()=>{if(t())return void a();s++;const i=e(s);null!=n&&s>=n?r():setTimeout(o,i)};o()})}function k(t,e){let n=1,a=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(t[s]<0)throw Error("Shapes can not be < 0. Found ".concat(t[s]," at dim ").concat(s));if(-1===a){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const r=t.slice();return r[a]=e/n,r}function O(t,e){const n=e.length;return u((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t)),u(t.every(t=>b(t)),()=>"All values in axis param must be integers but "+"got axis ".concat(t)),t.map(t=>t<0?n+t:t)}function N(t,e){const n=[],a=[],r=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||r?null:O(e,t).sort();let o=0;for(let i=0;i<t.length;++i){if(null!=s){if(s[o]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),s[o]<=i&&o++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}function I(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type ".concat(t));n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function T(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}function j(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function C(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function E(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function A(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function _(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function R(t){return"string"===typeof t||t instanceof String}function D(t){return"boolean"===typeof t}function F(t){return"number"===typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":R(t)?"string":D(t)?"bool":"float32"}function z(t){return!!(t&&t.constructor&&t.call&&t.apply)}function L(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function P(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length,"."));return function t(e,n,a){const r=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)r[n]=a[e+n]}else{const s=n[0],o=n.slice(1),i=o.reduce((t,e)=>t*e);for(let n=0;n<s;n++)r[n]=t(e+n*i,o,a)}return r}(0,t,e)}function W(t,e){const n=V(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function V(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function U(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function G(t){t.forEach(e=>{u(Number.isInteger(e)&&e>=0,()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"]."))})}function H(t,e,n){if(0===e)return 0;if(1===e)return t[0];let a=t[t.length-1];for(let r=0;r<t.length-1;++r)a+=n[r]*t[r];return a}function q(t,e,n){if(0===e)return[];if(1===e)return[t];const a=new Array(e);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(t/n[r]),t-=a[r]*n[r];return a[a.length-1]=t,a}function K(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return a})),n.d(e,"i",(function(){return r})),n.d(e,"H",(function(){return s})),n.d(e,"Q",(function(){return o})),n.d(e,"J",(function(){return i})),n.d(e,"l",(function(){return c})),n.d(e,"b",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return p})),n.d(e,"N",(function(){return h})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return x})),n.d(e,"L",(function(){return v})),n.d(e,"K",(function(){return w})),n.d(e,"s",(function(){return k})),n.d(e,"I",(function(){return O})),n.d(e,"P",(function(){return N})),n.d(e,"o",(function(){return I})),n.d(e,"n",(function(){return S})),n.d(e,"h",(function(){return T})),n.d(e,"B",(function(){return j})),n.d(e,"p",(function(){return C})),n.d(e,"A",(function(){return E})),n.d(e,"g",(function(){return A})),n.d(e,"f",(function(){return _})),n.d(e,"z",(function(){return R})),n.d(e,"t",(function(){return D})),n.d(e,"w",(function(){return F})),n.d(e,"r",(function(){return M})),n.d(e,"u",(function(){return z})),n.d(e,"G",(function(){return L})),n.d(e,"j",(function(){return P})),n.d(e,"S",(function(){return B})),n.d(e,"D",(function(){return W})),n.d(e,"F",(function(){return V})),n.d(e,"E",(function(){return U})),n.d(e,"c",(function(){return G})),n.d(e,"C",(function(){return H})),n.d(e,"q",(function(){return q})),n.d(e,"x",(function(){return K}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({reshape_:function(t,e){const n={x:Object(s.a)(t,"x","reshape","string_or_numeric")},o={shape:e};return a.a.runKernel(r.oc,n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({mul_:function(t,e){let n=Object(o.a)(t,"a","mul"),i=Object(o.a)(e,"b","mul");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.Ub,c)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return s})),n.d(e,"toTypedArray",(function(){return o})),n.d(e,"now",(function(){return i})),n.d(e,"fetch",(function(){return c})),n.d(e,"encodeString",(function(){return u})),n.d(e,"decodeString",(function(){return l}));var a=n(22),r=n(7);function s(t,e){return"string"===e?u(t):o([t],e)}function o(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=r.m(t)),Object(a.c)().getBool("DEBUG")&&r.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function i(){return Object(a.c)().platform.now()}function c(t,e){return Object(a.c)().platform.fetch(t,e)}function u(t,e="utf-8"){return e=e||"utf-8",Object(a.c)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(a.c)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return r.M})),n.d(e,"clamp",(function(){return r.i})),n.d(e,"nearestLargerEven",(function(){return r.H})),n.d(e,"sum",(function(){return r.Q})),n.d(e,"randUniform",(function(){return r.J})),n.d(e,"distSquared",(function(){return r.l})),n.d(e,"assert",(function(){return r.b})),n.d(e,"assertShapesMatch",(function(){return r.e})),n.d(e,"assertNonNull",(function(){return r.d})),n.d(e,"flatten",(function(){return r.m})),n.d(e,"sizeFromShape",(function(){return r.N})),n.d(e,"isScalarShape",(function(){return r.y})),n.d(e,"arraysEqual",(function(){return r.a})),n.d(e,"isInt",(function(){return r.v})),n.d(e,"tanh",(function(){return r.R})),n.d(e,"sizeToSquarishShape",(function(){return r.O})),n.d(e,"createShuffledIndices",(function(){return r.k})),n.d(e,"rightPad",(function(){return r.L})),n.d(e,"repeatedTry",(function(){return r.K})),n.d(e,"inferFromImplicitShape",(function(){return r.s})),n.d(e,"parseAxisParam",(function(){return r.I})),n.d(e,"squeezeShape",(function(){return r.P})),n.d(e,"getTypedArrayFromDType",(function(){return r.o})),n.d(e,"getArrayFromDType",(function(){return r.n})),n.d(e,"checkConversionForErrors",(function(){return r.h})),n.d(e,"isValidDtype",(function(){return r.B})),n.d(e,"hasEncodingLoss",(function(){return r.p})),n.d(e,"isTypedArray",(function(){return r.A})),n.d(e,"bytesPerElement",(function(){return r.g})),n.d(e,"bytesFromStringArray",(function(){return r.f})),n.d(e,"isString",(function(){return r.z})),n.d(e,"isBoolean",(function(){return r.t})),n.d(e,"isNumber",(function(){return r.w})),n.d(e,"inferDtype",(function(){return r.r})),n.d(e,"isFunction",(function(){return r.u})),n.d(e,"nearestDivisor",(function(){return r.G})),n.d(e,"computeStrides",(function(){return r.j})),n.d(e,"toNestedArray",(function(){return r.S})),n.d(e,"makeOnesTypedArray",(function(){return r.D})),n.d(e,"makeZerosTypedArray",(function(){return r.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return r.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return r.c})),n.d(e,"locToIndex",(function(){return r.C})),n.d(e,"indexToLoc",(function(){return r.q})),n.d(e,"isPromise",(function(){return r.x}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({cast_:function(t,e){const n=Object(s.a)(t,"x","cast");if(!o.B(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:e};return a.a.runKernel(r.w,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({add_:function(t,e){let n=Object(o.a)(t,"a","add"),i=Object(o.a)(e,"b","add");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.d,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({sub_:function(t,e){let n=Object(o.a)(t,"a","sub"),i=Object(o.a)(e,"b","sub");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.Pc,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(100),c=n(4);const u=Object(c.b)({div_:function(t,e){let n=Object(o.a)(t,"a","div"),c=Object(o.a)(e,"b","div");if([n,c]=Object(s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return Object(i.a)(n,c);const u={a:n,b:c};return a.a.runKernel(r.kc,u,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(7),r=n(44);function s(t,e){if((Object(a.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(a.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(r.a)(t,[],[],e)}},function(t,e,n){"use strict";function a(t,e){const n=t.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=t[s]||1;(e[e.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function r(t,e){const n=[];for(let a=0;a<e.length;a++){const r=t[t.length-a-1],s=e.length-a-1,o=e[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function s(t,e){const n=[],a=Math.max(t.length,e.length);for(let r=0;r<a;r++){let a=t[t.length-r-1];null==a&&(a=1);let s=e[e.length-r-1];if(null==s&&(s=1),1===a)n.unshift(s);else if(1===s)n.unshift(a);else{if(a!==s){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}n.unshift(a)}}return n}n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return r})),n.d(e,"a",(function(){return s}))},function(t,e,n){"use strict";n.d(e,"b",(function(){return r.a})),n.d(e,"c",(function(){return s.a})),n.d(e,"d",(function(){return o.a})),n.d(e,"e",(function(){return i.a})),n.d(e,"f",(function(){return c.a})),n.d(e,"h",(function(){return u.a})),n.d(e,"i",(function(){return l.a})),n.d(e,"j",(function(){return d.a})),n.d(e,"k",(function(){return p.a})),n.d(e,"l",(function(){return h.a})),n.d(e,"m",(function(){return f.a})),n.d(e,"n",(function(){return m.a})),n.d(e,"o",(function(){return b.a})),n.d(e,"p",(function(){return g.a})),n.d(e,"q",(function(){return y.a})),n.d(e,"r",(function(){return x.a})),n.d(e,"s",(function(){return j})),n.d(e,"x",(function(){return C.a})),n.d(e,"t",(function(){return E.a})),n.d(e,"u",(function(){return _})),n.d(e,"v",(function(){return R})),n.d(e,"w",(function(){return D})),n.d(e,"y",(function(){return F.a})),n.d(e,"A",(function(){return M.a})),n.d(e,"B",(function(){return z.a})),n.d(e,"C",(function(){return L.a})),n.d(e,"D",(function(){return P.a})),n.d(e,"E",(function(){return B.a})),n.d(e,"F",(function(){return W.a})),n.d(e,"G",(function(){return V.a})),n.d(e,"H",(function(){return w.a})),n.d(e,"I",(function(){return U})),n.d(e,"J",(function(){return G})),n.d(e,"K",(function(){return H})),n.d(e,"L",(function(){return q})),n.d(e,"M",(function(){return K.a})),n.d(e,"N",(function(){return X.a})),n.d(e,"O",(function(){return Y.a})),n.d(e,"P",(function(){return Q.a})),n.d(e,"Q",(function(){return J})),n.d(e,"R",(function(){return $.a})),n.d(e,"S",(function(){return tt.a})),n.d(e,"U",(function(){return et.a})),n.d(e,"V",(function(){return nt.a})),n.d(e,"W",(function(){return at.a})),n.d(e,"X",(function(){return rt.a})),n.d(e,"Y",(function(){return it})),n.d(e,"Z",(function(){return ct.a})),n.d(e,"ab",(function(){return ut.a})),n.d(e,"bb",(function(){return lt.a})),n.d(e,"db",(function(){return dt.a})),n.d(e,"fb",(function(){return pt.a})),n.d(e,"hb",(function(){return ht.a})),n.d(e,"jb",(function(){return ft.a})),n.d(e,"kb",(function(){return mt.a})),n.d(e,"lb",(function(){return bt.a})),n.d(e,"mb",(function(){return gt.a})),n.d(e,"nb",(function(){return vt})),n.d(e,"pb",(function(){return wt.a})),n.d(e,"qb",(function(){return kt.a})),n.d(e,"rb",(function(){return Ot.a})),n.d(e,"tb",(function(){return Nt.a})),n.d(e,"vb",(function(){return It.a})),n.d(e,"wb",(function(){return St.a})),n.d(e,"Ab",(function(){return Tt.a})),n.d(e,"Eb",(function(){return jt.a})),n.d(e,"Fb",(function(){return Ct.a})),n.d(e,"Gb",(function(){return Et.a})),n.d(e,"Hb",(function(){return At.a})),n.d(e,"Ib",(function(){return _t.a})),n.d(e,"Jb",(function(){return Rt.a})),n.d(e,"Nb",(function(){return Dt.a})),n.d(e,"Ob",(function(){return Ft.a})),n.d(e,"Pb",(function(){return Mt.a})),n.d(e,"Qb",(function(){return zt.a})),n.d(e,"Rb",(function(){return Lt.a})),n.d(e,"Sb",(function(){return Pt.a})),n.d(e,"Tb",(function(){return Bt.a})),n.d(e,"Ub",(function(){return Wt.a})),n.d(e,"Vb",(function(){return Vt.a})),n.d(e,"Wb",(function(){return Ut.a})),n.d(e,"Xb",(function(){return Gt.a})),n.d(e,"Zb",(function(){return k.a})),n.d(e,"ac",(function(){return Ht.a})),n.d(e,"bc",(function(){return qt.a})),n.d(e,"cc",(function(){return Kt.a})),n.d(e,"dc",(function(){return Xt.a})),n.d(e,"ec",(function(){return Yt.a})),n.d(e,"gc",(function(){return Qt.a})),n.d(e,"hc",(function(){return Zt.a})),n.d(e,"ic",(function(){return Jt.a})),n.d(e,"kc",(function(){return $t.a})),n.d(e,"lc",(function(){return te.a})),n.d(e,"nc",(function(){return re})),n.d(e,"pc",(function(){return O.a})),n.d(e,"rc",(function(){return se})),n.d(e,"sc",(function(){return oe.a})),n.d(e,"tc",(function(){return ie.a})),n.d(e,"vc",(function(){return ce.a})),n.d(e,"xc",(function(){return ue.a})),n.d(e,"yc",(function(){return le.a})),n.d(e,"zc",(function(){return de.a})),n.d(e,"Bc",(function(){return pe})),n.d(e,"Cc",(function(){return he.a})),n.d(e,"Dc",(function(){return fe})),n.d(e,"Ec",(function(){return me})),n.d(e,"Fc",(function(){return be})),n.d(e,"Gc",(function(){return ge})),n.d(e,"Hc",(function(){return ye.a})),n.d(e,"Ic",(function(){return xe.a})),n.d(e,"Kc",(function(){return ve.a})),n.d(e,"Lc",(function(){return we.a})),n.d(e,"Mc",(function(){return ke.a})),n.d(e,"Nc",(function(){return Oe})),n.d(e,"Oc",(function(){return Ie})),n.d(e,"Pc",(function(){return Se})),n.d(e,"Qc",(function(){return Te.a})),n.d(e,"Rc",(function(){return je.a})),n.d(e,"Sc",(function(){return Ce.a})),n.d(e,"Tc",(function(){return Ee.a})),n.d(e,"Uc",(function(){return Ae.a})),n.d(e,"Vc",(function(){return _e.a})),n.d(e,"Wc",(function(){return yt.a})),n.d(e,"Xc",(function(){return Re.a})),n.d(e,"Yc",(function(){return De})),n.d(e,"Zc",(function(){return Fe})),n.d(e,"ad",(function(){return Me})),n.d(e,"bd",(function(){return ze})),n.d(e,"dd",(function(){return Le.a})),n.d(e,"ed",(function(){return Pe.a})),n.d(e,"fd",(function(){return Be.a})),n.d(e,"hd",(function(){return We.a})),n.d(e,"id",(function(){return Ve.a})),n.d(e,"jd",(function(){return Ue.a})),n.d(e,"kd",(function(){return I.a})),n.d(e,"ld",(function(){return Ge.a})),n.d(e,"nd",(function(){return He.a})),n.d(e,"od",(function(){return qe.a})),n.d(e,"pd",(function(){return S.a})),n.d(e,"qd",(function(){return Ke})),n.d(e,"rd",(function(){return Xe})),n.d(e,"sd",(function(){return Ye})),n.d(e,"td",(function(){return Qe})),n.d(e,"ud",(function(){return Ze.a})),n.d(e,"vd",(function(){return Je.a})),n.d(e,"wd",(function(){return $e.a})),n.d(e,"ob",(function(){return tn.a})),n.d(e,"zb",(function(){return en.a})),n.d(e,"Db",(function(){return nn.a})),n.d(e,"cd",(function(){return an.a})),n.d(e,"zd",(function(){return rn.a})),n.d(e,"Ad",(function(){return sn.a})),n.d(e,"Bd",(function(){return ne.a})),n.d(e,"Cd",(function(){return on.a})),n.d(e,"Ed",(function(){return cn.a})),n.d(e,"Fd",(function(){return un.a})),n.d(e,"Gd",(function(){return ln.a})),n.d(e,"Hd",(function(){return dn.a})),n.d(e,"Id",(function(){return ae.a})),n.d(e,"Kd",(function(){return pn.a})),n.d(e,"Ld",(function(){return hn.a})),n.d(e,"Md",(function(){return T.a})),n.d(e,"Nd",(function(){return fn.a})),n.d(e,"Od",(function(){return mn.a})),n.d(e,"Pd",(function(){return gn})),n.d(e,"Qd",(function(){return yn.a})),n.d(e,"Rd",(function(){return xn})),n.d(e,"Sd",(function(){return vn})),n.d(e,"Td",(function(){return wn})),n.d(e,"Ud",(function(){return xt.a})),n.d(e,"Vd",(function(){return kn.a})),n.d(e,"Xd",(function(){return On.a})),n.d(e,"Yd",(function(){return Nn.a})),n.d(e,"Zd",(function(){return In.a})),n.d(e,"ae",(function(){return Sn.a})),n.d(e,"be",(function(){return Tn})),n.d(e,"ce",(function(){return jn.a})),n.d(e,"de",(function(){return Cn.a})),n.d(e,"ee",(function(){return En.a})),n.d(e,"fe",(function(){return An.a})),n.d(e,"z",(function(){return _n})),n.d(e,"ib",(function(){return Rn.a})),n.d(e,"xb",(function(){return Rn.b})),n.d(e,"yb",(function(){return Rn.c})),n.d(e,"Kb",(function(){return Rn.d})),n.d(e,"Lb",(function(){return Rn.e})),n.d(e,"wc",(function(){return Rn.f})),n.d(e,"g",(function(){return Dn.a})),n.d(e,"cb",(function(){return Dn.b})),n.d(e,"fc",(function(){return Dn.c})),n.d(e,"jc",(function(){return Dn.d})),n.d(e,"mc",(function(){return Dn.e})),n.d(e,"qc",(function(){return Dn.f})),n.d(e,"Jc",(function(){return Dn.g})),n.d(e,"Dd",(function(){return Dn.h})),n.d(e,"Jd",(function(){return Dn.i})),n.d(e,"Wd",(function(){return Fn.a})),n.d(e,"uc",(function(){return Mn.a})),n.d(e,"oc",(function(){return Ln})),n.d(e,"gd",(function(){return Pn.a})),n.d(e,"xd",(function(){return Bn.a})),n.d(e,"ub",(function(){return Wn.a})),n.d(e,"eb",(function(){return Un})),n.d(e,"gb",(function(){return Gn})),n.d(e,"T",(function(){return Hn})),n.d(e,"Cb",(function(){return qn})),n.d(e,"Ac",(function(){return N.b})),n.d(e,"a",(function(){return N.a})),n.d(e,"Bb",(function(){return La})),n.d(e,"Mb",(function(){return Pa})),n.d(e,"Yb",(function(){return Ba})),n.d(e,"yd",(function(){return Ma})),n.d(e,"sb",(function(){return a})),n.d(e,"md",(function(){return za}));var a={};n.r(a),n.d(a,"conv2d",(function(){return $n})),n.d(a,"depthwiseConv2d",(function(){return na})),n.d(a,"matMul",(function(){return aa}));var r=n(36),s=n(171),o=n(172),i=n(12),c=n(173),u=n(133),l=n(134),d=n(135),p=n(136),h=n(174),f=n(175),m=n(176),b=n(137),g=n(177),y=n(102),x=n(178),v=n(1),w=n(28),k=n(25),O=n(9),N=n(4),I=n(74),S=n(24),T=n(125);const j=Object(N.b)({basicLSTMCell_:function(t,e,n,a,r,s){const o=Object(v.a)(t,"forgetBias","basicLSTMCell"),c=Object(v.a)(e,"lstmKernel","basicLSTMCell"),u=Object(v.a)(n,"lstmBias","basicLSTMCell"),l=Object(v.a)(a,"data","basicLSTMCell"),d=Object(v.a)(r,"c","basicLSTMCell"),p=Object(v.a)(s,"h","basicLSTMCell"),h=Object(w.a)([l,p],1),f=Object(k.a)(h,c),m=Object(i.a)(f,u),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(S.a)(m,[0,0],y),N=Object(S.a)(m,[0,g],y),j=Object(S.a)(m,[0,2*g],y),C=Object(S.a)(m,[0,3*g],y),E=Object(i.a)(Object(O.a)(Object(I.a)(x),Object(T.a)(N)),Object(O.a)(d,Object(I.a)(Object(i.a)(o,j))));return[E,Object(O.a)(Object(T.a)(E),Object(I.a)(C))]}});var C=n(80),E=n(73),A=n(7);const _=Object(N.b)({batchNorm2d_:function(t,e,n,a,r,s){const o=Object(v.a)(t,"x","batchNorm"),i=Object(v.a)(e,"mean","batchNorm"),c=Object(v.a)(n,"variance","batchNorm");let u,l;return null!=r&&(u=Object(v.a)(r,"scale","batchNorm")),null!=a&&(l=Object(v.a)(a,"offset","batchNorm")),A.b(2===o.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,".")),A.b(2===i.rank||1===i.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,".")),A.b(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&A.b(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&A.b(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(E.a)(o,i,c,l,u,s)}});const R=Object(N.b)({batchNorm3d_:function(t,e,n,a,r,s){const o=Object(v.a)(t,"x","batchNorm"),i=Object(v.a)(e,"mean","batchNorm"),c=Object(v.a)(n,"variance","batchNorm");let u,l;return null!=r&&(u=Object(v.a)(r,"scale","batchNorm")),null!=a&&(l=Object(v.a)(a,"offset","batchNorm")),A.b(3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,".")),A.b(3===i.rank||1===i.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,".")),A.b(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&A.b(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&A.b(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(E.a)(o,i,c,l,u,s)}});const D=Object(N.b)({batchNorm4d_:function(t,e,n,a,r,s){const o=Object(v.a)(t,"x","batchNorm"),i=Object(v.a)(e,"mean","batchNorm"),c=Object(v.a)(n,"variance","batchNorm");let u,l;return null!=r&&(u=Object(v.a)(r,"scale","batchNorm")),null!=a&&(l=Object(v.a)(a,"offset","batchNorm")),A.b(4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,".")),A.b(4===i.rank||1===i.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,".")),A.b(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&A.b(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&A.b(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(E.a)(o,i,c,l,u,s)}});var F=n(179),M=n(92),z=n(40),L=n(11),P=n(180),B=n(181),W=n(58),V=n(51);const U=Object(N.b)({concat1d_:function(t){return Object(w.a)(t,0)}});const G=Object(N.b)({concat2d_:function(t,e){return Object(w.a)(t,e)}});const H=Object(N.b)({concat3d_:function(t,e){return Object(w.a)(t,e)}});const q=Object(N.b)({concat4d_:function(t,e){return Object(w.a)(t,e)}});var K=n(138),X=n(56),Y=n(139),Q=n(182),Z=n(164);const J=Object(N.b)({conv3dTranspose_:function(t,e,n,a,r){const s=Object(v.a)(t,"x","conv3dTranspose"),o=Object(v.a)(e,"filter","conv3dTranspose");return Object(Z.a)(n,s,o,a,r)}});var $=n(103),tt=n(140),et=n(104),nt=n(183),at=n(141),rt=n(67),st=n(5),ot=n(3);const it=Object(N.b)({diag_:function(t){const e={x:Object(v.a)(t,"x","diag")};return st.a.runKernel(ot.R,e)}});var ct=n(142),ut=n(14),lt=n(143),dt=n(144),pt=n(105),ht=n(68),ft=n(184),mt=n(35),bt=n(54),gt=n(185),yt=n(8),xt=n(75);const vt=Object(N.b)({eye_:function(t,e,n,a="float32"){null==e&&(e=t);const r=Object(z.a)([t,e],a),s=t<=e?t:e;for(let i=0;i<s;++i)r.set(1,i,i);const o=Object(yt.a)(r.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return Object(xt.a)(Object(bt.a)(o,0),[n[0],1,1]);if(2===n.length)return Object(xt.a)(Object(bt.a)(Object(bt.a)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(xt.a)(Object(bt.a)(Object(bt.a)(Object(bt.a)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var wt=n(101),kt=n(106),Ot=n(100),Nt=n(81),It=n(39),St=n(47),Tt=n(107),jt=n(186),Ct=n(187),Et=n(188),At=n(108),_t=n(82),Rt=n(48),Dt=n(189),Ft=n(145),Mt=n(62),zt=n(146),Lt=n(190),Pt=n(191),Bt=n(109),Wt=n(52),Vt=n(83),Ut=n(110),Gt=n(148),Ht=n(59),qt=n(111),Kt=n(192),Xt=n(193),Yt=n(66),Qt=n(78),Zt=n(93),Jt=n(84),$t=n(149),te=n(112),ee=n(33),ne=n(23),ae=n(13);const re=Object(N.b)({moments_:function(t,e=null,n=!1){t=Object(v.a)(t,"x","moments");const a=Object(A.I)(e,t.shape),r=Object(Qt.a)(t,a,n);let s=r.shape;n||(s=Object(ee.e)(r.shape,a));const o=Object(ne.a)(Object(ae.a)(Object(L.a)(t,"float32"),Object(yt.a)(r,s)));return{mean:r,variance:Object(Qt.a)(o,a,n)}}});const se=Object(N.b)({multiRNNCell_:function(t,e,n,a){const r=Object(v.a)(e,"data","multiRNNCell"),s=Object(v.b)(n,"c","multiRNNCell"),o=Object(v.b)(a,"h","multiRNNCell");let i=r;const c=[];for(let d=0;d<t.length;d++){const e=t[d](i,s[d],o[d]);c.push(e[0]),c.push(e[1]),i=e[1]}const u=[],l=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),l.push(c[d+1]);return[u,l]}});var oe=n(194),ie=n(27),ce=n(85),ue=n(94),le=n(69),de=n(195);const pe=Object(N.b)({outerProduct_:function(t,e){const n=Object(v.a)(t,"v1","outerProduct"),a=Object(v.a)(e,"v2","outerProduct");A.b(1===n.rank&&1===a.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,"."));const r=Object(yt.a)(n,[-1,1]),s=Object(yt.a)(a,[1,-1]);return Object(k.a)(r,s)}});var he=n(49);const fe=Object(N.b)({pad1d_:function(t,e,n=0){return Object(A.b)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Object(he.a)(t,[e],n)}});const me=Object(N.b)({pad2d_:function(t,e,n=0){return Object(A.b)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(he.a)(t,e,n)}});const be=Object(N.b)({pad3d_:function(t,e,n=0){return Object(A.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(he.a)(t,e,n)}});const ge=Object(N.b)({pad4d_:function(t,e,n=0){return Object(A.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(he.a)(t,e,n)}});var ye=n(150),xe=n(41),ve=n(113),we=n(132),ke=n(151);const Oe=Object(N.b)({rand_:function(t,e,n){const a=Object(A.N)(t);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=e();return st.a.makeTensor(r,t,n)}});var Ne=n(90);const Ie=Object(N.b)({randomGamma_:function(t,e,n=1,a="float32",r){if(null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Ne.b(e,n,a,r),o=Object(z.a)(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Se=Object(N.b)({randomNormal_:function(t,e=0,n=1,a,r){if(null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Ne.a(e,n,a,!1,r),o=Object(z.a)(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var Te=n(152),je=n(126),Ce=n(95),Ee=n(196),Ae=n(70),_e=n(114),Re=n(42);const De=Object(N.b)({reverse1d_:function(t){const e=Object(v.a)(t,"x","reverse");return A.b(1===e.rank,()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(e.rank,".")),Object(Re.a)(e,0)}});const Fe=Object(N.b)({reverse2d_:function(t,e){const n=Object(v.a)(t,"x","reverse");return A.b(2===n.rank,()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,".")),Object(Re.a)(n,e)}});const Me=Object(N.b)({reverse3d_:function(t,e){const n=Object(v.a)(t,"x","reverse");return A.b(3===n.rank,()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,".")),Object(Re.a)(n,e)}});const ze=Object(N.b)({reverse4d_:function(t,e){const n=Object(v.a)(t,"x","reverse");return A.b(4===n.rank,()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,".")),Object(Re.a)(n,e)}});var Le=n(197),Pe=n(153),Be=n(15),We=n(154),Ve=n(155),Ue=n(198),Ge=n(199),He=n(156),qe=n(157);const Ke=Object(N.b)({slice1d_:function(t,e,n){const a=Object(v.a)(t,"x","slice1d");return A.b(1===a.rank,()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor")),Object(S.a)(a,[e],[n])}});const Xe=Object(N.b)({slice2d_:function(t,e,n){const a=Object(v.a)(t,"x","slice2d");return A.b(2===a.rank,()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor")),Object(S.a)(a,e,n)}});const Ye=Object(N.b)({slice3d_:function(t,e,n){const a=Object(v.a)(t,"x","slice3d");return A.b(3===a.rank,()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor")),Object(S.a)(a,e,n)}});const Qe=Object(N.b)({slice4d_:function(t,e,n){const a=Object(v.a)(t,"x","slice4d");return A.b(4===a.rank,()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor")),Object(S.a)(a,e,n)}});var Ze=n(200),Je=n(147),$e=n(86),tn=n(115),en=n(96),nn=n(158),an=n(116),rn=n(63),sn=n(32),on=n(87),cn=n(88),un=n(53),ln=n(71),dn=n(201),pn=n(18),hn=n(202),fn=n(89),mn=n(64),bn=n(44);function gn(t,e,n){if(Object(A.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Object(v.c)(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(bn.a)(t,e,a,n)}var yn=n(159);function xn(t,e,n){if(Object(A.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const a=Object(v.c)(t,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(t,e,a,n)}function vn(t,e,n){if(Object(A.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const a=Object(v.c)(t,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(t,e,a,n)}function wn(t,e,n){if(Object(A.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const a=Object(v.c)(t,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||a,Object(bn.a)(t,e,a,n)}var kn=n(160),On=n(203),Nn=n(161),In=n(117),Sn=n(72);function Tn(t,e=!0,n,a){return st.a.makeVariable(t,e,n,a)}var jn=n(31),Cn=n(162),En=n(57),An=n(20);const _n=async function(t,e,n){const a=Object(v.a)(t,"tensor","boolMask"),r=Object(v.a)(e,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;A.b(o>0,()=>"mask cannot be scalar"),A.e(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=s;m<s+o;m++)c*=i[m];const u=i.slice(0,s).concat([c],i.slice(s+o)),l=Object(yt.a)(a,u),d=Object(yt.a)(r,[-1]),p=await Object(Cn.a)(d),h=Object(cn.a)(p,[1]),f=Object(Nt.a)(l,h,s);return t!==a&&a.dispose(),e!==r&&r.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f};var Rn=n(204),Dn=n(205),Fn=n(45),Mn=n(118),zn=n(21);const Ln=Object(N.b)({movingAverage_:function(t,e,n,a,r=!0){const s=Object(v.a)(t,"v","movingAverage"),o=Object(v.a)(e,"x","movingAverage"),c=Object(v.a)(n,"decay","movingAverage");Object(zn.assertTypesMatch)(s,o),A.b(A.a(s.shape,o.shape),()=>"Shape mismatch in v and x");const u=Object(Be.a)(1),l=Object(ae.a)(u,c);let d=Object(O.a)(Object(ae.a)(o,s),l);if(r){A.b(null!=a,()=>"When using zeroDebias: true, step is required.");const t=Object(v.a)(a,"step","movingAverage");d=Object(ut.a)(d,Object(ae.a)(u,Object(xe.a)(c,t)))}return Object(i.a)(s,d)}});var Pn=n(206),Bn=n(209),Wn=n(207),Vn=n(6);const Un=Object(N.b)({dropout_:function(t,e,n,a){const r=Object(v.a)(t,"x","dropout");if(A.b("float32"===r.dtype,()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead.")),A.b(e>=0&&e<1,()=>"rate must be a float in the range [0, 1), but got ".concat(e,".")),0===e)return t instanceof Vn.a?r.clone():r;const s=function(t,e){if(null==e)return t.shape.slice();if(A.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let a=0;a<t.shape.length;a++)null==e[a]&&null!=t.shape[a]?n.push(t.shape[a]):n.push(e[a]);return n}return e}(r,n),o=1-e,c=Object(ut.a)(Object(kt.a)(Object(i.a)(Object(Te.a)(s,0,1,"float32",a),o)),o);return Object(O.a)(r,c)}});function Gn(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Hn(t,e,n){const a=1-t%2,r=new Float32Array(t);for(let s=0;s<t;++s){const o=2*Math.PI*s/(t+a-1);r[s]=e-n*Math.cos(o)}return Object(mn.a)(r,"float32")}const qn=async function(t,e,n=1){const a=Object(v.a)(t,"predictions","inTopK"),r=Object(v.a)(e,"targets","inTopK");Object(A.b)(a.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank)),Object(A.b)(a.rank-1===r.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank)),Object(A.e)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];Object(A.b)(n>0&&n<=s,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n));const o=await a.data(),i=await r.data(),[c,u]=[o.length/s,s],l=Object(A.o)("bool",c);for(let d=0;d<c;d++){const t=d*u,e=o.subarray(t,t+u),a=[];for(let n=0;n<e.length;n++)a.push({value:e[n],index:n});a.sort((t,e)=>e.value-t.value),l[d]=0;for(let r=0;r<n;r++)if(a[r].index===i[d]){l[d]=1;break}}return t!==a&&a.dispose(),e!==r&&r.dispose(),Object(fn.a)(l,r.shape,"bool")};var Kn=n(29),Xn=n(16),Yn=n(122),Qn=n(120),Zn=n(26),Jn=n(37);const $n=Object(N.b)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(u=u||"linear",!1===Object(Jn.d)(st.a.state.gradientDepth,u)){let p=Object(X.a)(t,e,n,a,r,s,o);return null!=c&&(p=Object(i.a)(p,c)),Object(Jn.a)(p,u,l,d)}const p=Object(v.a)(t,"x","conv2d"),h=Object(v.a)(e,"filter","conv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(yt.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A.b(4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,".")),A.b(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(h.rank,".")),null!=o&&A.b(A.v(a),()=>"Error in fused conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,".")),A.b(f.shape[3]===h.shape[2],()=>"Error in conv2d: depth of input (".concat(f.shape[3],") must match ")+"input depth for filter ".concat(h.shape[2],".")),A.b(Zn.h(n,s),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'")),A.b("NHWC"===r,()=>"Error in conv2d: got dataFormat of ".concat(r," but only NHWC is currently supported."));const b=Zn.a(f.shape,h.shape,n,s,a,o);let g,y;null!=c&&(g=Object(v.a)(c,"bias","fused conv2d"),[g]=Object(zn.makeTypesMatch)(g,p),Xn.a(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[r,o,i,c]=e,l=Object(Jn.c)(t,i,u);A.b(Zn.i(s),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"));const d=[Object(Qn.a)(o.shape,l,r,n,a),Object(Yn.a)(o,l,r.shape,n,a)];if(null!=c){const t=Object(Jn.b)(c,l);d.push(t)}return d},w={x:f,filter:h,bias:g,preluActivationWeights:y},k={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:d};if(null==c){return Object(Kn.a)((t,e,n)=>{let a=st.a.runKernel(ot.jb,w,k);return n([e,t,a]),m&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,h)}return Object(Kn.a)((t,e,n,a)=>{let r=st.a.runKernel(ot.jb,w,k);return a([e,t,r,n]),m&&(r=Object(yt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,h,g)}});var ta=n(168),ea=n(167);const na=Object(N.b)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(Jn.d)(st.a.state.gradientDepth,u)){let p=Object(rt.a)(t,e,n,a,r,s,o);return null!=c&&(p=Object(i.a)(p,c)),Object(Jn.a)(p,u,l,d)}const p=Object(v.a)(t,"x","depthwiseConv2d"),h=Object(v.a)(e,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(yt.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A.b(4===f.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,".")),A.b(4===h.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(h.rank,".")),A.b(f.shape[3]===h.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(h.shape[2],".")),null==s&&(s=[1,1]),A.b(Zn.h(n,s),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(n," and dilations '").concat(s,"'")),null!=o&&A.b(A.v(a),()=>"Error in fused depthwiseConv2d: pad must be an integer when "+"using dimRoundingMode ".concat(o," but got pad ").concat(a,"."));const b=Zn.a(f.shape,h.shape,n,s,a,o,!0);let g,y;null!=c&&(g=Object(v.a)(c,"bias","fused conv2d"),[g]=Object(zn.makeTypesMatch)(g,p),Xn.a(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{A.b(Zn.i(s),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'"));const[r,i,c,l]=e,d=Object(Jn.c)(t,c,u),p=Object(ea.a)(i.shape,d,r,n,a,s,o),h=Object(ta.a)(i,d,r.shape,n,a,s,o);if(null!=l){return[p,h,Object(Jn.b)(g,d)]}return[p,h]},w={x:f,filter:h,bias:g,preluActivationWeights:y},k={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:d};if(null==c){return Object(Kn.a)((t,e,n)=>{let a=st.a.runKernel(ot.kb,w,k);return n([e,t,a]),m&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,h)}return Object(Kn.a)((t,e,n,a)=>{let r=st.a.runKernel(ot.kb,w,k);return a([e,t,r,n]),m&&(r=Object(yt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,h,g)}});const aa=Object(N.b)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:c}){if(!1===Object(Jn.d)(st.a.state.gradientDepth,s)){let u=Object(k.a)(t,e,n,a);return null!=r&&(u=Object(i.a)(u,r)),Object(Jn.a)(u,s,o,c)}let u=Object(v.a)(t,"a","fused matMul"),l=Object(v.a)(e,"b","fused matMul");[u,l]=Object(zn.makeTypesMatch)(u,l);const d=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=a?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),b=l.shape.slice(0,-2),g=A.N(m),y=A.N(b);A.b(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>"Error in fused matMul: inputs must have the same rank of at "+"least 2, got ranks ".concat(u.rank," and ").concat(l.rank,".")),A.b(A.a(m,b),()=>"Error in fused matMul: outer dimensions (".concat(m,") and (")+"".concat(b,") of Tensors with shapes ").concat(u.shape," and ")+"".concat(l.shape," must match.")),A.b(d===p,()=>"Error in fused matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(u.shape," and ")+"".concat(l.shape," and transposeA=").concat(n)+" and transposeB=".concat(a," must match."));const x=u.shape.slice(0,-2).concat([h,f]),w=n?Object(yt.a)(u,[g,d,h]):Object(yt.a)(u,[g,h,d]),O=a?Object(yt.a)(l,[y,f,p]):Object(yt.a)(l,[y,p,f]);let N,I;null!=r&&(N=Object(v.a)(r,"bias","fused matMul"),[N]=Object(zn.makeTypesMatch)(N,u),Xn.a(x,N.shape)),null!=o&&(I=Object(v.a)(o,"prelu weights","fused matMul"));const S=(t,e)=>{const[o,i,c,u]=e,l=Object(Jn.c)(Object(yt.a)(t,c.shape),c,s);let d,p;if(n||a?!n&&a?(d=Object(k.a)(l,i,!1,!1),p=Object(k.a)(l,o,!0,!1)):n&&!a?(d=Object(k.a)(i,l,!1,!0),p=Object(k.a)(o,l,!1,!1)):(d=Object(k.a)(i,l,!0,!0),p=Object(k.a)(l,o,!0,!0)):(d=Object(k.a)(l,i,!1,!0),p=Object(k.a)(o,l,!0,!1)),null!=r){return[d,p,Object(Jn.b)(u,l)]}return[d,p]},T={a:w,b:O,bias:N,preluActivationWeights:I},j={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:c};if(null==r){return Object(Kn.a)((t,e,n)=>{const a=st.a.runKernel(ot.ad,T,j);return n([t,e,a]),{value:Object(yt.a)(a,x),gradFunc:S}})(w,O)}return Object(Kn.a)((t,e,n,a)=>{const r=st.a.runKernel(ot.ad,T,j);return a([t,e,r,n]),{value:Object(yt.a)(r,x),gradFunc:S}})(w,O,N)}});const ra=Object(N.b)({hammingWindow_:function(t){return Hn(t,.54,.46)}});const sa=Object(N.b)({hannWindow_:function(t){return Hn(t,.5,.5)}});const oa=Object(N.b)({frame_:function(t,e,n,a=!1,r=0){let s=0;const o=[];for(;s+e<=t.size;)o.push(Object(S.a)(t,s,e)),s+=n;if(a)for(;s<t.size;){const a=s+e-t.size,i=Object(w.a)([Object(S.a)(t,s,e-a),Object(wt.a)([a],r)]);o.push(i),s+=n}return 0===o.length?gn([],[0,e]):Object(yt.a)(Object(w.a)(o),[o.length,e])}});const ia=Object(N.b)({stft_:function(t,e,n,a,r=sa){null==a&&(a=Gn(e));const s=oa(t,e,n),o=Object(O.a)(s,r(e)),i=[];for(let c=0;c<s.shape[0];c++)i.push(Object(an.a)(Object(S.a)(o,[c,0],[1,e]),a));return Object(w.a)(i)}});const ca=Object(N.b)({cropAndResize_:function(t,e,n,a,r="bilinear",s=0){const o=Object(v.a)(t,"image","cropAndResize"),i=Object(v.a)(e,"boxes","cropAndResize","float32"),c=Object(v.a)(n,"boxInd","cropAndResize","int32"),u=i.shape[0];A.b(4===o.rank,()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,".")),A.b(2===i.rank&&4===i.shape[1],()=>"Error in cropAndResize: boxes must be have size [".concat(u,",4] ")+"but had shape ".concat(i.shape,".")),A.b(1===c.rank&&c.shape[0]===u,()=>"Error in cropAndResize: boxInd must be have size [".concat(u,"] ")+"but had shape ".concat(i.shape,".")),A.b(2===a.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,".")),A.b(a[0]>=1&&a[1]>=1,()=>"cropSize must be atleast [1,1], but was ".concat(a)),A.b("bilinear"===r||"nearest"===r,()=>"method must be bilinear or nearest, but was ".concat(r));const l={image:o,boxes:i,boxInd:c},d={method:r,extrapolationValue:s,cropSize:a};return st.a.runKernel(ot.K,l,d)}});const ua=Object(N.b)({flipLeftRight_:function(t){const e=Object(v.a)(t,"image","flipLeftRight","float32");A.b(4===e.rank,()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,"."));const n={image:e};return st.a.runKernel(ot.eb,n,{})}});const la=Object(N.b)({rotateWithOffset_:function(t,e,n=0,a=.5){const r=Object(v.a)(t,"image","rotateWithOffset","float32");A.b(4===r.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,"."));const s={image:r},o={radians:e,fillValue:n,center:a};return st.a.runKernel(ot.uc,s,o)}});function da(t,e,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=t.shape[0];return n=Math.min(n,o),A.b(0<=a&&a<=1,()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'")),A.b(2===t.rank,()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'")),A.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1])),A.b(1===e.rank,()=>"scores must be a 1D tensor"),A.b(e.shape[0]===o,()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(e.shape[0])),A.b(0<=s&&s<=1,()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'")),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const pa=Object(N.b)({nonMaxSuppression_:function(t,e,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=Object(v.a)(t,"boxes","nonMaxSuppression"),o=Object(v.a)(e,"scores","nonMaxSuppression"),i=da(s,o,n,a,r),c={maxOutputSize:n=i.maxOutputSize,iouThreshold:a=i.iouThreshold,scoreThreshold:r=i.scoreThreshold};return st.a.runKernel(ot.Wb,{boxes:s,scores:o},c)}});var ha=n(65);const fa=async function(t,e,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=Object(v.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(e,"scores","nonMaxSuppressionAsync"),i=da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),u=c[0],l=c[1],{selectedIndices:d}=Object(ha.a)(u,l,n,a,r);return s!==t&&s.dispose(),o!==e&&o.dispose(),Object(mn.a)(d,"int32")};const ma=Object(N.b)({nonMaxSuppressionWithScore_:function(t,e,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const o=Object(v.a)(t,"boxes","nonMaxSuppression"),i=Object(v.a)(e,"scores","nonMaxSuppression"),c=da(o,i,n,a,r,s),u={boxes:o,scores:i},l={maxOutputSize:n=c.maxOutputSize,iouThreshold:a=c.iouThreshold,scoreThreshold:r=c.scoreThreshold,softNmsSigma:s=c.softNmsSigma},d=st.a.runKernel(ot.Yb,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const ba=async function(t,e,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const o=Object(v.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(v.a)(e,"scores","nonMaxSuppressionAsync"),c=da(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:p,selectedScores:h}=Object(ha.c)(l,d,n,a,r,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Object(mn.a)(p,"int32"),selectedScores:Object(mn.a)(h)}};const ga=Object(N.b)({nonMaxSuppressionPadded_:function(t,e,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const o=Object(v.a)(t,"boxes","nonMaxSuppression"),i=Object(v.a)(e,"scores","nonMaxSuppression"),c=da(o,i,n,a,r,null),u={boxes:o,scores:i},l={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},d=st.a.runKernel(ot.Xb,u,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const ya=async function(t,e,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const o=Object(v.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(v.a)(e,"scores","nonMaxSuppressionAsync"),c=da(o,i,n,a,r,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Object(ha.b)(p,h,u,l,d,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Object(mn.a)(f,"int32"),validOutputs:Object(Be.a)(m,"int32")}};var xa=n(166),va=n(165);const wa=Object(N.b)({bandPart_:function(t,e,n){Object(A.b)(e%1===0,()=>"bandPart(): numLower must be an integer, got ".concat(e,".")),Object(A.b)(n%1===0,()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."));const a=Object(v.a)(t,"a","bandPart");Object(A.b)(a.rank>=2,()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,"."));const r=a.shape,[s,o]=a.shape.slice(-2);if(!(e<=s))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(s,")."));if(!(n<=o))throw new Error("bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."));e<0&&(e=s),n<0&&(n=o);const i=Object(yt.a)(Object(je.a)(0,s,1,"int32"),[-1,1]),c=Object(je.a)(0,o,1,"int32"),u=Object(ae.a)(i,c),l=Object(Wt.a)(Object(Rt.a)(u,Object(Be.a)(+e,"int32")),Object(St.a)(u,Object(Be.a)(-n,"int32"))),d=Object(En.a)([s,o],a.dtype);return Object(yt.a)(Object(un.a)(Object(Sn.a)(Object(yt.a)(a,[-1,s,o])).map(t=>Object(jn.a)(l,t,d))),r)}});const ka=Object(N.b)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(A.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(A.b)(t[e].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")"))}else e=!0,t=Object(rn.a)(t,t.shape[0],0).map(t=>Object(cn.a)(t,[0]));Object(A.b)(t.length<=t[0].shape[0],()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],")."));const n=[],a=t;for(let r=0;r<t.length;++r)n.push(st.a.tidy(()=>{let t=a[r];if(r>0)for(let e=0;e<r;++e){const a=Object(O.a)(Object(pn.a)(Object(O.a)(n[e],t)),n[e]);t=Object(ae.a)(t,a)}return Object(ut.a)(t,Object(Mn.a)(t,"euclidean"))}));return e?Object(un.a)(n,0):n}});var Oa=n(19);function Na(t,e=!1){return st.a.tidy(()=>{Object(A.b)(2===t.shape.length,()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor."));const n=t.shape[0],a=t.shape[1];let r=vt(n),s=Object(W.a)(t);const o=gn([[1]],[1,1]);let i=Object(W.a)(o);const c=n>=a?a:n;for(let t=0;t<c;++t){const e=s,c=i,u=r;[i,s,r]=st.a.tidy(()=>{const e=Object(S.a)(s,[t,t],[n-t,1]),c=Object(Mn.a)(e),u=Object(S.a)(s,[t,t],[1,1]),l=Object(jn.a)(Object(It.a)(u,0),gn([[-1]]),gn([[1]])),d=Object(ae.a)(u,Object(O.a)(l,c)),p=Object(ut.a)(e,d);i=1===p.shape[0]?Object(W.a)(o):Object(w.a)([o,Object(S.a)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Object(ie.a)(Object(ut.a)(Object(k.a)(l,d),c)),f=Object(S.a)(s,[t,0],[n-t,a]),m=Object(O.a)(h,i),b=Object(Fn.a)(i);if(0===t)s=Object(ae.a)(f,Object(k.a)(m,Object(k.a)(b,f)));else{const e=Object(ae.a)(f,Object(k.a)(m,Object(k.a)(b,f)));s=Object(w.a)([Object(S.a)(s,[0,0],[t,a]),e],0)}const g=Object(Fn.a)(m),y=Object(S.a)(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=Object(ae.a)(y,Object(k.a)(Object(k.a)(y,i),g));else{const e=Object(ae.a)(y,Object(k.a)(Object(k.a)(y,i),g));r=Object(w.a)([Object(S.a)(r,[0,0],[n,t]),e],1)}return[i,s,r]}),Object(Oa.d)([e,c,u])}return!e&&n>a&&(r=Object(S.a)(r,[0,0],[n,a]),s=Object(S.a)(s,[0,0],[a,a])),[r,s]})}const Ia=Object(N.b)({qr_:function(t,e=!1){if(Object(A.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank)),2===t.rank)return Na(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),a=Object(Sn.a)(Object(yt.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],s=[];a.forEach(t=>{const[n,a]=Na(t,e);r.push(n),s.push(a)});return[Object(yt.a)(Object(un.a)(r,0),t.shape),Object(yt.a)(Object(un.a)(s,0),t.shape)]}}});var Sa=n(30);const Ta=Object(N.b)({computeWeightedLoss_:function(t,e,n=Sa.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(v.a)(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=Object(v.a)(e,"weights","computeWeightedLoss"));const s=null==r?a:Object(O.a)(a,r);if(n===Sa.a.NONE)return s;if(n===Sa.a.SUM)return Object(pn.a)(s);if(n===Sa.a.MEAN){if(null==r)return Object(Qt.a)(s);{const t=a.size/r.size,e=Object(ut.a)(Object(pn.a)(s),Object(pn.a)(r));return t>1?Object(ut.a)(e,Object(Be.a)(t)):e}}if(n===Sa.a.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Object(ut.a)(Object(pn.a)(s),Object(Be.a)(a.size));{const t=Object(O.a)(r,Object(le.a)(a.shape)),e=Object(L.a)(Object(pn.a)(Object(ce.a)(t,Object(Be.a)(0))),"float32");return Object(ut.a)(Object(pn.a)(s),e)}}throw Error("Unknown reduction: ".concat(n))}});const ja=Object(N.b)({absoluteDifference_:function(t,e,n,a=Sa.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(t,"labels","absoluteDifference"),o=Object(v.a)(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(v.a)(n,"weights","absoluteDifference")),Object(A.e)(s.shape,o.shape,"Error in absoluteDifference: ");const c=Object(r.a)(Object(ae.a)(s,o));return Ta(c,i,a)}});const Ca=Object(N.b)({cosineDistance_:function(t,e,n,a,r=Sa.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(t,"labels","cosineDistance"),o=Object(v.a)(e,"predictions","cosineDistance");let i=null;null!=a&&(i=Object(v.a)(a,"weights","cosineDistance")),Object(A.e)(s.shape,o.shape,"Error in cosineDistance: ");const c=Object(Be.a)(1),u=Object(ae.a)(c,Object(pn.a)(Object(O.a)(s,o),n,!0));return Ta(u,i,r)}});const Ea=Object(N.b)({hingeLoss_:function(t,e,n,a=Sa.a.SUM_BY_NONZERO_WEIGHTS){let r=Object(v.a)(t,"labels","hingeLoss");const s=Object(v.a)(e,"predictions","hingeLoss");let o=null;null!=n&&(o=Object(v.a)(n,"weights","hingeLoss")),Object(A.e)(r.shape,s.shape,"Error in hingeLoss: ");const i=Object(Be.a)(1);r=Object(ae.a)(Object(O.a)(Object(Be.a)(2),r),i);const c=Object(Ae.a)(Object(ae.a)(i,Object(O.a)(r,s)));return Ta(c,o,a)}});const Aa=Object(N.b)({huberLoss_:function(t,e,n,a=1,s=Sa.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(v.a)(t,"labels","huberLoss"),c=Object(v.a)(e,"predictions","huberLoss");let u=null;null!=n&&(u=Object(v.a)(n,"weights","huberLoss")),Object(A.e)(o.shape,c.shape,"Error in huberLoss: ");const l=Object(Be.a)(a),d=Object(r.a)(Object(ae.a)(c,o)),p=Object(Jt.a)(d,l),h=Object(ae.a)(d,p),f=Object(i.a)(Object(O.a)(Object(Be.a)(.5),Object(ne.a)(p)),Object(O.a)(l,h));return Ta(f,u,s)}});const _a=Object(N.b)({logLoss_:function(t,e,n,a=1e-7,r=Sa.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(t,"labels","logLoss"),o=Object(v.a)(e,"predictions","logLoss");let c=null;null!=n&&(c=Object(v.a)(n,"weights","logLoss")),Object(A.e)(s.shape,o.shape,"Error in logLoss: ");const u=Object(Be.a)(1),l=Object(Be.a)(a),d=Object(ie.a)(Object(O.a)(s,Object(Mt.a)(Object(i.a)(o,l)))),p=Object(O.a)(Object(ae.a)(u,s),Object(Mt.a)(Object(i.a)(Object(ae.a)(u,o),l))),h=Object(ae.a)(d,p);return Ta(h,c,r)}});const Ra=Object(N.b)({meanSquaredError_:function(t,e,n,a=Sa.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(v.a)(t,"labels","meanSquaredError"),s=Object(v.a)(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=Object(v.a)(n,"weights","meanSquaredError")),Object(A.e)(r.shape,s.shape,"Error in meanSquaredError: ");const i=Object(on.a)(r,s);return Ta(i,o,a)}});const Da=Object(N.b)({sigmoidCrossEntropy_:function(t,e,n,a=0,s=Sa.a.SUM_BY_NONZERO_WEIGHTS){let o=Object(v.a)(t,"multiClassLabels","sigmoidCrossEntropy");const c=Object(v.a)(e,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=Object(v.a)(n,"weights","sigmoidCrossEntropy")),Object(A.e)(o.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const t=Object(Be.a)(a),e=Object(Be.a)(1),n=Object(Be.a)(.5);o=Object(i.a)(Object(O.a)(o,Object(ae.a)(e,t)),Object(O.a)(n,t))}const l=function(t,e){const n=Object(v.a)(t,"labels","sigmoidCrossEntropyWithLogits"),a=Object(v.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(A.e)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(Ae.a)(a),o=Object(O.a)(a,n),c=Object(zt.a)(Object(mt.a)(Object(ie.a)(Object(r.a)(a))));return Object(i.a)(Object(ae.a)(s,o),c)}(o,c);return Ta(l,u,s)}});const Fa=Object(N.b)({softmaxCrossEntropy_:function(t,e,n,a=0,r=Sa.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(v.a)(t,"onehotLabels","softmaxCrossEntropy");const o=Object(v.a)(e,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=Object(v.a)(n,"weights","softmaxCrossEntropy")),Object(A.e)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const t=Object(Be.a)(a),e=Object(Be.a)(1),n=Object(Be.a)(s.shape[1]);s=Object(i.a)(Object(O.a)(s,Object(ae.a)(e,t)),Object(ut.a)(t,n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));return Object(Kn.a)((t,e,a)=>{const r=Object(Bt.a)(e,[n],!0),s=Object(ae.a)(Object(L.a)(e,"float32"),r);a([t,s]);const o=Object(ie.a)(Object(O.a)(s,t));return{value:Object(pn.a)(o,[n]),gradFunc:(t,e)=>{const[a,r]=e,s=Object(ee.e)(t.shape,[n]);return[Object(O.a)(Object(yt.a)(t,s),Object(ae.a)(Object(L.a)(a,"float32"),Object(mt.a)(r))),Object(O.a)(Object(yt.a)(t,s),Object(ae.a)(Object(mt.a)(r),Object(L.a)(a,"float32")))]}}})(t,e)}(s,o);return Ta(u,c,r)}}),Ma={fft:tn.a,ifft:en.a,rfft:an.a,irfft:nn.a},za={hammingWindow:ra,hannWindow:sa,frame:oa,stft:ia},La={flipLeftRight:ua,resizeNearestNeighbor:va.a,resizeBilinear:xa.a,rotateWithOffset:la,cropAndResize:ca,nonMaxSuppression:pa,nonMaxSuppressionAsync:fa,nonMaxSuppressionWithScore:ma,nonMaxSuppressionWithScoreAsync:ba,nonMaxSuppressionPadded:ga,nonMaxSuppressionPaddedAsync:ya},Pa={bandPart:wa,gramSchmidt:ka,qr:Ia},Ba={absoluteDifference:ja,computeWeightedLoss:Ta,cosineDistance:Ca,hingeLoss:Ea,huberLoss:Aa,logLoss:_a,meanSquaredError:Ra,sigmoidCrossEntropy:Da,softmaxCrossEntropy:Fa}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(11),i=n(4);const c=Object(i.b)({sum_:function(t,e=null,n=!1){let i=Object(s.a)(t,"x","sum");"bool"===i.dtype&&(i=Object(o.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return a.a.runKernel(r.Qc,c,u)}})},function(t,e,n){"use strict";n.d(e,"g",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return p})),n.d(e,"m",(function(){return h})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return x})),n.d(e,"o",(function(){return v})),n.d(e,"k",(function(){return w})),n.d(e,"q",(function(){return k})),n.d(e,"i",(function(){return O})),n.d(e,"j",(function(){return N})),n.d(e,"p",(function(){return I})),n.d(e,"a",(function(){return S})),n.d(e,"s",(function(){return T}));var a=n(5),r=n(22),s=n(6),o=n(21);function i(){Object(r.c)().set("PROD",!0)}function c(){Object(r.c)().set("DEBUG",!0)}function u(){Object(r.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(r.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.a.disposeVariables()}function p(){return a.a}function h(){return a.a.memory()}function f(t){return a.a.profile(t)}function m(t,e){return a.a.tidy(t,e)}function b(t){Object(o.getTensorsInContainer)(t).forEach(t=>t.dispose())}function g(t){return a.a.keep(t)}function y(t){return a.a.time(t)}function x(t){return a.a.setBackend(t)}function v(){return a.a.ready()}function w(){return a.a.backendName}function k(t){a.a.removeBackend(t)}function O(t){return a.a.findBackend(t)}function N(t){return a.a.findBackendFactory(t)}function I(t,e,n=1){return a.a.registerBackend(t,e,n)}function S(){return a.a.backend}function T(t,e){Object(r.c)().setPlatform(t,e)}Object(s.d)(l)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({zerosLike_:function(t){const e={x:Object(s.a)(t,"x","zerosLike")};return a.a.runKernel(r.Zc,e)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return o})),n.d(e,"assertTypesMatch",(function(){return i})),n.d(e,"isTensorInList",(function(){return c})),n.d(e,"getTensorsInContainer",(function(){return u}));var a=n(6),r=n(79),s=n(7);function o(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(r.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i(t,e){Object(s.b)(t.dtype===e.dtype,()=>"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match"))}function c(t,e){return e.some(e=>e.id===t.id)}function u(t){const e=[];return function t(e,n,r){if(null==e)return;if(e instanceof a.a)return void n.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const o=e;for(const a in o){const e=o[a];r.has(e)||(r.add(e),t(e,n,r))}}(t,e,new Set),e}},function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return s})),n.d(e,"a",(function(){return o})),n.d(e,"d",(function(){return i}));var a=n(7);class r{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,".")),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(a.x)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(e,n)})}}}function s(){return o}let o=null;function i(t){o=t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(5),r=n(1),s=n(4);const o=Object(s.b)({square_:function(t){const e=Object(r.a)(t,"x","square");return a.a.runKernel("Square",{x:e},{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({slice_:function(t,e,n){const o=Object(s.a)(t,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:e,size:n};return a.a.runKernel(r.Ec,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({matMul_:function(t,e,n=!1,i=!1){let c=Object(o.a)(t,"a","matMul"),u=Object(o.a)(e,"b","matMul");[c,u]=Object(s.makeTypesMatch)(c,u);const l={a:c,b:u},d={transposeA:n,transposeB:i};return a.a.runKernel(r.s,l,d)}})},function(t,e,n){"use strict";function a(t,e,n,a,r="NHWC",s){return o(t,[...e,t[3]],n,s,a,null,null,m(r))}function r(t,e,n,a,r,s,i="channelsLast"){const[c,l]=u(e);let d;if("channelsLast"===i)d=[c,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));d=[c,l,t[1],t[1]]}return o(t,d,n,a,r,s,!1,i)}function s(t,e,n,a,r,s,o="NDHWC"){const[c,u,d]=l(e);let p,h;if("NDHWC"===o)h="channelsLast",p=[c,u,d,t[4],t[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",p=[c,u,d,t[1],t[1]]}return i(t,p,n,a,r,!1,h,s)}function o(t,e,n,a,r,s,o=!1,i="channelsLast"){let[l,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[l,h,f,m]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[l,m,h,f]=t}const[b,g,,y]=e,[x,v]=u(n),[w,k]=u(a),O=d(b,w),N=d(g,k),{padInfo:I,outHeight:S,outWidth:T}=function(t,e,n,a,r,s,o,i,u){let l,d,h;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,a,r){null==a&&(a=c(t,e,n));const s=t[0],o=t[1],i=p((s-e+2*a)/n+1,r),u=p((o-e+2*a)/n+1,r);return[i,u]}([e,n],s,a,t,i);d=r[0],h=r[1]}else if("same"===t){d=Math.ceil(e/a),h=Math.ceil(n/r);const t=Math.max(0,(d-1)*a+s-e),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(t/2),u=t-c,p=Math.floor(i/2);l={top:c,bottom:u,left:p,right:i-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const c="channelsLast"===u?t[1][0]:t[2][0],f="channelsLast"===u?t[1][1]:t[2][1],m="channelsLast"===u?t[2][0]:t[3][0],b="channelsLast"===u?t[2][1]:t[3][1];l={top:c,bottom:f,left:m,right:b,type:0===c&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=p((e-s+c+f)/a+1,i),h=p((n-o+m+b)/r+1,i)}}return{padInfo:l,outHeight:d,outWidth:h}}(r,h,f,x,v,O,N,s,i),j=o?y*m:y;let C;return"channelsFirst"===i?C=[l,j,S,T]:"channelsLast"===i&&(C=[l,S,T,j]),{batchSize:l,dataFormat:i,inHeight:h,inWidth:f,inChannels:m,outHeight:S,outWidth:T,outChannels:j,padInfo:I,strideHeight:x,strideWidth:v,filterHeight:b,filterWidth:g,effectiveFilterHeight:O,effectiveFilterWidth:N,dilationHeight:w,dilationWidth:k,inShape:t,outShape:C,filterShape:e}}function i(t,e,n,a,r,s=!1,o="channelsLast",i){let[u,h,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,h,f,m,b]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[u,b,h,f,m]=t}const[g,y,x,,v]=e,[w,k,O]=l(n),[N,I,S]=l(a),T=d(g,N),j=d(y,I),C=d(x,S),{padInfo:E,outDepth:A,outHeight:_,outWidth:R}=function(t,e,n,a,r,s,o,i,u,l,d){let h,f,m,b;if("number"===typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,r,s){null==r&&(r=c(t,e,a));const o=t[0],i=t[1],u=t[2],l=p((o-e+2*r)/a+1,s),d=p((i-e+2*r)/a+1,s),h=p((u-e+2*r)/a+1,s);return[l,d,h,n]}([e,n,a,1],i,1,r,t,d);f=s[0],m=s[1],b=s[2]}else if("same"===t){f=Math.ceil(e/r),m=Math.ceil(n/s),b=Math.ceil(a/o);const t=(f-1)*r+i-e,c=(m-1)*s+u-n,d=(b-1)*o+l-a,p=Math.floor(t/2),g=t-p,y=Math.floor(c/2),x=c-y,v=Math.floor(d/2);h={top:y,bottom:x,left:v,right:d-v,front:p,back:g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: ".concat(t));h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((e-i+1)/r),m=Math.ceil((n-u+1)/s),b=Math.ceil((a-l+1)/o)}return{padInfo:h,outDepth:f,outHeight:m,outWidth:b}}(r,h,f,m,w,k,O,T,j,C,i),D=s?v*b:v;let F;return"channelsFirst"===o?F=[u,D,A,_,R]:"channelsLast"===o&&(F=[u,A,_,R,D]),{batchSize:u,dataFormat:o,inDepth:h,inHeight:f,inWidth:m,inChannels:b,outDepth:A,outHeight:_,outWidth:R,outChannels:D,padInfo:E,strideDepth:w,strideHeight:k,strideWidth:O,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:T,effectiveFilterHeight:j,effectiveFilterWidth:C,dilationDepth:N,dilationHeight:I,dilationWidth:S,inShape:t,outShape:F,filterShape:e}}function c(t,e,n,a=1){const r=d(e,a);return Math.floor((t[0]*(n-1)-n+r)/2)}function u(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function l(t){return"number"===typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function p(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function h(t){const[e,n,a]=u(t);return 1===e&&1===n&&1===a}function f(t,e){return h(t)||h(e)}function m(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return r})),n.d(e,"f",(function(){return s})),n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c})),n.d(e,"i",(function(){return h})),n.d(e,"h",(function(){return f})),n.d(e,"g",(function(){return m}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({neg_:function(t){const e={x:Object(s.a)(t,"x","neg")};return a.a.runKernel(r.Vb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(58),c=n(4);const u=Object(c.b)({concat_:function(t,e=0){Object(o.b)(t.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s.b)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))}),1===n.length)return Object(i.a)(n[0]);const c=n,u={axis:e};return a.a.runKernel(r.B,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c}));var a=n(5),r=n(6),s=n(1),o=n(7);function i(t){return o.b(o.u(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const r=Object(s.a)(e,"x","tf.grad","string_or_numeric"),i=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return a.a.tidy(()=>{const{value:e,grads:n}=a.a.gradients(()=>t(r),[r],i);return null!=i&&o.e(e.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]})}}function c(t){return o.b(o.u(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{o.b(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Object(s.b)(e,"args","tf.grads","string_or_numeric"),i=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return a.a.tidy(()=>{const{value:e,grads:n}=a.a.gradients(()=>t(...r),r,i);return null!=i&&o.e(e.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n})}}function u(t){return o.b(o.u(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{o.b(e instanceof r.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),o.b(null==n||n instanceof r.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:i}=a.a.gradients(()=>t(e),[e],n);return h(s),{grad:s[0],value:i}}}function l(t){return o.b(o.u(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{o.b(Array.isArray(e)&&e.every(t=>t instanceof r.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),o.b(null==n||n instanceof r.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=a.a.gradients(()=>t(...e),e,n);return null!=n&&o.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(s.grads),s}}function d(t,e){o.b(o.u(t),()=>"The f passed in variableGrads(f) must be a function"),o.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof r.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in a.a.registeredVariables)e.push(a.a.registeredVariables[t])}const s=n?e.filter(t=>!t.trainable):null,i=e.length;e=e.filter(t=>t.trainable),o.b(e.length>0,()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable.");const{value:c,grads:u}=a.a.gradients(t,e,null,!0);o.b(u.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),o.b(0===c.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor"));const l={};return e.forEach((t,e)=>{null!=u[e]&&(l[t.name]=u[e])}),null!=s&&s.forEach(t=>l[t.name]=null),{value:c,grads:l}}function p(t){return a.a.customGrad(t)}function h(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},function(t,e,n){"use strict";var a;n.d(e,"a",(function(){return a})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(92),c=n(16),u=n(4);const l=Object(u.b)({where_:function(t,e,n){const u=Object(s.a)(e,"a","where"),l=Object(s.a)(n,"b","where"),d=Object(s.a)(t,"condition","where","bool"),p=Object(c.a)(u.shape,l.shape),h=Object(i.a)(u,p),f=Object(i.a)(l,p);1===d.rank&&Object(o.b)(d.shape[0]===u.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(o.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:h,e:f};return a.a.runKernel(r.yc,m)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({sqrt_:function(t){const e={x:Object(s.a)(t,"x","sqrt")};return a.a.runKernel(r.Kc,e)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return o})),n.d(e,"e",(function(){return i})),n.d(e,"a",(function(){return c})),n.d(e,"f",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var a=n(7);function r(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function s(t,e,n){const a=t.length+e.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(t[s++]):r.push(e[o++]);return r}function o(t,e){const n=[],a=t.length;for(let r=0;r<a;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map(e=>t[e])]}function i(t,e){return s(t,e.map(t=>1),e)}function c(t,e,n){a.b(r(e,n),()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input."))}function u(t,e){if(r(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let a=e-t;a<e;++a)n.push(a);return n}},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return i})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return h})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var a=n(51),r=n(89),s=n(7),o=n(128);async function i(t,e){const n=[],a=[],r=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(t)?t[s].tensor:t[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise(async t=>{const e=await i.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,a=new Uint8Array(n);let r=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);a.set(n,r),r+=4,a.set(t,r),r+=t.length}t(a)});a.push(t)}else a.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:u(await Promise.all(a)),specs:n}}function c(t,e){const n={};let i,c=0;for(const u of e){const e=u.name,l=u.dtype,d=u.shape,p=Object(s.N)(d);let h;if("quantization"in u){const n=u.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error("Weight ".concat(u.name," with quantization ").concat(n.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error("Weight ".concat(u.name," has unknown ")+"quantization dtype ".concat(n.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==l)throw new Error("Weight ".concat(u.name," is quantized with ").concat(n.dtype," ")+"which only supports weights of type float32 not ".concat(l,"."))}const a=o.a[n.dtype],r=t.slice(c,c+p*a),s="uint8"===n.dtype?new Uint8Array(r):new Uint16Array(r);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];h[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type float32.");void 0===i&&(i=g()),h=i(s)}else{if("int32"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type int32.");h=new Int32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];h[t]=Math.round(e*n.scale+n.min)}}c+=p*a}else if("string"===l){const e=Object(s.N)(u.shape);h=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(c,c+4))[0];c+=4;const n=new Uint8Array(t.slice(c,c+e));h.push(n),c+=e}}else{const s=o.a[l],i=t.slice(c,c+p*s);if("float32"===l)h=new Float32Array(i);else if("int32"===l)h=new Int32Array(i);else if("bool"===l)h=new Uint8Array(i);else{if("complex64"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));{h=new Float32Array(i);const t=new Float32Array(h.length/2),s=new Float32Array(h.length/2);for(let e=0;e<t.length;e++)t[e]=h[2*e],s[e]=h[2*e+1];const o=Object(r.a)(t,d,"float32"),c=Object(r.a)(s,d,"float32");n[e]=Object(a.a)(o,c),o.dispose(),c.dispose()}}c+=p*s}"complex64"!==l&&(n[e]=Object(r.a)(h,d,l))}return n}function u(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))});const a=new Uint8Array(e);let r=0;return n.forEach(t=>{a.set(new Uint8Array(t.buffer),r),r+=t.byteLength}),a.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function p(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let a="";for(let t=0,r=n.length;t<r;t++)a+=String.fromCharCode(n[t]);return btoa(a)}function h(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),a=new Uint8Array(n.length);for(let t=0;t<n.length;++t)a.set([n.charCodeAt(t)],t);return a.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let a=0;return t.forEach(t=>{n.set(new Uint8Array(t),a),a+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=t[n[r>>10]+(1023&r)]+e[r>>10];s[o]=i}return new Float32Array(r)}}}).call(this,n(169).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({exp_:function(t){const e={x:Object(s.a)(t,"x","exp")};return a.a.runKernel(r.Z,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({abs_:function(t){const e=Object(s.a)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return a.a.runKernel(r.A,t)}{const t={x:e};return a.a.runKernel(r.a,t)}}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return h})),n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"d",(function(){return b}));var a=n(16),r=n(105),s=n(108),o=n(9),i=n(113),c=n(70),u=n(114),l=n(8),d=n(71),p=n(18);function h(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(o.a)(t,Object(d.a)(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function f(t,e){let n=e;const r=a.c(t.shape,e.shape);return r.length>0&&(n=Object(p.a)(n,r)),Object(l.a)(n,t.shape)}function m(t,e,n,a){if("linear"===e)return t;if("relu"===e)return Object(c.a)(t);if("elu"===e)return Object(r.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(i.a)(t,n);if("leakyrelu"===e)return Object(s.a)(t,a);throw new Error("Unknown fused activation ".concat(e,"."))}const b=(t,e)=>!(t>0)||"linear"===e},function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return p})),n.d(e,"g",(function(){return h})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return I})),n.d(e,"c",(function(){return a}));var a,r=n(0),s=n(76),o=n(61);function i(t){return t instanceof r.Tensor?{value:t.clone(),recurse:!1}:Object(o.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class c{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class u extends c{constructor(){super(u.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let a=0;a<n;a++)e[a]=this.get(this.wrap(this.begin+a));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(t){return new m(t)}function d(t){return new b(t)}function p(t,e){return new T(t,e)}function h(t,e=a.FAIL){return new j(t,e)}u.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new O(this,t)}filter(t){return new w(this,t)}map(t){return new k(this,t)}mapAsync(t){return new N(this,t)}serialMapAsync(t){return new N(this,t).serial()}flatmap(t){return new S(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new v(this,t,e)}columnMajorBatch(t,e=!0,n=o.f){return this.rowMajorBatch(t,e).map(t=>Object(o.d)(t,n))}concatenate(t,e){return new T(l([this,t]),e)}take(t){return t<0||null==t?this:new x(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new C(this,t)}shuffle(t,e){return new E(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(o.b)(e,i)),done:!1};var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;r.dispose(t.value)}return this.upstream.next()}}class x extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class v extends f{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;r.dispose(t.value)}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=r.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),a=r.tensor_util.getTensorsInContainer(n);for(const s of e)r.tensor_util.isTensorInList(s,a)||s.dispose();return{value:n,done:!1}}}class O extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class N extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=r.tensor_util.getTensorsInContainer(t.value),n=await this.transform(t.value),a=r.tensor_util.getTensorsInContainer(n);for(const s of e)r.tensor_util.isTensorInList(s,a)||s.dispose();return{value:n,done:!1}}}class I extends f{constructor(){super(),this.outputQueue=new u,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class S extends I{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=r.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),a=r.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of e)r.tensor_util.isTensorInList(s,a)||s.dispose();return!0}}class T extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(a||(a={}));class j extends f{constructor(t,e=a.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{".concat("TODO: fill in upstream of zip summaries","} -> Zip")}async nextState(t){await t;let e=0,n=0;const r=await Object(o.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case a.FAIL:throw new Error("Zipped streams should have the same length. "+"Mismatched at element ".concat(this.count,"."));case a.SHORTEST:return{value:null,done:!0};case a.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class C extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new c(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class E extends C{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=s.alea(n||r.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({greater_:function(t,e){let n=Object(o.a)(t,"a","greater"),c=Object(o.a)(e,"b","greater");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.nb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(6),r=n(7);function s(t,e="float32",n){return e=e||"float32",r.c(t),new a.b(t,e,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({pow_:function(t,e){let n=Object(o.a)(t,"base","pow"),i=Object(o.a)(e,"exp","pow");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.fc,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({reverse_:function(t,e){const n={x:Object(s.a)(t,"x","reverse")},o={dims:e};return a.a.runKernel(r.tc,n,o)}})},function(t,e,n){"use strict";t.exports=n(233)},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(5),r=n(7),s=n(10);function o(t,e,n,o){if(null==o&&(o=Object(r.r)(t)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(r.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(r.c)(e);const t=Object(r.N)(e),a=Object(r.N)(n);Object(r.b)(t===a,()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a));for(let s=0;s<n.length;++s){const t=n[s],a=s!==n.length-1||t!==Object(r.N)(e.slice(s));Object(r.b)(n[s]===e[s]||!a,()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). "))}}return Object(r.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==o?Object(s.toTypedArray)(t,o):Object(r.m)(t,[],!0),a.a.makeTensor(t,e,o)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({transpose_:function(t,e){const n=Object(s.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),o.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of perm ".concat(e,".")),e.forEach(t=>{o.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and ".concat(n.rank-1)+" but got ".concat(e))}),n.rank<=1)return n.clone();const i={x:n},c={perm:e};return a.a.runKernel(r.Vc,i,c)}})},,function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({greaterEqual_:function(t,e){let n=Object(o.a)(t,"a","greaterEqual"),c=Object(o.a)(e,"b","greaterEqual");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.ob,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({lessEqual_:function(t,e){let n=Object(o.a)(t,"a","lessEqual"),c=Object(o.a)(e,"b","lessEqual");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.zb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({pad_:function(t,e,n=0){const o=Object(s.a)(t,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},c={x:o};return a.a.runKernel(r.dc,c,i)}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return N})),n.d(e,"i",(function(){return S})),n.d(e,"c",(function(){return T})),n.d(e,"f",(function(){return j})),n.d(e,"e",(function(){return A})),n.d(e,"d",(function(){return _})),n.d(e,"k",(function(){return D})),n.d(e,"g",(function(){return F})),n.d(e,"h",(function(){return M})),n.d(e,"j",(function(){return z})),n.d(e,"b",(function(){return L}));var a=n(0),r=n(77),s=n(91),o=n(2),i=n(211),c=n(212),u=n(213),l=n(214),d=n(215),p=n(216),h=n(217),f=n(218),m=n(219),b=n(220),g=n(221),y=n(222),x=n(223),v=n(224),w=n(225),k=n(226),O=n(227);class N{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[i,c,u,l,d,p,h,g,b,f,y,x,v,w,k,O,m].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,a=[],r=[],s=[],i=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?a.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t),{});let c=[];const u=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const p=Object.keys(i);p.forEach(t=>{const e=i[t];e.inputNames.forEach(t=>{const[n]=Object(o.b)(t);e.inputs.push(i[n]),i[n].children.push(e)})}),0===Object.keys(d).length?p.forEach(t=>{const e=i[t];0===e.children.length&&u.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(o.b)(t),n=i[e];null!=n&&(n.signatureKey=d[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(o.b)(t),n=i[e];n&&(n.signatureKey=l[t],c.push(n))}):c=a;let h={};null!=t.library&&null!=t.library.function&&(h=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:i,inputs:c,outputs:u,weights:r,placeholders:a,signature:e,functions:h};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(s.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const a=n.type;let r=void 0;switch(n.type){case"string":r=S(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=S(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=M(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=j(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=F(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=T(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=L(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=D(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=z(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=A(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=_(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=E(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:r,type:a},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let a={};null!=e&&(a=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const r=[],s=[];t.signature.inputArg.forEach(t=>{const[e]=Object(o.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:C(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),a[e]=n});Object.keys(a).forEach(t=>{const e=a[t];e.inputNames.forEach(t=>{const[n]=Object(o.b)(t);e.inputs.push(a[n]),a[n].children.push(e)})});const i=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(o.b)(i[t.name]),r=a[e];null!=r&&(r.defaultOutput=n,s.push(r))});const c=this.mapArgsToSignature(t);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function I(e,n){const r=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(a.env)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?r:r.toLowerCase()}function S(t,e,n,a=!1){const r=t[e];return null!=r?I(r.s,a):n}function T(t,e,n){const a=t[e];return a?a.b:n}function j(t,e,n){const a=t[e]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function C(t){switch("string"===typeof t&&(t=r.a[t]),t){case r.a.DT_FLOAT:return"float32";case r.a.DT_INT32:case r.a.DT_INT64:case r.a.DT_INT8:case r.a.DT_UINT8:return"int32";case r.a.DT_BOOL:return"bool";case r.a.DT_DOUBLE:return"float32";case r.a.DT_STRING:return"string";default:return null}}function E(t,e,n){const a=t[e];return a&&a.func?a.func.name:n}function A(t,e,n){const a=t[e];return a&&a.type?C(a.type):n}function _(t,e,n){const a=t[e];return a&&a.list&&a.list.type?a.list.type.map(t=>C(t)):n}function R(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function D(t,e,n){const a=t[e];return a&&a.shape?R(a.shape):n}function F(t,e,n){const a=t[e];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function M(t,e,n,a=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map(t=>I(t,a)):n}function z(t,e,n){const a=t[e];return a&&a.list&&a.list.shape?a.list.shape.map(t=>R(t)):n}function L(t,e,n){const a=t[e];return a&&a.list&&a.list.b?a.list.b:n}}).call(this,n(169).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({complex_:function(t,e){const n=Object(s.a)(t,"real","complex"),i=Object(s.a)(e,"imag","complex");o.e(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.a.runKernel(r.z,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(16),i=n(4);const c=Object(i.b)({logicalAnd_:function(t,e){const n=Object(s.a)(t,"a","logicalAnd","bool"),i=Object(s.a)(e,"b","logicalAnd","bool");Object(o.a)(n.shape,i.shape);const c={a:n,b:i};return a.a.runKernel(r.Eb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({stack_:function(t,e=0){const n=Object(s.b)(t,"tensors","stack","string_or_numeric");o.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&o.b(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,c={axis:e};return a.a.runKernel(r.cc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({expandDims_:function(t,e=0){const n=Object(s.a)(t,"x","expandDims","string_or_numeric");o.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},c={dim:e};return a.a.runKernel(r.ab,i,c)}})},function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(26),c=n(4),u=n(8);const l=Object(c.b)({conv2d_:function(t,e,n,c,l="NHWC",d=[1,1],p){const h=Object(s.a)(t,"x","conv2d"),f=Object(s.a)(e,"filter","conv2d");let m=h,b=!1;3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.b(4===m.rank,()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,".")),o.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")),null!=p&&o.b(o.v(c),()=>"Error in conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(p," but got pad ").concat(c,"."));const g="NHWC"===l?m.shape[3]:m.shape[1];o.b(g===f.shape[2],()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(f.shape[2],".")),o.b(i.h(n,d),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"));const y={x:m,filter:f},x={strides:n,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p},v=a.a.runKernel(r.C,y,x);return b?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(5),r=n(7),s=n(51);function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=o(t,"float32");return Object(s.a)(e,n)}const n=Object(r.F)(Object(r.N)(t),e);return a.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({clone_:function(t){const e={x:Object(s.a)(t,"x","clone","string_or_numeric")};return a.a.runKernel(r.qb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({max_:function(t,e=null,n=!1){const o={x:Object(s.a)(t,"x","max")},i={reductionIndices:e,keepDims:n};return a.a.runKernel(r.Hb,o,i)}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return c})),n.d(e,"d",(function(){return u})),n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return p})),n.d(e,"g",(function(){return h})),n.d(e,"a",(function(){return f}));var a=n(22),r=n(127);const s=Object(r.a)("kernelRegistry",()=>new Map),o=Object(r.a)("gradRegistry",()=>new Map);function i(t,e){const n=m(t,e);return s.get(n)}function c(t){return o.get(t)}function u(t){const e=s.entries(),n=[];for(;;){const{done:a,value:r}=e.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===t&&n.push(o)}return n}function l(t){const{kernelName:e,backendName:n}=t,a=m(e,n);s.has(a)&&console.warn("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),s.set(a,t)}function d(t){const{kernelName:e}=t;o.has(e)&&Object(a.c)().getBool("DEBUG")&&console.warn("Overriding the gradient for '".concat(e,"'")),o.set(e,t)}function p(t,e){const n=m(t,e);if(!s.has(n))throw new Error("The kernel '".concat(t,"' for backend ")+"'".concat(e,"' is not registered"));s.delete(n)}function h(t){if(!o.has(t))throw new Error("The gradient '".concat(t,"' for backend is not registered"));o.delete(t)}function f(t,e){u(t).forEach(t=>{l(Object.assign({},t,{backendName:e}))})}function m(t,e){return"".concat(e,"_").concat(t)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"d",(function(){return o})),n.d(e,"f",(function(){return i})),n.d(e,"c",(function(){return c})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return l}));var a=n(0);function r(t,e){return s(t,e)}function s(t,e,n=new Map,a=new Set){if(null==t)return null;if(a.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(u(t)){const r=Array.isArray(t)?[]:{};a.add(t);for(const o in t){const i=s(t[o],e,n,a);r[o]=i}return a.delete(t),r}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,r.value),r.value}function o(t,e=i){return function t(e,n,a=new Set){const r=e[0];if(a.has(r))throw new Error("Circular references are not supported.");const s=n(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(u(r)){const s=Array.isArray(r)?[]:{};a.add(r);for(const o in r){const r=e.map(t=>t[o]),i=t(r,n,a);s[o]=i}return a.delete(r),s}throw new Error("Can't recurse into non-iterable type: ".concat(r))}return s.value}(t,e)}function i(t){return null===t?null:u(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function c(t,e){const n=new Map;s(t,e,n);for(const r of Array.from(n.keys())){const t=n.get(r);if(a.util.isPromise(t)){const e=await t;n.set(r,e)}}return s(t,e,n)}function u(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof a.Tensor))}function l(t){return null==t||(null===(e=t)||"object"!==typeof e&&"function"!==typeof e)||Array.isArray(t)||"object"===typeof t&&t instanceof a.Tensor||a.util.isTypedArray(t);var e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({log_:function(t){const e={x:Object(s.a)(t,"x","log")};return a.a.runKernel(r.Bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({split_:function(t,e,n=0){const o={x:Object(s.a)(t,"x","split")},i={numOrSizeSplits:e,axis:n};return a.a.runKernel(r.Jc,o,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(1),r=n(7),s=n(44);function o(t,e){Object(r.d)(t);const n=Object(a.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(t,null,n,e)}},function(t,e,n){"use strict";function a(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,r=t.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(e,t[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(t,e,n||r)}(t,e,n),s=a<0?-(a+1):a;t.splice(s,0,e)}function r(t,e){return t>e?1:t<e?-1:0}function s(t,e,n,a,r){return c(t,e,n,a,r,0)}function o(t,e,n,a,r,s){return c(t,e,n,a,r,0,!1,s,!0)}function i(t,e,n,a,r,s){return c(t,e,n,a,r,s,!0)}function c(t,e,n,r,s,o,i=!1,c=!1,p=!1){const h=[];for(let a=0;a<e.length;a++)e[a]>s&&h.push({score:e[a],boxIndex:a,suppressBeginIndex:0});h.sort(d);const f=o>0?-.5/o:0,m=[],b=[];for(;m.length<n&&h.length>0;){const e=h.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=e;if(n<s)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=u(t,o,m[a]);if(n>=r){c=!0;break}if(e.score=e.score*l(r,f,n),e.score<=s)break}e.suppressBeginIndex=m.length,c||(e.score===n?(m.push(o),b.push(e.score)):e.score>s&&a(h,e,d))}const g=m.length,y=n-g;c&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return i&&(x.selectedScores=b),p&&(x.validOutputs=g),x}function u(t,e,n){const a=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-s)*(c-o),f=(d-u)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(s,u),b=Math.max(o,l),g=Math.min(i,d),y=Math.min(c,p),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(h+f-x)}function l(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return i}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(11),u=n(4);const l=Object(u.b)({maximum_:function(t,e){let n=Object(o.a)(t,"a","maximum"),u=Object(o.a)(e,"b","maximum");[n,u]=Object(s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.a)(n.shape,u.shape);const l={a:n,b:u};return a.a.runKernel(r.Nb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4),c=n(8);const u=Object(i.b)({depthwiseConv2d_:function(t,e,n,i,u="NHWC",l=[1,1],d){const p=Object(s.a)(t,"x","depthwiseConv2d"),h=Object(s.a)(e,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.b(4===f.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,".")),o.b(4===h.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(h.rank,".")),o.b(f.shape[3]===h.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(h.shape[2],".")),null!=d&&o.b(o.v(i),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(i,"."));const b={x:f,filter:h},g={strides:n,pad:i,dataFormat:u,dilations:l,dimRoundingMode:d},y=a.a.runKernel(r.O,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({equal_:function(t,e){let n=Object(o.a)(t,"a","equal"),c=Object(o.a)(e,"b","equal");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.X,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(7),s=n(51),o=n(57);function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=Object(o.a)(t,"float32");return Object(s.a)(e,n)}const n=Object(r.D)(Object(r.N)(t),e);return a.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({relu_:function(t){const e={x:Object(s.a)(t,"x","relu")};return a.a.runKernel(r.mc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({step_:function(t,e=0){const n={x:Object(s.a)(t,"x","step")},o={alpha:e};return a.a.runKernel(r.Nc,n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({unstack_:function(t,e=0){const n=Object(s.a)(t,"x","unstack","string_or_numeric");o.b(e>=-n.shape.length&&e<n.shape.length,()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")"));const i={value:n},c={axis:e};return a.a.runKernel(r.Xc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(8);var c=n(4);const u=Object(c.b)({batchNorm_:function(t,e,n,c,u,l){null==l&&(l=.001);const d=Object(s.a)(t,"x","batchNorm"),p=Object(s.a)(e,"mean","batchNorm"),h=Object(s.a)(n,"variance","batchNorm");let f,m;null!=u&&(f=Object(s.a)(u,"scale","batchNorm")),null!=c&&(m=Object(s.a)(c,"offset","batchNorm")),o.b(p.rank===h.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o.b(null==m||p.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o.b(null==f||p.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b={x:function(t){let e;return e=0===t.rank||1===t.rank?Object(i.a)(t,[1,1,1,t.size]):2===t.rank?Object(i.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(d),scale:f,offset:m,mean:p,variance:h},g={varianceEpsilon:l},y=a.a.runKernel(r.ib,b,g);return Object(i.a)(y,d.shape)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({sigmoid_:function(t){const e={x:Object(s.a)(t,"x","sigmoid")};return a.a.runKernel(r.Ac,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({tile_:function(t,e){const n=Object(s.a)(t,"x","tile","string_or_numeric");o.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,"."));const i={x:n},c={reps:e};return a.a.runKernel(r.Tc,i,c)}})},function(t,e,n){var a=n(244),r=n(245),s=n(246),o=n(247),i=n(248),c=n(249),u=n(250);u.alea=a,u.xor128=r,u.xorwow=s,u.xorshift7=o,u.xor4096=i,u.tychei=c,t.exports=u},function(t,e,n){"use strict";var a,r;n.d(e,"a",(function(){return a})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(a||(a={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(r||(r={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({mean_:function(t,e=null,n=!1){const o={x:Object(s.a)(t,"x","mean")},i={axis:e,keepDims:n};return a.a.runKernel(r.Ob,o,i)}})},function(t,e,n){"use strict";var a,r,s,o,i;n.d(e,"a",(function(){return a})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(o||(o={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const c={float32:o,int32:r,bool:s,complex64:i};function u(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return c[t][e]}function l(t){return u(t,"int32")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({batchToSpaceND_:function(t,e,n){const i=Object(s.a)(t,"x","batchToSpaceND"),c=e.reduce((t,e)=>t*e);o.b(i.rank>=1+e.length,()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(e.length)),o.b(n.length===e.length,()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length)),o.b(i.shape[0]%c===0,()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(c));const u={x:i},l={blockShape:e,crops:n};return a.a.runKernel(r.t,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({gather_:function(t,e,n=0,o=0){const i={x:Object(s.a)(t,"x","gather"),indices:Object(s.a)(e,"indices","gather","int32")},c={axis:n,batchDims:o};return a.a.runKernel(r.mb,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({less_:function(t,e){let n=Object(o.a)(t,"a","less"),c=Object(o.a)(e,"b","less");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.yb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({logicalNot_:function(t){const e={x:Object(s.a)(t,"x","logicalNot","bool")};return a.a.runKernel(r.Fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(11),u=n(4);const l=Object(u.b)({minimum_:function(t,e){let n=Object(o.a)(t,"a","minimum"),u=Object(o.a)(e,"b","minimum");[n,u]=Object(s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.a)(n.shape,u.shape);const l={a:n,b:u};return a.a.runKernel(r.Qb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({notEqual_:function(t,e){let n=Object(o.a)(t,"a","notEqual"),c=Object(o.a)(e,"b","notEqual");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.Zb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({spaceToBatchND_:function(t,e,n){const i=Object(s.a)(t,"x","spaceToBatchND");o.b(i.rank>=1+e.length,()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(e.length)),o.b(n.length===e.length,()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length)),o.b(i.shape.reduce((t,a,r)=>r>0&&r<=e.length?t&&(a+n[r-1][0]+n[r-1][1])%e[r-1]===0:t,!0),()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString()));const c={x:i},u={blockShape:e,paddings:n};return a.a.runKernel(r.Hc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(16),c=n(4);const u=Object(c.b)({squaredDifference_:function(t,e){let n=Object(o.a)(t,"a","squaredDifference"),c=Object(o.a)(e,"b","squaredDifference");[n,c]=Object(s.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return a.a.runKernel(r.Mc,u,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(1),r=n(7),s=n(4),o=n(8);const i=Object(s.b)({squeeze_:function(t,e){const n=Object(a.a)(t,"x","squeeze");return Object(o.a)(n,Object(r.P)(n.shape,e).newShape)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(1),r=n(44);function s(t,e,n){const s=Object(a.c)(t,n);return Object(r.a)(t,e,s,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return o}));var a=n(76);n(121);class r{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=a.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,e=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class s{constructor(t,e,n,s){this.alpha=t,this.beta=1/e,this.dtype=n;const o=s||Math.random();this.randu=a.alea(o.toString()),this.randn=new r(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,t=a*a,e=1-.331*t*t,n=.5*t+this.d*(1-s+Math.log(s)),r=this.randu(),r<e||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class o{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=a.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const a={};function r(t){return a[t]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(58),i=n(4),c=n(8);const u=Object(i.b)({broadcastTo_:function(t,e){let n=Object(s.a)(t,"broadcastTo","x");const i=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(c.a)(n,t)}const u=n.shape,l=Array.from(e);for(let a=e.length-1;a>=0;a--)if(u[a]===e[a])l[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(i,"] cannot be broadcast to [").concat(e,"]."));if(0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(o.a)(n);const d={x:n},p={reps:l};return a.a.runKernel(r.Tc,d,p)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({min_:function(t,e=null,n=!1){const o={x:Object(s.a)(t,"x","min")},i={axis:e,keepDims:n};return a.a.runKernel(r.Pb,o,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({oneHot_:function(t,e,n=1,o=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const i={indices:Object(s.a)(t,"indices","oneHot","int32")},c={depth:e,onValue:n,offValue:o};return a.a.runKernel(r.ac,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({real_:function(t){const e={input:Object(s.a)(t,"input","real")};return a.a.runKernel(r.jc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(7),o=n(4);const i=Object(o.b)({ifft_:function(t){Object(s.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return a.a.runKernel(r.pb,e)}})},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return r})),n.d(e,"validateInput",(function(){return s})),n.d(e,"calculateShapes",(function(){return o}));var a=n(7);function r(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(t.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+t.length-a)throw new Error(s+" update.rank != ".concat(r+t.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==e.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(e.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==t[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(t[o+r],")"))}function s(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}r(n,e,t)}function o(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=n.length;let i=1;for(let a=s;a<o;++a)i*=n[a];const c=s<1?1:s;return{sliceRank:s,numUpdates:Object(a.N)(e.shape)/c,sliceSize:i,strides:[...Object(a.j)(n.slice(0,s)),1],outputSize:Object(a.N)(n)}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({floorDiv_:function(t,e){let n=Object(o.a)(t,"a","floorDiv"),i=Object(o.a)(e,"b","floorDiv");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.gb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(5),r=n(3);function s(t,e,n){const s={shape:t,value:e,dtype:n};return a.a.runKernel(r.db,{},s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(11),c=n(26),u=n(4),l=n(8);const d=Object(u.b)({avgPool_:function(t,e,n,u,d){const p=Object(s.a)(t,"x","avgPool","float32");o.b(c.h(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"));let h=p,f=!1;3===p.rank&&(f=!0,h=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.b(4===h.rank,()=>"Error in avgPool: x must be rank 4 but got rank ".concat(h.rank,".")),null!=d&&o.b(o.v(u),()=>"Error in avgPool: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(u,"."));const m={x:h},b={filterSize:e,strides:n,pad:u,dimRoundingMode:d};let g=a.a.runKernel(r.o,m,b);return g=Object(i.a)(g,p.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({cos_:function(t){const e={x:Object(s.a)(t,"x","cos")};return a.a.runKernel(r.I,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({cumsum_:function(t,e=0,n=!1,o=!1){const i={x:Object(s.a)(t,"x","cumsum")},c={axis:e,exclusive:n,reverse:o};return a.a.runKernel(r.L,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({elu_:function(t){const e={x:Object(s.a)(t,"x","elu")};return a.a.runKernel(r.V,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({floor_:function(t){const e={x:Object(s.a)(t,"x","floor")};return a.a.runKernel(r.fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({imag_:function(t){const e={input:Object(s.a)(t,"input","imag")};return a.a.runKernel(r.rb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({leakyRelu_:function(t,e=.2){const n={x:Object(s.a)(t,"x","leakyRelu")},o={alpha:e};return a.a.runKernel(r.xb,n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var a=n(1),r=n(7),s=n(12),o=n(33),i=n(35),c=n(62),u=n(59),l=n(4),d=n(8),p=n(13),h=n(18);const f=Object(l.b)({logSumExp_:function(t,e=null,n=!1){const l=Object(a.a)(t,"x","logSumExp"),f=Object(r.I)(e,l.shape),m=Object(u.a)(l,f,!0),b=Object(p.a)(l,m),g=Object(i.a)(b),y=Object(h.a)(g,f),x=Object(c.a)(y),v=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const t=Object(o.e)(v.shape,f);return Object(d.a)(v,t)}return v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(16),i=n(4);const c=Object(i.b)({logicalOr_:function(t,e){const n=Object(s.a)(t,"a","logicalOr","bool"),i=Object(s.a)(e,"b","logicalOr","bool");Object(o.a)(n.shape,i.shape);const c={a:n,b:i};return a.a.runKernel(r.Gb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(26),c=n(4),u=n(8);const l=Object(c.b)({maxPool_:function(t,e,n,c,l){const d=Object(s.a)(t,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.b(4===p.rank,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(p.rank,".")),o.b(i.h(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")),null!=l&&o.b(o.v(c),()=>"Error in maxPool: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const f={x:p},m={filterSize:e,strides:n,pad:c,dimRoundingMode:l},b=a.a.runKernel(r.Ib,f,m);return h?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({mod_:function(t,e){let n=Object(o.a)(t,"a","mod"),i=Object(o.a)(e,"b","mod");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.Sb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({prelu_:function(t,e){const n={x:Object(s.a)(t,"x","prelu"),alpha:Object(s.a)(e,"alpha","prelu")};return a.a.runKernel(r.gc,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({relu6_:function(t){const e={x:Object(s.a)(t,"x","relu6")};return a.a.runKernel(r.nc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(7),o=n(4);const i=Object(o.b)({fft_:function(t){Object(s.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return a.a.runKernel(r.cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var a=n(7),r=n(51),s=n(28),o=n(107),i=n(4),c=n(95),u=n(8),l=n(24),d=n(63),p=n(57),h=n(20),f=n(115);const m=Object(i.b)({rfft_:function(t,e){Object(a.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got ".concat(t.dtype));let n=t.shape[t.shape.length-1];const i=t.size/n;let m;if(null!=e&&e<n){const a=t.shape.map(t=>0),r=t.shape.map(t=>t);r[t.shape.length-1]=e,m=Object(l.a)(t,a,r),n=e}else if(null!=e&&e>n){const a=t.shape.map(t=>t);a[t.shape.length-1]=e-n,m=Object(s.a)([t,Object(p.a)(a)],t.shape.length-1),n=e}else m=t;const b=Object(h.a)(m),g=Object(u.a)(Object(r.a)(m,b),[i,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,v=Object(c.a)(y),w=Object(o.a)(y),k=Object(d.a)(v,[x,n-x],v.shape.length-1),O=Object(d.a)(w,[x,n-x],w.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,Object(u.a)(Object(r.a)(k[0],O[0]),N)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({unsortedSegmentSum_:function(t,e,n){const i=Object(s.a)(t,"x","unsortedSegmentSum"),c=Object(s.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(o.b)(Object(o.v)(n),()=>"numSegments must be of dtype int");const u={x:i,segmentIds:c},l={numSegments:n};return a.a.runKernel(r.Yc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return b}));var a=n(1),r=n(7),s=n(36),o=n(33),i=n(59),c=n(93),u=n(4),l=n(41),d=n(8),p=n(15),h=n(32),f=n(23),m=n(18);const b=Object(u.b)({norm_:function(t,e="euclidean",n=null,u=!1){const b=function t(e,n,a=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===a)return t(Object(d.a)(e,[-1]),n,a);if(1===e.rank||"number"===typeof a||Array.isArray(a)&&1===a.length){if(1===n)return Object(m.a)(Object(s.a)(e),a);if(n===1/0)return Object(i.a)(Object(s.a)(e),a);if(n===-1/0)return Object(c.a)(Object(s.a)(e),a);if("euclidean"===n||2===n)return Object(h.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(p.a)(2,"int32")),a));throw new Error("Error in norm: invalid ord value: ".concat(n))}if(Array.isArray(a)&&2===a.length){if(1===n)return Object(i.a)(Object(m.a)(Object(s.a)(e),a[0]),a[1]-1);if(n===1/0)return Object(i.a)(Object(m.a)(Object(s.a)(e),a[1]),a[0]);if(n===-1/0)return Object(c.a)(Object(m.a)(Object(s.a)(e),a[1]),a[0]);if("fro"===n||"euclidean"===n)return Object(h.a)(Object(m.a)(Object(f.a)(e),a));throw new Error("Error in norm: invalid ord value: ".concat(n))}throw new Error("Error in norm: invalid axis: ".concat(a))}(t=Object(a.a)(t,"x","norm"),e,n);let g=b.shape;if(u){const e=Object(r.I)(n,t.shape);g=o.e(b.shape,e)}return Object(d.a)(b,g)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return tn})),n.d(e,"b",(function(){return en}));var a=n(0),r=n(50),s=n(2);class o{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(s.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(s.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(r.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(r.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(r.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(r.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(r.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(r.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(r.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(r.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(r.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(r.d)(this.node.rawAttrs,t,e)}return e}}var i=n(91),c=n(12),u=n(173),l=n(112),d=n(9),p=n(14),h=n(143),f=n(100),m=n(13),b=n(84),g=n(66),y=n(41),x=n(87);var v=n(36),w=n(171),k=n(172),O=n(174),N=n(175),I=n(176),S=n(137),T=n(177),j=n(180),C=n(51),E=n(103),A=n(140),_=n(105),R=n(184),D=n(35),F=n(185),M=n(106),z=n(62),L=n(146),P=n(107),B=n(27),W=n(196),V=n(95),U=n(70),G=n(197),H=n(154),q=n(74),K=n(156),X=n(199),Y=n(157),Q=n(147),Z=n(32),J=n(23),$=n(125),tt=n(202),et=n(181),nt=n(114),at=n(153),rt=n(151),st=n(108),ot=n(113);function it(t,e,n=""){a.util.assert(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}class ct{constructor(t,e,n,r,s,o,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(a.scalar)(0),Object(a.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));const e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),it(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));n.tensor=e,Object(a.keep)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(a.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return it(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(a.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return Object(a.tensor)([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const n=this.readMany(e);return it(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Object(a.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,Object(a.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const s=0===n?0:e.size/n,o=[];Object(a.tidy)(()=>{e=Object(a.reshape)(e,[1,n,s]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],c=[1,t[n],s];o[n]=Object(a.reshape)(Object(a.slice)(e,i,c),this.elementShape)}return o});const i=[];for(let a=0;a<t.length;a++)i[a]=a;this.writeMany(i,o)}}class ut{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(t.dtype));it(e,t.shape,"TensorList shape mismatch: "),Object(a.keep)(t)}),this.idTensor=Object(a.scalar)(0),this.maxNumElements=r,Object(a.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ut([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));return it(t,this.elementShape,"TensorList shape mismatch: "),Object(a.tidy)(()=>{const e=this.tensors.map(e=>Object(a.reshape)(e,t));return Object(a.stack)(e,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return it(n.shape,t,"TensorList shape mismatch: "),Object(a.reshape)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(it(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(a.keep)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));return it(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));it(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(a.keep)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));return it(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(a.tensor)([],[0].concat(this.elementShape)):Object(a.tidy)(()=>{const e=t.map(t=>Object(a.reshape)(this.tensors[t],n));return Object(a.stack)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));return it(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(a.tensor)([],[0].concat(this.elementShape)):Object(a.tidy)(()=>{const t=this.tensors.map(t=>Object(a.reshape)(t,e));return Object(a.concat)(t,0)})}}const lt=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const a=Object(s.d)("thenBranch",t,e,n),r=Object(s.d)("elseBranch",t,e,n),o=Object(s.d)("cond",t,e,n),i=Object(s.d)("args",t,e,n);return(await o.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Object(s.d)("body",t,e,n),r=Object(s.d)("cond",t,e,n),o=Object(s.d)("args",t,e,n),i=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),c=o.map(t=>t.id);let u=await i[0].data();i.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||t.dispose()});let l=o;for(;u[0];){const t=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":{const a=Object(s.d)("pred",t,e,n);return[Object(s.a)(a)]}case"Switch":{const a=Object(s.d)("pred",t,e,n);let r=Object(s.d)("data",t,e,n);return r.kept||(r=Object(s.a)(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=t.inputNames.find(t=>void 0!==Object(s.e)(t,e,n));if(a){const t=Object(s.e)(a,e,n);return[Object(s.a)(t)]}return}case"Enter":{const a=Object(s.d)("frameName",t,e,n),r=Object(s.d)("tensor",t,e,n);return n.enterFrame(a),[Object(s.a)(r)]}case"Exit":{const a=Object(s.d)("tensor",t,e,n);return n.exitFrame(),[Object(s.a)(a)]}case"NextIteration":{const a=Object(s.d)("tensor",t,e,n);return n.nextIteration(),[Object(s.a)(a)]}case"TensorArrayV3":{const r=Object(s.d)("size",t,e,n),o=Object(s.d)("dtype",t,e,n),i=Object(s.d)("elementShape",t,e,n),c=Object(s.d)("dynamicSize",t,e,n),u=Object(s.d)("clearAfterRead",t,e,n),l=Object(s.d)("identicalElementShapes",t,e,n),d=Object(s.d)("name",t,e,n),p=new ct(d,o,r,i,l,c,u);return n.addTensorArray(p),[p.idTensor,Object(a.scalar)(1)]}case"TensorArrayWriteV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=Object(s.d)("index",t,e,n),o=Object(s.d)("tensor",t,e,n),i=n.getTensorArray(a.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=Object(s.d)("index",t,e,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=Object(s.d)("indices",t,e,n),o=Object(s.d)("dtype",t,e,n);return[n.getTensorArray(a.id).gather(r,o)]}case"TensorArrayScatterV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=Object(s.d)("indices",t,e,n),o=Object(s.d)("tensor",t,e,n),i=n.getTensorArray(a.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=n.getTensorArray(a.id),o=Object(s.d)("dtype",t,e,n);return[r.concat(o)]}case"TensorArraySplitV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=Object(s.d)("tensor",t,e,n),o=Object(s.d)("lengths",t,e,n),i=n.getTensorArray(a.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(s.d)("tensorArrayId",t,e,n),o=n.getTensorArray(r.id);return[Object(a.scalar)(o.size(),"int32")]}case"TensorArrayCloseV3":{const a=Object(s.d)("tensorArrayId",t,e,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Object(s.d)("tensorListId",t,e,n),r=Object(s.d)("index",t,e,n),o=Object(s.d)("tensor",t,e,n),i=n.getTensorList(a.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const a=Object(s.d)("tensorListId",t,e,n),r=Object(s.d)("index",t,e,n),o=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(a.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(s.d)("indices",t,e,n),o=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error("Max index must be < array size (".concat(s,"  vs. ").concat(r,")"));const o=new ut([],n,t.dtype,r),i=Object(a.unstack)(t,0);return e.forEach((t,e)=>{o.setItem(t,i[e])}),o}(Object(s.d)("tensor",t,e,n),r,Object(s.d)("elementShape",t,e,n),Object(s.d)("numElements",t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Object(s.d)("elementShape",t,e,n),r=Object(s.d)("elementDType",t,e,n);let o;o="TensorListReserve"===t.op?"numElements":"maxNumElements";const i=function(t,e,n){return new ut([],t,e,n)}(a,r,Object(s.d)(o,t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=Object(s.d)("tensorListId",t,e,n),r=Object(s.d)("indices",t,e,n),o=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(a.id).gather(r,i,o)]}case"TensorListStack":{const a=Object(s.d)("tensorListId",t,e,n),r=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n),i=Object(s.d)("numElements",t,e,n);return[n.getTensorList(a.id).stack(r,o,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==n)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(n));it(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=Object(a.unstack)(t);return new ut(s,e,r)}(Object(s.d)("tensor",t,e,n),Object(s.d)("elementShape",t,e,n),Object(s.d)("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const a=Object(s.d)("tensorListId",t,e,n),r=n.getTensorList(a.id),o=Object(s.d)("dtype",t,e,n),i=Object(s.d)("elementShape",t,e,n);return[r.concat(o,i)]}case"TensorListPushBack":{const a=Object(s.d)("tensorListId",t,e,n),r=Object(s.d)("tensor",t,e,n),o=n.getTensorList(a.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const a=Object(s.d)("tensorListId",t,e,n),r=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(a.id).popBack(r,o)]}case"TensorListSplit":{const r=Object(s.d)("tensor",t,e,n),o=Object(s.d)("elementShape",t,e,n),i=function(t,e,n){let r=0;const s=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(r,", and tensor's shape is: ").concat(t.shape));const o=0===r?0:t.size/r,i=Object(a.tidy)(()=>{const i=[];t=Object(a.reshape)(t,[1,r,o]);for(let r=0;r<e.length;++r){const c=[0,0===r?0:s[r-1],0],u=[1,e[r],o];i[r]=Object(a.reshape)(Object(a.slice)(t,c,u),n)}return t.dispose(),i}),c=new ut([],n,t.dtype,e.length);for(let a=0;a<i.length;a++)c.setItem(a,i[a]);return c}(r,Object(s.d)("lengths",t,e,n),o);return n.addTensorList(i),[i.idTensor]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};var dt=n(138),pt=n(56),ht=n(17),ft=n(139),mt=n(67),bt=n(182),gt=n(102),yt=n(111),xt=n(193),vt=n(178),wt=n(192),kt=n(142);function Ot(t,e,n){const[a,r]=Object(s.d)("fusedOps",t,e,n),o="biasadd"===a,i="prelu"===r,c="fusedbatchnorm"===a,u=Object(s.d)("numArgs",t,e,n);if(o){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Object(s.d)("strides",t,e,n),d=Object(s.c)(t,e,n),p=Object(s.d)("dataFormat",t,e,n).toUpperCase(),h=Object(s.d)("dilations",t,e,n),[f,m]=Object(s.d)("args",t,e,n);return{stride:l,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Object(s.d)("leakyreluAlpha",t,e,n)}}var Nt=n(101),It=n(189),St=n(194),Tt=n(94),jt=n(69),Ct=n(195),Et=n(152),At=n(126),_t=n(203),Rt=n(57),Dt=n(20);var Ft=n(11),Mt=n(162),zt=n(198);function Lt(t,e,n){return{boxes:Object(s.d)("boxes",t,e,n),scores:Object(s.d)("scores",t,e,n),maxOutputSize:Object(s.d)("maxOutputSize",t,e,n),iouThreshold:Object(s.d)("iouThreshold",t,e,n),scoreThreshold:Object(s.d)("scoreThreshold",t,e,n),softNmsSigma:Object(s.d)("softNmsSigma",t,e,n)}}var Pt=n(160),Bt=n(161);var Wt=n(64),Vt=n(15);class Ut{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(a.scalar)(0),this.tensorMap=new Map,Object(a.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(a.tidy)(()=>{const t=Object(a.unstack)(e),r=n.length,s=t.length;a.util.assert(r===s,()=>"The number of elements doesn't match, keys has "+"".concat(r," elements, the values has ").concat(s," ")+"elements.");for(let e=0;e<r;e++){const r=n[e],s=t[e];Object(a.keep)(s),this.tensorMap.set(r,s)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(a.tidy)(()=>{const t=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,e);t.push(s)}return Object(a.stack)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}var Gt=n(68),Ht=n(85),qt=n(39),Kt=n(47),Xt=n(82),Yt=n(48),Qt=n(52),Zt=n(83),Jt=n(110),$t=n(31);var te=n(25),ee=n(45);var ne=n(73),ae=n(145),re=n(200),se=n(191),oe=n(209);var ie=n(59),ce=n(78),ue=n(93),le=n(18),de=n(133),pe=n(134),he=n(135),fe=n(136),me=n(104),be=n(179),ge=n(183);var ye=n(28),xe=n(81),ve=n(42),we=n(24),ke=n(201),Oe=n(88),Ne=n(8),Ie=n(53),Se=n(72),Te=n(75),je=n(63),Ce=n(206),Ee=n(207);var Ae=n(115),_e=n(96),Re=n(116),De=n(158);var Fe=n(54),Me=n(149),ze=n(49),Le=n(86),Pe=n(80),Be=n(141),We=n(92);function Ve(t,e,n,r){const it=((t,e,n)=>{switch(t.category){case"arithmetic":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[c.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"AddN":return[u.a(Object(s.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[l.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Mul":return[d.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"RealDiv":case"Div":return[p.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"DivNoNan":return[h.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"FloorDiv":return[f.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Sub":return[m.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Minimum":return[b.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Maximum":return[g.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Pow":return[y.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"SquaredDifference":return[x.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"basic_math":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[v.a(Object(s.d)("x",t,e,n))];case"Acos":return[w.a(Object(s.d)("x",t,e,n))];case"Acosh":return[k.a(Object(s.d)("x",t,e,n))];case"Asin":return[O.a(Object(s.d)("x",t,e,n))];case"Asinh":return[N.a(Object(s.d)("x",t,e,n))];case"Atan":return[I.a(Object(s.d)("x",t,e,n))];case"Atan2":return[S.a(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n))];case"Atanh":return[T.a(Object(s.d)("x",t,e,n))];case"Ceil":return[j.a(Object(s.d)("x",t,e,n))];case"Complex":return[C.a(Object(s.d)("real",t,e,n),Object(s.d)("imag",t,e,n))];case"Cos":return[E.a(Object(s.d)("x",t,e,n))];case"Cosh":return[A.a(Object(s.d)("x",t,e,n))];case"Elu":return[_.a(Object(s.d)("x",t,e,n))];case"Erf":return[R.a(Object(s.d)("x",t,e,n))];case"Exp":return[D.a(Object(s.d)("x",t,e,n))];case"Expm1":return[F.a(Object(s.d)("x",t,e,n))];case"Floor":return[M.a(Object(s.d)("x",t,e,n))];case"Log":return[z.a(Object(s.d)("x",t,e,n))];case"Log1p":return[L.a(Object(s.d)("x",t,e,n))];case"Imag":return[P.a(Object(s.d)("x",t,e,n))];case"Neg":return[B.a(Object(s.d)("x",t,e,n))];case"Reciprocal":return[W.a(Object(s.d)("x",t,e,n))];case"Real":return[V.a(Object(s.d)("x",t,e,n))];case"Relu":return[U.a(Object(s.d)("x",t,e,n))];case"Round":return[G.a(Object(s.d)("x",t,e,n))];case"Selu":return[H.a(Object(s.d)("x",t,e,n))];case"Sigmoid":return[q.a(Object(s.d)("x",t,e,n))];case"Sin":return[K.a(Object(s.d)("x",t,e,n))];case"Sign":return[X.a(Object(s.d)("x",t,e,n))];case"Sinh":return[Y.a(Object(s.d)("x",t,e,n))];case"Softplus":return[Q.a(Object(s.d)("x",t,e,n))];case"Sqrt":return[Z.a(Object(s.d)("x",t,e,n))];case"Square":return[J.a(Object(s.d)("x",t,e,n))];case"Tanh":return[$.a(Object(s.d)("x",t,e,n))];case"Tan":return[tt.a(Object(s.d)("x",t,e,n))];case"ClipByValue":return[et.a(Object(s.d)("x",t,e,n),Object(s.d)("clipValueMin",t,e,n),Object(s.d)("clipValueMax",t,e,n))];case"Relu6":return[nt.a(Object(s.d)("x",t,e,n))];case"Rsqrt":return[at.a(Object(s.e)(t.inputNames[0],e,n))];case"Prod":return[rt.a(Object(s.d)("x",t,e,n),Object(s.d)("axes",t,e,n))];case"LeakyRelu":return[st.a(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];case"Prelu":return[ot.a(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"control":return lt(t,e,n);case"convolution":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const a=Object(s.d)("stride",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("dataFormat",t,e,n).toUpperCase(),i=Object(s.d)("dilation",t,e,n);return[dt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),a,r,o,i)]}case"Conv2D":{const a=Object(s.d)("strides",t,e,n),r=Object(s.c)(t,e,n),o=Object(s.d)("dataFormat",t,e,n).toUpperCase(),i=Object(s.d)("dilations",t,e,n);return[pt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[a[1],a[2]],r,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:o,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=Ot(t,e,n);return[ht.sb.conv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:o,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=Ot(t,e,n);return[ht.sb.depthwiseConv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=Object(s.d)("outputShape",t,e,n),r=Object(s.d)("strides",t,e,n),o=Object(s.c)(t,e,n);return[ft.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),a,[r[1],r[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=Object(s.d)("strides",t,e,n),r=Object(s.c)(t,e,n),o=Object(s.d)("dilations",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[mt.a(Object(s.d)("input",t,e,n),Object(s.d)("filter",t,e,n),[a[1],a[2]],r,i,[o[1],o[2]])]}case"Conv3D":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("dataFormat",t,e,n).toUpperCase(),i=Object(s.d)("dilations",t,e,n);return[bt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[a[1],a[2],a[3]],r,o,[i[1],i[2],i[3]])]}case"AvgPool":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("kernelSize",t,e,n);return[gt.a(Object(s.d)("x",t,e,n),[o[1],o[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("kernelSize",t,e,n);return[yt.a(Object(s.d)("x",t,e,n),[o[1],o[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("kernelSize",t,e,n),i=Object(s.d)("includeBatchInIndex",t,e,n),{result:c,indexes:u}=xt.a(Object(s.d)("x",t,e,n),[o[1],o[2]],[a[1],a[2]],r,i);return[c,u]}case"AvgPool3D":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("kernelSize",t,e,n);return[vt.a(Object(s.d)("x",t,e,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("kernelSize",t,e,n);return[wt.a(Object(s.d)("x",t,e,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=Object(s.d)("strides",t,e,n),r=Object(s.d)("pad",t,e,n),o=Object(s.d)("dilations",t,e,n),i=a[1],c=a[2],u=o[1],l=o[2];return[kt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[i,c],r,[u,l],"NHWC")]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"creation":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Fill":{const a=Object(s.d)("shape",t,e,n),r=Object(s.d)("dtype",t,e,n),o=Object(s.d)("value",t,e,n);return[Nt.a(a,o,r)]}case"LinSpace":{const a=Object(s.d)("start",t,e,n),r=Object(s.d)("stop",t,e,n),o=Object(s.d)("num",t,e,n);return[It.a(a,r,o)]}case"Multinomial":{const a=Object(s.d)("logits",t,e,n),r=Object(s.d)("numSamples",t,e,n),o=Object(s.d)("seed",t,e,n);return[St.a(a,r,o)]}case"OneHot":{const a=Object(s.d)("indices",t,e,n),r=Object(s.d)("depth",t,e,n),o=Object(s.d)("onValue",t,e,n),i=Object(s.d)("offValue",t,e,n);return[Tt.a(a,r,o,i)]}case"Ones":return[jt.a(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"OnesLike":return[Ct.a(Object(s.d)("x",t,e,n))];case"RandomUniform":return[Et.a(Object(s.d)("shape",t,e,n),Object(s.d)("minval",t,e,n),Object(s.d)("maxval",t,e,n),Object(s.d)("dtype",t,e,n))];case"Range":{const a=Object(s.d)("start",t,e,n),r=Object(s.d)("stop",t,e,n),o=Object(s.d)("step",t,e,n);return[At.a(a,r,o,Object(s.d)("dtype",t,e,n))]}case"TruncatedNormal":{const a=Object(s.d)("shape",t,e,n),r=Object(s.d)("mean",t,e,n),o=Object(s.d)("stdDev",t,e,n),i=Object(s.d)("seed",t,e,n);return[_t.a(a,r,o,Object(s.d)("dtype",t,e,n),i)]}case"Zeros":return[Rt.a(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"ZerosLike":return[Dt.a(Object(s.d)("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}=Lt(t,e,n),u=await ht.Bb.nonMaxSuppressionWithScoreAsync(a,r,s,o,i,c);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Lt(t,e,n),u=Object(s.d)("padToMaxOutputSize",t,e,n),l=await ht.Bb.nonMaxSuppressionPaddedAsync(a,r,o,i,c,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=Lt(t,e,n);return[await ht.Bb.nonMaxSuppressionAsync(a,r,s,o,i)]}case"Where":{const a=Ft.a(Object(s.d)("condition",t,e,n),"bool"),r=[await Mt.a(a)];return a.dispose(),r}case"ListDiff":return zt.a(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n));default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n);case"evaluation":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const a=Object(s.d)("x",t,e,n),r=Object(s.d)("k",t,e,n),o=Object(s.d)("sorted",t,e,n),i=Pt.a(a,r,o);return[i.values,i.indices]}case"Unique":{const a=Object(s.d)("x",t,e,n),r=Bt.a(a);return[r.values,r.indices]}case"UniqueV2":{const a=Object(s.d)("x",t,e,n),r=Object(s.d)("axis",t,e,n),o=Bt.a(a,r);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"image":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const a=Object(s.d)("images",t,e,n),r=Object(s.d)("size",t,e,n),o=Object(s.d)("alignCorners",t,e,n),i=Object(s.d)("halfPixelCenters",t,e,n);return[ht.Bb.resizeBilinear(a,[r[0],r[1]],o,i)]}case"ResizeNearestNeighbor":{const a=Object(s.d)("images",t,e,n),r=Object(s.d)("size",t,e,n),o=Object(s.d)("alignCorners",t,e,n),i=Object(s.d)("halfPixelCenters",t,e,n);return[ht.Bb.resizeNearestNeighbor(a,[r[0],r[1]],o,i)]}case"CropAndResize":{const a=Object(s.d)("image",t,e,n),r=Object(s.d)("boxes",t,e,n),o=Object(s.d)("boxInd",t,e,n),i=Object(s.d)("cropSize",t,e,n),c=Object(s.d)("method",t,e,n),u=Object(s.d)("extrapolationValue",t,e,n);return[ht.Bb.cropAndResize(a,r,o,i,c,u)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"graph":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const a=Object(s.d)("default",t,e,n);return[Object(s.e)(t.name,e,n)||a];case"Placeholder":return[Object(s.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const a=Object(s.d)("x",t,e,n);return[Object(s.a)(a)]}case"IdentityN":return Object(s.d)("x",t,e,n).map(t=>Object(s.a)(t));case"Snapshot":const r=Object(s.d)("x",t,e,n);return[Object(s.a)(r)];case"Shape":return[Wt.a(Object(s.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(s.d)("x",t,e,n).map(t=>Wt.a(t.shape));case"Size":return[Vt.a(Object(s.d)("x",t,e,n).size,"int32")];case"Rank":return[Vt.a(Object(s.d)("x",t,e,n).rank,"int32")];case"NoOp":return[Vt.a(1)];case"Print":const o=Object(s.d)("x",t,e,n),i=Object(s.d)("data",t,e,n),c=Object(s.d)("message",t,e,n),u=Object(s.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,u));return[o];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"logical":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Equal":return[Gt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"NotEqual":return[Ht.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Greater":return[qt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"GreaterEqual":return[Kt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Less":return[Xt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LessEqual":return[Yt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalAnd":return[Qt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalNot":return[Zt.a(Object(s.d)("a",t,e,n))];case"LogicalOr":return[Jt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Select":case"SelectV2":return[$t.a(Object(s.d)("condition",t,e,n),Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"matrices":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[te.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n),Object(s.d)("transposeA",t,e,n),Object(s.d)("transposeB",t,e,n))];case"Transpose":return[ee.a(Object(s.d)("x",t,e,n),Object(s.d)("perm",t,e,n))];case"_FusedMatMul":const[a,r]=Object(s.d)("fusedOps",t,e,n),o="biasadd"===a,i="prelu"===r,c=Object(s.d)("numArgs",t,e,n),u=Object(s.d)("leakyreluAlpha",t,e,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=Object(s.d)("args",t,e,n);return[ht.sb.matMul({a:Object(s.d)("a",t,e,n),b:Object(s.d)("b",t,e,n),transposeA:Object(s.d)("transposeA",t,e,n),transposeB:Object(s.d)("transposeB",t,e,n),bias:l,activation:r,preluActivationWeights:d,leakyreluAlpha:u})];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"normalization":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ne.a(Object(s.d)("x",t,e,n),Object(s.d)("mean",t,e,n),Object(s.d)("variance",t,e,n),Object(s.d)("offset",t,e,n),Object(s.d)("scale",t,e,n),Object(s.d)("epsilon",t,e,n))];case"LRN":return[ae.a(Object(s.d)("x",t,e,n),Object(s.d)("radius",t,e,n),Object(s.d)("bias",t,e,n),Object(s.d)("alpha",t,e,n),Object(s.d)("beta",t,e,n))];case"Softmax":return[re.a(Object(s.d)("x",t,e,n))];case"LogSoftmax":return[se.a(Object(s.d)("x",t,e,n))];case"SparseToDense":return[oe.a(Object(s.d)("sparseIndices",t,e,n),Object(s.d)("outputShape",t,e,n),Object(s.d)("sparseValues",t,e,n),Object(s.d)("defaultValue",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"reduction":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Max":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[ie.a(Object(s.d)("x",t,e,n),a,r)]}case"Mean":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[ce.a(Object(s.d)("x",t,e,n),a,r)]}case"Min":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[ue.a(Object(s.d)("x",t,e,n),a,r)]}case"Sum":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[le.a(Object(s.d)("x",t,e,n),a,r)]}case"All":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[de.a(Object(s.d)("x",t,e,n),a,r)]}case"Any":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[pe.a(Object(s.d)("x",t,e,n),a,r)]}case"ArgMax":{const a=Object(s.d)("axis",t,e,n);return[he.a(Object(s.d)("x",t,e,n),a)]}case"ArgMin":{const a=Object(s.d)("axis",t,e,n);return[fe.a(Object(s.d)("x",t,e,n),a)]}case"Prod":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("keepDims",t,e,n);return[rt.a(Object(s.d)("x",t,e,n),a,r)]}case"Cumsum":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("exclusive",t,e,n),o=Object(s.d)("reverse",t,e,n);return[me.a(Object(s.d)("x",t,e,n),a,r,o)]}case"Bincount":const a=Object(s.d)("x",t,e,n),r=Object(s.d)("weights",t,e,n),o=Object(s.d)("size",t,e,n);return[be.a(a,r,o)];case"DenseBincount":{const a=Object(s.d)("x",t,e,n),r=Object(s.d)("weights",t,e,n),o=Object(s.d)("size",t,e,n),i=Object(s.d)("binaryOutput",t,e,n);return[ge.a(a,r,o,i)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"slice_join":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const a=Object(s.d)("n",t,e,n),r=Object(s.d)("axis",t,e,n);let o=Object(s.d)("tensors",t,e,n);return o=o.slice(0,a),[ye.a(o,r)]}case"Gather":{const a=Object(s.d)("x",t,e,n),r=Object(s.d)("indices",t,e,n);return[xe.a(a,Ft.a(r,"int32"),0)]}case"GatherV2":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("batchDims",t,e,n),o=Object(s.d)("x",t,e,n),i=Object(s.d)("indices",t,e,n);return[xe.a(o,Ft.a(i,"int32"),a,r)]}case"Reverse":{const a=Object(s.d)("dims",t,e,n),r=[];for(let t=0;t<a.length;t++)a[t]&&r.push(t);const o=Object(s.d)("x",t,e,n);return[ve.a(o,r)]}case"ReverseV2":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("x",t,e,n);return[ve.a(r,a)]}case"Slice":{const a=Object(s.d)("begin",t,e,n),r=Object(s.d)("size",t,e,n);return[we.a(Object(s.d)("x",t,e,n),a,r)]}case"StridedSlice":{const a=Object(s.d)("begin",t,e,n),r=Object(s.d)("end",t,e,n),o=Object(s.d)("strides",t,e,n),i=Object(s.d)("beginMask",t,e,n),c=Object(s.d)("endMask",t,e,n),u=Object(s.d)("ellipsisMask",t,e,n),l=Object(s.d)("newAxisMask",t,e,n),d=Object(s.d)("shrinkAxisMask",t,e,n),p=Object(s.d)("x",t,e,n);return[ke.a(p,a,r,o,i,c,u,l,d)]}case"Pack":return Object(a.tidy)(()=>{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("tensors",t,e,n),i=o[0].shape,c=Oe.a(o[0]).shape,u=o.map(t=>{const e=a.util.arraysEqual(t.shape,i);if(!e&&!a.util.arraysEqual(Oe.a(t).shape,c))throw new Error("the input tensors shape does not match");return e?t:Ne.a(t,i)});return[Ie.a(u,r)]});case"Unpack":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("tensor",t,e,n);return Se.a(r,a)}case"Tile":{const a=Object(s.d)("reps",t,e,n);return[Te.a(Object(s.d)("x",t,e,n),a)]}case"Split":case"SplitV":{const a=Object(s.d)("axis",t,e,n),r=Object(s.d)("numOrSizeSplits",t,e,n),o=Object(s.d)("x",t,e,n);return je.a(o,r,a)}case"ScatterNd":{const a=Object(s.d)("indices",t,e,n),r=Object(s.d)("values",t,e,n),o=Object(s.d)("shape",t,e,n);return[Ce.a(a,r,o)]}case"GatherNd":{const a=Object(s.d)("x",t,e,n),r=Object(s.d)("indices",t,e,n);return[Ee.a(a,r)]}case"SparseToDense":{const a=Object(s.d)("sparseIndices",t,e,n),r=Object(s.d)("outputShape",t,e,n),o=Object(s.d)("sparseValues",t,e,n),i=Object(s.d)("defaultValue",t,e,n);return[oe.a(a,o,r,o.dtype===i.dtype?i:Ft.a(i,o.dtype))]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"spectral":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"FFT":return[Ae.a(Object(s.d)("x",t,e,n))];case"IFFT":return[_e.a(Object(s.d)("x",t,e,n))];case"RFFT":return[Re.a(Object(s.d)("x",t,e,n))];case"IRFFT":return[De.a(Object(s.d)("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"transformation":return a.tidy(()=>((t,e,n)=>{switch(t.op){case"Cast":return[Ft.a(Object(s.d)("x",t,e,n),Object(s.d)("dtype",t,e,n))];case"ExpandDims":{const a=Object(s.d)("axis",t,e,n);return[Fe.a(Object(s.d)("x",t,e,n),a)]}case"Squeeze":{const a=Object(s.d)("axis",t,e,n);return[Oe.a(Object(s.d)("x",t,e,n),a)]}case"Reshape":return[Ne.a(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];case"MirrorPad":return[Me.a(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("mode",t,e,n))];case"PadV2":case"Pad":return[ze.a(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const a=Object(s.d)("blockShape",t,e,n),r=Object(s.d)("paddings",t,e,n);return[Le.a(Object(s.d)("x",t,e,n),a,r)]}case"BatchToSpaceND":{const a=Object(s.d)("blockShape",t,e,n),r=Object(s.d)("crops",t,e,n);return[Pe.a(Object(s.d)("x",t,e,n),a,r)]}case"DepthToSpace":{const a=Object(s.d)("blockSize",t,e,n),r=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[Be.a(Object(s.d)("x",t,e,n),a,r)]}case"BroadcastTo":return[We.a(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"hash_table":return(async(t,e,n,a)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=Object(s.d)("keyDType",t,e,n),o=Object(s.d)("valueDType",t,e,n),i=new Ut(r,o);return a.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=Object(s.d)("tableHandle",t,e,n,a),o=Object(s.d)("keys",t,e,n),i=Object(s.d)("values",t,e,n),c=a.getHashTableById(r.id);return[await c.import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Object(s.d)("tableHandle",t,e,n,a),o=Object(s.d)("keys",t,e,n),i=Object(s.d)("defaultValue",t,e,n),c=a.getHashTableById(r.id);return[await c.find(o,i)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n,r);case"custom":const it=Object(i.a)(t.op);if(it&&it.customExecutor)return it.customExecutor(new o(t,e,n));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(t,e,n);return a.util.isPromise(it)?it.then(t=>[].concat(t)):[].concat(it)}class Ue{constructor(t={},e={},n={},a={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Ge(t,e,n,a){const r=new Set,o=[];let i=null,c=null;const u=new Set,l=Object.keys(t).map(t=>Object(s.g)(t)[0]);let d=[];null!=a&&(d=a.map(t=>Object(s.g)(t.name)[0]));const p=[...e];for(;p.length>0;){const t=p.pop();(Xe(t)||Ye(t)||Qe(t))&&null==i&&(i=t,c=i.children.map(t=>t.name).filter(t=>r.has(t))),r.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===d.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),p.push(t))}):o.push(t.name)))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:c}}const He=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],qe=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Ke=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Xe(t){return He.indexOf(t.op)>=0}function Ye(t){return qe.indexOf(t.op)>=0}function Qe(t){return Ke.indexOf(t.op)>=0}class Ze{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new Ze(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),a=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(t,e){const n=Ge(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:o}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(o,"]"));if(a.length>0){const n=e.map(t=>t.name),r=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}return function(t,e,n){const{usedNodes:a,inputs:r}=n,o=[],i=Object.keys(r).map(t=>Object(s.g)(t)[0]).map(e=>t.nodes[e]),c=t.initNodes;i.forEach(t=>{a.has(t.name)&&o.push(t)}),t.weights.forEach(t=>{a.has(t.name)&&o.push(t)}),null!=c&&c.forEach(t=>{a.has(t.name)&&o.push(t)});const u=new Set,l=[];for(;o.length>0;){const t=o.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!u.has(t.name)&&a.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&o.push(t)})}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),o=e.map(t=>Object(s.g)(t)[0]);let i=o.map(t=>this.graph.nodes[t]);0===i.length&&(i=this._outputs);const c=this.getCompilationKey(r,i);let u=this.compiledMap.get(c);null==u&&(u=this.compile(t,i),this.compiledMap.set(c,u));const l={},d={};return Object(a.tidy)(()=>{const n=new Ue(this.weightMap,l,d,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,a]=Object(s.g)(e),o=[];o[a]=t[e],r[n]=o});const i=this.getFrozenTensorIds(r),c={};for(let t=0;t<u.length;t++){const e=u[t];if(!r[e.name]){const t=Ve(e,r,n,this._resourceManager);if(a.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,i,o,c)}}return null==this.parent&&n.dispose(i),e.map(t=>Object(s.e)(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,a,r,o,i){"control"!==e.category&&-1===o.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=Object(s.f)(t.name,n,a);null!=e&&e.forEach(t=>{if(t&&!r.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,a={},r={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const o=new Ue(this.weightMap,a,r,this.functionExecutorMap),i=await this.executeWithControlFlow(t,o,e,n),c=e.map(t=>Object(s.e)(t,i,o)),u=c.map(t=>t.id),l=Object.keys(t).map(e=>t[e].id),d=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(t=>{i[t].forEach(t=>{!t||t.isDisposed||d.has(t.id)||t.dispose()})}),null==this.parent&&o.dispose(d),c}async executeFunctionAsync(t,e,n){const a=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(a,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,a){const r=Object.keys(t),o=r.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),i=n.map(t=>Object(s.g)(t)[0]);let c=i.map(t=>this.graph.nodes[t]);0===c.length&&(c=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:d,syncInputs:p}=Ge(t,c,this.weightMap,this._initNodes),h=[...o,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,a]=Object(s.g)(e),r=[];r[a]=t[e],f[n]=r});const m={},b=this.getFrozenTensorIds(f),g={};for(;h.length>0;){const t=this.processStack(o,h,e,f,g,b,i,m,u);await Promise.all(t)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=c.filter(t=>!Xe(t)&&!Object(s.e)(t.name,f,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=d&&(t="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(p,"]")),new Error("Cannot compute the outputs [".concat(y,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(t))}return f}processStack(t,e,n,r,o,i,c,u,l){const d=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let p="";if("Enter"===t.node.op&&Object(s.d)("isConstant",t.node,r,n)&&([p]=Object(s.b)(t.node.name,n)),null==r[t.node.name]){const h=Ve(t.node,r,n,this._resourceManager);p||([p]=Object(s.b)(t.node.name,n));const f=n.currentContext;a.util.isPromise(h)?d.push(h.then(a=>(r[p]=a,n.currentContext=f,this.checkTensorForDisposal(p,t.node,r,n,i,c,u),this.processChildNodes(t.node,e,n,r,o,l),a))):(r[p]=h,this.checkTensorForDisposal(p,t.node,r,n,i,c,u),this.processChildNodes(t.node,e,n,r,o,l))}else this.processChildNodes(t.node,e,n,r,o,l)}return d}processChildNodes(t,e,n,a,r,o){t.children.forEach(t=>{const[i]=Object(s.b)(t.name,n);!r[i]&&o.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(s.e)(t,a,n))&&(r[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(s.e)(t,a,n))&&(r[i]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=Object(s.g)(e),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const t=o.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);a.util.assert(e,()=>"The shape of dict['".concat(o.name,"'] provided in ")+"model.execute(dict) must be [".concat(t,"], but was ")+"[".concat(n.shape,"]"))}o.attrParams.dtype&&o.attrParams.dtype.value&&a.util.assert(n.dtype===o.attrParams.dtype.value,()=>"The dtype of dict['".concat(o.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(o.attrParams.dtype.value,", but was ").concat(n.dtype))})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(s.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(e,"] that are not part of graph"))}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(s.g)(t);if(!this.graph.nodes[e])throw new Error("The output '".concat(t,"' is not found in the graph"))})}}class Je{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class $e{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new Je}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=a.io.browserHTTPRequest(t,this.loadOptions);else{const e=a.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(a.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error("Found more than one (".concat(e.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version="".concat(e.versions.producer,".").concat(e.versions.minConsumer);const s=a.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ze(r.a.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=r.a.Instance.transformGraph(t.modelInitializer);this.initializer=new Ze(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=a.io.getSaveHandlers(t);if(0===e.length)throw new Error("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Error("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof a.Tensor)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+"the graph model has ".concat(this.inputNodes.length," placeholders, ")+"while there are ".concat(t.length," input tensors."));return this.inputNodes.reduce((e,n,a)=>(e[n]=t[a],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function tn(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t="".concat(t).concat("model.json").concat("?tfjs-format=file"));const n=new $e(t,e);return await n.load(),n}const en="2.8.6"},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(7),o=n(4),i=n(8);const c=Object(o.b)({conv2DBackpropInput_:function(t,e,n,o,c,u="NHWC",l){s.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let d=t,p=e,h=!1;3===e.rank&&(h=!0,p=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),s.b(4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(d.length,".")),s.b(4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank)),s.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank));const f="NHWC"===u?d[3]:d[1],m="NHWC"===u?p.shape[3]:p.shape[1];s.b(f===n.shape[2],()=>"Error in conv2dDerInput: depth of input (".concat(f,") must ")+"match input depth for filter ".concat(n.shape[2],".")),s.b(m===n.shape[3],()=>"Error in conv2dDerInput: depth of output (".concat(m,") must ")+"match output depth for filter ".concat(n.shape[3],".")),null!=l&&s.b(s.v(c),()=>"Error in conv2dDerInput: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const b={dy:p,filter:n},g={strides:o,pad:c,dataFormat:u,dimRoundingMode:l,inputShape:d},y=a.a.runKernel(r.E,b,g);return h?Object(i.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return i})),n.d(e,"expectArraysClose",(function(){return c})),n.d(e,"testEpsilon",(function(){return u})),n.d(e,"expectPromiseToFail",(function(){return d})),n.d(e,"expectArraysEqual",(function(){return p})),n.d(e,"expectNumbersClose",(function(){return h})),n.d(e,"expectValuesInRange",(function(){return m})),n.d(e,"expectArrayBuffersEqual",(function(){return b})),n.d(e,"encodeStrings",(function(){return g}));var a=n(5),r=n(1),s=n(7),o=n(10);const i=.1;function c(t,e,n){return null==n&&(n=u()),l(t,e,(t,e)=>f(t,e,n))}function u(){return 32===a.a.backend.floatPrecision()?.001:i}function l(t,e,n){let a=!0;if((Object(s.A)(t)||Object(s.A)(e))&&(a=!1),Object(s.A)(t)&&Object(s.A)(e)&&(a=!0),a){const n=t.constructor.name,a=e.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(r.c)(t),a=Object(r.c)(e);if(!Object(s.a)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const o=Object(s.A)(t)?t:Object(s.m)(t),i=Object(s.A)(e)?e:Object(s.m)(e);if(o.length!==i.length)throw new Error("Arrays have different lengths actual: ".concat(o.length," vs ")+"expected: ".concat(i.length,".\n")+"Actual:   ".concat(o,".\n")+"Expected: ".concat(i,"."));for(let r=0;r<i.length;++r){const t=o[r],e=i[r];if(!n(t,e))throw new Error("Arrays differ: actual[".concat(r,"] = ").concat(t,", expected[").concat(r,"] = ").concat(e,".\n")+"Actual:   ".concat(o,".\n")+"Expected: ".concat(i,"."))}}function d(t,e){t().then(()=>e.fail(),()=>e())}function p(t,e){const n="string"===typeof e||"number"===typeof e||"boolean"===typeof e?[e]:e;return Object(s.z)(t)||Object(s.z)(t[0])||Object(s.z)(e)||Object(s.z)(e[0])?l(t,n,(t,e)=>t==e):l(t,e,(t,e)=>f(t,e,0))}function h(t,e,n){if(null==n&&(n=u()),!f(t,e,n))throw new Error("Numbers differ: actual === ".concat(t,", expected === ").concat(e))}function f(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function m(t,e,n){for(let a=0;a<t.length;a++)if(t[a]<e||t[a]>n)throw new Error("Value out of range:".concat(t[a]," low: ").concat(e,", high: ").concat(n))}function b(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function g(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?g(n):t[e]=Object(o.encodeString)(n)}return t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(7),o=n(4),i=n(8);const c=Object(o.b)({conv2DBackpropFilter_:function(t,e,n,o,c,u="NHWC",l){let d=t;3===t.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),s.b(4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(d.shape,".")),s.b(4===p.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,".")),s.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,"."));const h="NHWC"===u?d.shape[3]:d.shape[1],f="NHWC"===u?p.shape[3]:p.shape[1];s.b(h===n[2],()=>"Error in conv2dDerFilter: depth of input ".concat(h,") must ")+"match input depth in filter (".concat(n[2],".")),s.b(f===n[3],()=>"Error in conv2dDerFilter: depth of dy (".concat(f,") must ")+"match output depth for filter (".concat(n[3],").")),null!=l&&s.b(s.v(c),()=>"Error in conv2dDerFilter: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const m={x:d,dy:p},b={strides:o,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:n};return a.a.runKernel(r.D,m,b)}})},function(t,e,n){"use strict";(function(t){n(5);var e=n(131),a=n(22);const r=Object(a.c)();r.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),r.registerFlag("IS_BROWSER",()=>e.isBrowser()),r.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),r.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),r.registerFlag("PROD",()=>!1),r.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>r.getBool("DEBUG")),r.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),r.registerFlag("IS_TEST",()=>!1),r.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0)}).call(this,n(130))},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return r}));class a{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class r{decComplexRef(t){}time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,a){return s("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:a,bias:r,activation:o,preluActivationWeights:i}){return s("fusedBatchMatMul")}slice(t,e,n){return s("slice")}stridedSlice(t,e,n,a){return s("stridedSlice")}unstack(t,e){return s("unstack")}reverse(t,e){return s("reverse")}concat(t,e){return s("concat")}neg(t){return s("neg")}add(t,e){return s("add")}addN(t){return s("addN")}subtract(t,e){return s("subtract")}multiply(t,e){return s("multiply")}realDivide(t,e){return s("realDivide")}floorDiv(t,e){return s("floorDiv")}sum(t,e){return s("sum")}prod(t,e){return s("prod")}unsortedSegmentSum(t,e,n){return s("unsortedSegmentSum")}argMin(t,e){return s("argMin")}argMax(t,e){return s("argMax")}equal(t,e){return s("equal")}notEqual(t,e){return s("notEqual")}less(t,e){return s("less")}lessEqual(t,e){return s("lessEqual")}greater(t,e){return s("greater")}greaterEqual(t,e){return s("greaterEqual")}logicalNot(t){return s("logicalNot")}logicalAnd(t,e){return s("logicalAnd")}logicalOr(t,e){return s("logicalOr")}where(t){return s("where")}select(t,e,n){return s("select")}topk(t,e,n){return s("topk")}min(t,e){return s("min")}minimum(t,e){return s("minimum")}mod(t,e){return s("mod")}max(t,e){return s("max")}maximum(t,e){return s("maximum")}all(t,e){return s("all")}any(t,e){return s("any")}squaredDifference(t,e){return s("squaredDifference")}ceil(t){return s("ceil")}floor(t){return s("floor")}round(t){return s("round")}sign(t){return s("sign")}isNaN(t){return s("isNaN")}isInf(t){return s("isInf")}isFinite(t){return s("isFinite")}pow(t,e){return s("pow")}exp(t){return s("exp")}expm1(t){return s("expm1")}softmax(t,e){return s("softmax")}log(t){return s("log")}log1p(t){return s("log1p")}sqrt(t){return s("sqrt")}rsqrt(t){return s("rsqrt")}square(t){return s("square")}reciprocal(t){return s("reciprocal")}relu(t){return s("relu")}relu6(t){return s("relu6")}prelu(t,e){return s("prelu")}elu(t){return s("elu")}eluDer(t,e){return s("eluDer")}selu(t){return s("selu")}int(t){return s("int")}clip(t,e,n){return s("clip")}abs(t){return s("abs")}complexAbs(t){return s("complexAbs")}sigmoid(t){return s("sigmoid")}softplus(t){return s("softplus")}sin(t){return s("sin")}cos(t){return s("cos")}tan(t){return s("tan")}asin(t){return s("asin")}acos(t){return s("acos")}atan(t){return s("atan")}atan2(t,e){return s("atan2")}sinh(t){return s("sinh")}cosh(t){return s("cosh")}tanh(t){return s("tanh")}asinh(t){return s("asinh")}acosh(t){return s("acosh")}atanh(t){return s("atanh")}erf(t){return s("erf")}step(t,e){return s("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:a,activation:r,preluActivationWeights:o}){return s("fusedConv2d")}conv2d(t,e,n){return s("conv2d")}conv2dDerInput(t,e,n){return s("conv2dDerInput")}conv2dDerFilter(t,e,n){return s("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:a,activation:r,preluActivationWeights:o}){return s("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return s("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return s("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return s("depthwiseConv2DDerFilter")}conv3d(t,e,n){return s("conv3d")}conv3dDerInput(t,e,n){return s("conv3dDerInput")}conv3dDerFilter(t,e,n){return s("conv3dDerFilter")}maxPool(t,e){return s("maxPool")}maxPoolBackprop(t,e,n,a){return s("maxPoolBackprop")}avgPool(t,e){return s("avgPool")}avgPoolBackprop(t,e,n){return s("avgPoolBackprop")}avgPool3d(t,e){return s("avgPool3d")}avgPool3dBackprop(t,e,n){return s("avgPool3dBackprop")}maxPool3d(t,e){return s("maxPool3d")}maxPool3dBackprop(t,e,n,a){return s("maxPool3dBackprop")}reshape(t,e){return s("reshape")}cast(t,e){return s("cast")}tile(t,e){return s("tile")}pad(t,e,n){return s("pad")}transpose(t,e){return s("transpose")}gather(t,e,n,a=0){return s("gather")}gatherND(t,e){return s("gatherND")}scatterND(t,e,n){return s("scatterND")}batchToSpaceND(t,e,n){return s("batchToSpaceND")}spaceToBatchND(t,e,n){return s("spaceToBatchND")}resizeBilinear(t,e,n,a,r){return s("resizeBilinear")}resizeBilinearBackprop(t,e,n){return s("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,a,r){return s("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return s("resizeNearestNeighborBackprop")}batchNorm(t,e,n,a,r,o){return s("batchNorm")}localResponseNormalization4D(t,e,n,a,r){return s("localResponseNormalization4D")}LRNGrad(t,e,n,a,r,o,i){return s("LRNGrad")}multinomial(t,e,n,a){return s("multinomial")}oneHot(t,e,n,a){return s("oneHot")}cumsum(t,e,n,a){return s("cumsum")}nonMaxSuppression(t,e,n,a,r){return s("nonMaxSuppression")}fft(t){return s("fft")}ifft(t){return s("ifft")}complex(t,e){return s("complex")}real(t){return s("real")}imag(t){return s("imag")}cropAndResize(t,e,n,a,r,o){return s("cropAndResize")}depthToSpace(t,e,n){return s("depthToSpace")}split(t,e,n){return s("split")}sparseToDense(t,e,n,a){return s("sparseToDense")}diag(t){return s("diag")}fill(t,e,n){return s("fill")}onesLike(t){return s("onesLike")}zerosLike(t){return s("zerosLike")}linspace(t,e,n){return s("linspace")}dispose(){return s("dispose")}}function s(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({tanh_:function(t){const e={x:Object(s.a)(t,"x","tanh")};return a.a.runKernel(r.Sc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(5),r=n(3);function s(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:t,stop:e,step:n,dtype:s};return a.a.runKernel(r.ic,{},o)}},function(t,e,n){"use strict";(function(t,a){let r;function s(){if(null==r){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof a)e=a;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function o(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return o}))}).call(this,n(129),n(130))},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(a){"object"===typeof window&&(n=window)}t.exports=n},function(t,e){var n,a,r=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(t){if(n===setTimeout)return setTimeout(t,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:s}catch(t){n=s}try{a="function"===typeof clearTimeout?clearTimeout:o}catch(t){a=o}}();var c,u=[],l=!1,d=-1;function p(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&h())}function h(){if(!l){var t=i(p);l=!0;for(var e=u.length;e;){for(c=u,u=[];++d<e;)c&&c[d].run();d=-1,e=u.length}c=null,l=!1,function(t){if(a===clearTimeout)return clearTimeout(t);if((a===o||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(t);try{a(t)}catch(e){try{return a.call(null,t)}catch(e){return a.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new f(t,e)),1!==u.length||l||i(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(t,e,n){"use strict";function a(){if("undefined"!==typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function r(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return a})),n.d(e,"isBrowser",(function(){return r}))},function(t,e,n){"use strict";function a(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return a}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({all_:function(t,e=null,n=!1){const o={x:Object(s.a)(t,"x","all","bool")},i={axis:e,keepDims:n};return a.a.runKernel(r.f,o,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({any_:function(t,e=null,n=!1){const o={x:Object(s.a)(t,"x","any","bool")},i={axis:e,keepDims:n};return a.a.runKernel(r.g,o,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({argMax_:function(t,e=0){const n={x:Object(s.a)(t,"x","argMax")},o={axis:e};return a.a.runKernel(r.h,n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({argMin_:function(t,e=0){const n={x:Object(s.a)(t,"x","argMin")},o={axis:e};return a.a.runKernel(r.i,n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(21),o=n(1),i=n(4);const c=Object(i.b)({atan2_:function(t,e){let n=Object(o.a)(t,"a","atan2"),i=Object(o.a)(e,"b","atan2");[n,i]=Object(s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.a.runKernel(r.m,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(1),r=n(7),s=n(56),o=n(26),i=n(4),c=n(8);const u=Object(i.b)({conv1d_:function(t,e,n,i,u="NWC",l=1,d){const p=Object(a.a)(t,"x","conv1d"),h=Object(a.a)(e,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=Object(c.a)(p,[1,p.shape[0],p.shape[1]])),r.b(3===f.rank,()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,".")),r.b(3===h.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(h.rank,".")),null!=d&&r.b(r.v(i),()=>"Error in conv1d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(i,".")),r.b(f.shape[2]===h.shape[1],()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(h.shape[1],".")),r.b(o.h(n,l),()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(l,"'")),r.b("NWC"===u,()=>"Error in conv1d: got dataFormat of ".concat(u," but only NWC is currently supported."));const b=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),g=Object(c.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v=Object(s.a)(g,b,y,i,"NHWC",x,d);return m?Object(c.a)(v,[v.shape[2],v.shape[3]]):Object(c.a)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(1),r=n(120),s=n(4);const o=Object(s.b)({conv2dTranspose_:function(t,e,n,s,o,i){const c=Object(a.a)(t,"x","conv2dTranspose"),u=Object(a.a)(e,"filter","conv2dTranspose");return Object(r.a)(n,c,u,s,o,"NHWC",i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({cosh_:function(t){const e={x:Object(s.a)(t,"x","cosh")};return a.a.runKernel(r.J,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({depthToSpace_:function(t,e,n="NHWC"){const i=Object(s.a)(t,"x","depthToSpace"),c="NHWC"===n?i.shape[1]:i.shape[2],u="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];o.b(c*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(i.shape)),o.b(u*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(u," and ").concat(e," for depthToSpace with input shape\n        ").concat(i.shape)),o.b(l%(e*e)===0,()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(l," for depthToSpace with input shape ").concat(i.shape));const d={x:i},p={blockSize:e,dataFormat:n};return a.a.runKernel(r.N,d,p)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4),c=n(8);const u=Object(i.b)({dilation2d_:function(t,e,n,i,u=[1,1],l="NHWC"){const d=Object(s.a)(t,"x","dilation2d"),p=Object(s.a)(e,"filter","dilation2d");o.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,".")),o.b(3===p.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(p.rank,".")),o.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(l));let h=d,f=!1;3===d.rank&&(h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},b={strides:n,pad:i,dilations:u},g=a.a.runKernel(r.S,m,b);return f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(21),r=n(1),s=n(14),o=n(68),i=n(4),c=n(31),u=n(20);const l=Object(i.b)({divNoNan_:function(t,e){let n=Object(r.a)(t,"a","div"),i=Object(r.a)(e,"b","div");[n,i]=Object(a.makeTypesMatch)(n,i);const l=Object(s.a)(n,i),d=Object(u.a)(l),p=Object(o.a)(i,d);return Object(c.a)(p,d,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(1),r=n(7),s=n(25),o=n(4),i=n(8);const c=Object(o.b)({dot_:function(t,e){const n=Object(a.a)(t,"t1","dot"),o=Object(a.a)(e,"t2","dot");r.b((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,"."));const c=1===n.rank?n.size:n.shape[1],u=1===o.rank?o.size:o.shape[0];if(r.b(c===u,()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(u,".")),1===n.rank&&1===o.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(o,[-1,1]),a=Object(s.a)(t,e);return Object(i.a)(a,[])}if(1===n.rank&&2===o.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(o,[o.shape[0],o.shape[1]]),a=Object(s.a)(t,e);return Object(i.a)(a,[a.size])}if(2===n.rank&&1===o.rank){const t=Object(i.a)(o,[-1,1]),e=Object(s.a)(n,t);return Object(i.a)(e,[e.size])}{const t=Object(i.a)(o,[o.shape[0],o.shape[1]]);return Object(s.a)(n,t)}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4),c=n(8);const u=Object(i.b)({localResponseNormalization_:function(t,e=5,n=1,i=1,u=.5){const l=Object(s.a)(t,"x","localResponseNormalization");o.b(4===l.rank||3===l.rank,()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(l.rank,".")),o.b(o.v(e),()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,"."));let d=l,p=!1;3===l.rank&&(p=!0,d=Object(c.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:d},f={depthRadius:e,bias:n,alpha:i,beta:u},m=a.a.runKernel(r.vb,h,f);return p?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({log1p_:function(t){const e={x:Object(s.a)(t,"x","log1p")};return a.a.runKernel(r.Cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({softplus_:function(t){const e={x:Object(s.a)(t,"x","softplus")};return a.a.runKernel(r.Gc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(1),r=n(16),s=n(52),o=n(83),i=n(110),c=n(4);const u=Object(c.b)({logicalXor_:function(t,e){const n=Object(a.a)(t,"a","logicalXor","bool"),c=Object(a.a)(e,"b","logicalXor","bool");return Object(r.a)(n.shape,c.shape),Object(s.a)(Object(i.a)(t,e),Object(o.a)(Object(s.a)(t,e)))}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({mirrorPad_:function(t,e,n){o.b("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,"."));const i=Object(s.a)(t,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.b(e.length===i.rank,()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(e.length,"."));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.b(2===e[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),o.b(e[a][0]>=0&&e[a][0]<=i.shape[a]-c&&e[a][1]>=0&&e[a][1]<=i.shape[a]-c,()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape));const u={paddings:e,mode:n},l={x:i};return a.a.runKernel(r.Rb,l,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var a=n(1),r=n(7),s=n(102),o=n(80),i=n(26),c=n(111),u=n(4),l=n(8),d=n(86);const p=Object(u.b)({pool_:function(t,e,n,u,p,h){null==p&&(p=[1,1]),null==h&&(h=1),0===u&&(u="valid");const f=Object(a.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),r.b(i.h(h,p),()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(h," and dilations '").concat(p,"'"));const g=i.e(m.shape,e,h,p,u),y=[g.dilationHeight,g.dilationWidth];let x;x="same"===u?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),a=n.map(t=>Math.floor(t/2)),r=n.map((t,e)=>t-a[e]);return n.map((t,e)=>[a[e],r[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const v=1===y[0]&&1===y[1],[w,k]=function(t,e,n){const a=n.map(t=>t[0]),r=n.map(t=>t[1]),s=t.concat(a,r),o=e.map((t,e)=>(t-s[e]%t)%t),i=r.map((t,e)=>t+o[e]),c=e.map((t,e)=>[a[e],i[e]]),u=e.map((t,e)=>[0,o[e]]);return[c,u]}([g.inHeight,g.inWidth],y,x),O=v?u:"valid",N=v?m:Object(d.a)(m,y,w),I=("avg"===n?()=>Object(s.a)(N,e,h,O):()=>Object(c.a)(N,e,h,O))(),S=v?I:Object(o.a)(I,y,k);return b?Object(l.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(11),i=n(4);const c=Object(i.b)({prod_:function(t,e=null,n=!1){let i=Object(s.a)(t,"x","prod");"bool"===i.dtype&&(i=Object(o.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return a.a.runKernel(r.hc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(40),r=n(4),s=n(90);const o=Object(r.b)({randomUniform_:function(t,e=0,n=1,r="float32",o){const i=Object(a.a)(t,r),c=new s.c(e,n,null,o);for(let a=0;a<i.values.length;a++)i.values[a]=c.nextValue();return i.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({rsqrt_:function(t){const e={x:Object(s.a)(t,"x","rsqrt")};return a.a.runKernel(r.wc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({selu_:function(t){const e={x:Object(s.a)(t,"x","selu")};return a.a.runKernel(r.zc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(1),r=n(7),s=n(56),o=n(67),i=n(4),c=n(8);const u=Object(i.b)({separableConv2d_:function(t,e,n,i,u,l=[1,1],d="NHWC"){const p=Object(a.a)(t,"x","separableConv2d"),h=Object(a.a)(e,"depthwiseFilter","separableConv2d"),f=Object(a.a)(n,"pointwiseFilter","separableConv2d");let m=p,b=!1;if(3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.b(4===m.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),r.b(4===h.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(h.rank,".")),r.b(4===f.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(h.rank,".")),r.b(1===f.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],".")),r.b(1===f.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],"."));const g=h.shape[2],y=h.shape[3];r.b(f.shape[2]===g*y,()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(g*y,", ")+"but got ".concat(f.shape[2],"."));const x=Object(o.a)(m,h,i,u,d,l),v=Object(s.a)(x,f,1,"valid",d);return b?Object(c.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({sin_:function(t){const e={x:Object(s.a)(t,"x","sin")};return a.a.runKernel(r.Cc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({sinh_:function(t){const e={x:Object(s.a)(t,"x","sinh")};return a.a.runKernel(r.Dc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var a=n(51),r=n(28),s=n(107),o=n(9),i=n(4),c=n(95),u=n(8),l=n(42),d=n(15),p=n(24),h=n(96);const f=Object(i.b)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let i;if(e<=2){const a=Object(u.a)(t,[n,e]);i=Object(h.a)(a)}else{const f=[n,2*(e-1)],m=Object(u.a)(Object(c.a)(t),[n,e]),b=Object(u.a)(Object(s.a)(t),[n,e]),g=Object(l.a)(Object(p.a)(m,[0,1],[n,e-2]),1),y=Object(o.a)(Object(l.a)(Object(p.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),x=Object(r.a)([m,g],1),v=Object(r.a)([b,y],1),w=Object(u.a)(Object(a.a)(x,v),[f[0],f[1]]);i=Object(h.a)(w)}if(i=Object(c.a)(i),3===t.rank&&0!==t.shape[0]){const e=i,n=t.shape[0];i=Object(u.a)(i,[n,i.shape[0]/n,i.shape[1]]),e.dispose()}return i}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(1),r=n(7),s=n(44);function o(t,e,n){if(Object(r.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const o=Object(a.c)(t,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(t,e,o,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({topk_:function(t,e=1,n=!0){const o=Object(s.a)(t,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(e>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(e));const c={x:o},u={k:e,sorted:n},[l,d]=a.a.runKernel(r.Uc,c,u);return{values:l,indices:d}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({unique_:function(t,e=0){const n=Object(s.a)(t,"x","unique","string_or_numeric");Object(o.b)(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},c={axis:e},[u,l]=a.a.runKernel(r.Wc,i,c);return{values:u,indices:l}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(163),r=n(1);const s=async function(t){const e=Object(r.a)(t,"condition","whereAsync","bool"),n=await e.data(),s=Object(a.a)(e.shape,n);return t!==e&&e.dispose(),s}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var a=n(40);function r(t,e){const n=[];for(let a=0;a<e.length;a++)e[a]&&n.push(a);const r=Object(a.a)(t,"int32"),s=Object(a.a)([n.length,t.length],"int32");for(let a=0;a<n.length;a++){const e=r.indexToLoc(n[a]),o=a*t.length;s.values.set(e,o)}return s.toTensor()}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(7),o=n(4),i=n(8);const c=Object(o.b)({conv3DBackpropInput_:function(t,e,n,o,c){s.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let u=t,l=e,d=!1;4===e.rank&&(d=!0,l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),u=[1,t[0],t[1],t[2],t[3]]);const p=u[4],h=l.shape[4];s.b(5===u.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(u.length,".")),s.b(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(l.rank)),s.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank)),s.b(p===n.shape[3],()=>"Error in conv3dDerInput: depth of input (".concat(p,") must ")+"match input depth for filter ".concat(n.shape[3],".")),s.b(h===n.shape[4],()=>"Error in conv3dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[4],"."));const f={dy:l,filter:n},m={pad:c,strides:o,inputShape:u},b=a.a.runKernel(r.H,f,m);return d?Object(i.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4),c=n(8);const u=Object(i.b)({resizeNearestNeighbor_:function(t,e,n=!1,i=!1){const u=Object(s.a)(t,"images","resizeNearestNeighbor");o.b(3===u.rank||4===u.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),o.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,".")),o.b("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),o.b(!1===i||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=e,p={images:l},h={alignCorners:n,halfPixelCenters:i,size:e},f=a.a.runKernel(r.rc,p,h);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4),c=n(8);const u=Object(i.b)({resizeBilinear_:function(t,e,n=!1,i=!1){const u=Object(s.a)(t,"images","resizeBilinear");o.b(3===u.rank||4===u.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),o.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,".")),o.b(!1===i||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=e,p={images:l},h={alignCorners:n,halfPixelCenters:i,size:e},f=a.a.runKernel(r.pc,p,h);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(4),o=n(8);const i=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,i,c=[1,1],u){let l=e,d=!1;3===e.rank&&(d=!0,l=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={dy:l,filter:n},h={strides:s,pad:i,dimRoundingMode:u,dilations:c,inputShape:t},f=a.a.runKernel(r.Q,p,h);return d?Object(o.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(4),o=n(8);const i=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,i,c=[1,1],u){let l=t;3===t.rank&&(l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={x:l,dy:d},h={strides:s,pad:i,dimRoundingMode:u,dilations:c,filterShape:n};return a.a.runKernel(r.P,p,h)}})},function(t,e,n){"use strict";(function(t){var a=n(238),r=n(239),s=n(240);function o(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=c.prototype:(null===t&&(t=new c(e)),t.length=e),t}function c(t,e,n){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return d(this,t)}return u(this,t,e,n)}function u(t,e,n,a){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,a){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(a||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===a?new Uint8Array(e):void 0===a?new Uint8Array(e,n):new Uint8Array(e,n,a);c.TYPED_ARRAY_SUPPORT?(t=e).__proto__=c.prototype:t=p(t,e);return t}(t,e,n,a):"string"===typeof e?function(t,e,n){"string"===typeof n&&""!==n||(n="utf8");if(!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var a=0|f(e,n),r=(t=i(t,a)).write(e,n);r!==a&&(t=t.slice(0,r));return t}(t,e,n):function(t,e){if(c.isBuffer(e)){var n=0|h(e.length);return 0===(t=i(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||(a=e.length)!==a?i(t,0):p(t,e);if("Buffer"===e.type&&s(e.data))return p(t,e.data)}var a;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e){if(l(e),t=i(t,e<0?0:0|h(e)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function p(t,e){var n=e.length<0?0:0|h(e.length);t=i(t,n);for(var a=0;a<n;a+=1)t[a]=255&e[a];return t}function h(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function f(t,e){if(c.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var a=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(t).length;default:if(a)return B(t).length;e=(""+e).toLowerCase(),a=!0}}function m(t,e,n){var a=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return C(this,e,n);case"utf8":case"utf-8":return S(this,e,n);case"ascii":return T(this,e,n);case"latin1":case"binary":return j(this,e,n);case"base64":return I(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,n);default:if(a)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),a=!0}}function b(t,e,n){var a=t[e];t[e]=t[n],t[n]=a}function g(t,e,n,a,r){if(0===t.length)return-1;if("string"===typeof n?(a=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(r)return-1;n=t.length-1}else if(n<0){if(!r)return-1;n=0}if("string"===typeof e&&(e=c.from(e,a)),c.isBuffer(e))return 0===e.length?-1:y(t,e,n,a,r);if("number"===typeof e)return e&=255,c.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,a,r);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,a,r){var s,o=1,i=t.length,c=e.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(t.length<2||e.length<2)return-1;o=2,i/=2,c/=2,n/=2}function u(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(r){var l=-1;for(s=n;s<i;s++)if(u(t,s)===u(e,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===c)return l*o}else-1!==l&&(s-=s-l),l=-1}else for(n+c>i&&(n=i-c),s=n;s>=0;s--){for(var d=!0,p=0;p<c;p++)if(u(t,s+p)!==u(e,p)){d=!1;break}if(d)return s}return-1}function x(t,e,n,a){n=Number(n)||0;var r=t.length-n;a?(a=Number(a))>r&&(a=r):a=r;var s=e.length;if(s%2!==0)throw new TypeError("Invalid hex string");a>s/2&&(a=s/2);for(var o=0;o<a;++o){var i=parseInt(e.substr(2*o,2),16);if(isNaN(i))return o;t[n+o]=i}return o}function v(t,e,n,a){return V(B(e,t.length-n),t,n,a)}function w(t,e,n,a){return V(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,a)}function k(t,e,n,a){return w(t,e,n,a)}function O(t,e,n,a){return V(W(e),t,n,a)}function N(t,e,n,a){return V(function(t,e){for(var n,a,r,s=[],o=0;o<t.length&&!((e-=2)<0);++o)n=t.charCodeAt(o),a=n>>8,r=n%256,s.push(r),s.push(a);return s}(e,t.length-n),t,n,a)}function I(t,e,n){return 0===e&&n===t.length?a.fromByteArray(t):a.fromByteArray(t.slice(e,n))}function S(t,e,n){n=Math.min(t.length,n);for(var a=[],r=e;r<n;){var s,o,i,c,u=t[r],l=null,d=u>239?4:u>223?3:u>191?2:1;if(r+d<=n)switch(d){case 1:u<128&&(l=u);break;case 2:128===(192&(s=t[r+1]))&&(c=(31&u)<<6|63&s)>127&&(l=c);break;case 3:s=t[r+1],o=t[r+2],128===(192&s)&&128===(192&o)&&(c=(15&u)<<12|(63&s)<<6|63&o)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:s=t[r+1],o=t[r+2],i=t[r+3],128===(192&s)&&128===(192&o)&&128===(192&i)&&(c=(15&u)<<18|(63&s)<<12|(63&o)<<6|63&i)>65535&&c<1114112&&(l=c)}null===l?(l=65533,d=1):l>65535&&(l-=65536,a.push(l>>>10&1023|55296),l=56320|1023&l),a.push(l),r+=d}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",a=0;for(;a<e;)n+=String.fromCharCode.apply(String,t.slice(a,a+=4096));return n}(a)}e.Buffer=c,e.SlowBuffer=function(t){+t!=t&&(t=0);return c.alloc(+t)},e.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}(),e.kMaxLength=o(),c.poolSize=8192,c._augment=function(t){return t.__proto__=c.prototype,t},c.from=function(t,e,n){return u(null,t,e,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(t,e,n){return function(t,e,n,a){return l(e),e<=0?i(t,e):void 0!==n?"string"===typeof a?i(t,e).fill(n,a):i(t,e).fill(n):i(t,e)}(null,t,e,n)},c.allocUnsafe=function(t){return d(null,t)},c.allocUnsafeSlow=function(t){return d(null,t)},c.isBuffer=function(t){return!(null==t||!t._isBuffer)},c.compare=function(t,e){if(!c.isBuffer(t)||!c.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,a=e.length,r=0,s=Math.min(n,a);r<s;++r)if(t[r]!==e[r]){n=t[r],a=e[r];break}return n<a?-1:a<n?1:0},c.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(t,e){if(!s(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return c.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var a=c.allocUnsafe(e),r=0;for(n=0;n<t.length;++n){var o=t[n];if(!c.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(a,r),r+=o.length}return a},c.byteLength=f,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},c.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},c.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},c.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?S(this,0,t):m.apply(this,arguments)},c.prototype.equals=function(t){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===c.compare(this,t)},c.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},c.prototype.compare=function(t,e,n,a,r){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===a&&(a=0),void 0===r&&(r=this.length),e<0||n>t.length||a<0||r>this.length)throw new RangeError("out of range index");if(a>=r&&e>=n)return 0;if(a>=r)return-1;if(e>=n)return 1;if(this===t)return 0;for(var s=(r>>>=0)-(a>>>=0),o=(n>>>=0)-(e>>>=0),i=Math.min(s,o),u=this.slice(a,r),l=t.slice(e,n),d=0;d<i;++d)if(u[d]!==l[d]){s=u[d],o=l[d];break}return s<o?-1:o<s?1:0},c.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},c.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},c.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},c.prototype.write=function(t,e,n,a){if(void 0===e)a="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)a=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===a&&(a="utf8")):(a=n,n=void 0)}var r=this.length-e;if((void 0===n||n>r)&&(n=r),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");for(var s=!1;;)switch(a){case"hex":return x(this,t,e,n);case"utf8":case"utf-8":return v(this,t,e,n);case"ascii":return w(this,t,e,n);case"latin1":case"binary":return k(this,t,e,n);case"base64":return O(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),s=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function T(t,e,n){var a="";n=Math.min(t.length,n);for(var r=e;r<n;++r)a+=String.fromCharCode(127&t[r]);return a}function j(t,e,n){var a="";n=Math.min(t.length,n);for(var r=e;r<n;++r)a+=String.fromCharCode(t[r]);return a}function C(t,e,n){var a=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>a)&&(n=a);for(var r="",s=e;s<n;++s)r+=P(t[s]);return r}function E(t,e,n){for(var a=t.slice(e,n),r="",s=0;s<a.length;s+=2)r+=String.fromCharCode(a[s]+256*a[s+1]);return r}function A(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function _(t,e,n,a,r,s){if(!c.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>r||e<s)throw new RangeError('"value" argument is out of bounds');if(n+a>t.length)throw new RangeError("Index out of range")}function R(t,e,n,a){e<0&&(e=65535+e+1);for(var r=0,s=Math.min(t.length-n,2);r<s;++r)t[n+r]=(e&255<<8*(a?r:1-r))>>>8*(a?r:1-r)}function D(t,e,n,a){e<0&&(e=4294967295+e+1);for(var r=0,s=Math.min(t.length-n,4);r<s;++r)t[n+r]=e>>>8*(a?r:3-r)&255}function F(t,e,n,a,r,s){if(n+a>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(t,e,n,a,s){return s||F(t,0,n,4),r.write(t,e,n,a,23,4),n+4}function z(t,e,n,a,s){return s||F(t,0,n,8),r.write(t,e,n,a,52,8),n+8}c.prototype.slice=function(t,e){var n,a=this.length;if((t=~~t)<0?(t+=a)<0&&(t=0):t>a&&(t=a),(e=void 0===e?a:~~e)<0?(e+=a)<0&&(e=0):e>a&&(e=a),e<t&&(e=t),c.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=c.prototype;else{var r=e-t;n=new c(r,void 0);for(var s=0;s<r;++s)n[s]=this[s+t]}return n},c.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var a=this[t],r=1,s=0;++s<e&&(r*=256);)a+=this[t+s]*r;return a},c.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var a=this[t+--e],r=1;e>0&&(r*=256);)a+=this[t+--e]*r;return a},c.prototype.readUInt8=function(t,e){return e||A(t,1,this.length),this[t]},c.prototype.readUInt16LE=function(t,e){return e||A(t,2,this.length),this[t]|this[t+1]<<8},c.prototype.readUInt16BE=function(t,e){return e||A(t,2,this.length),this[t]<<8|this[t+1]},c.prototype.readUInt32LE=function(t,e){return e||A(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},c.prototype.readUInt32BE=function(t,e){return e||A(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},c.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var a=this[t],r=1,s=0;++s<e&&(r*=256);)a+=this[t+s]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*e)),a},c.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var a=e,r=1,s=this[t+--a];a>0&&(r*=256);)s+=this[t+--a]*r;return s>=(r*=128)&&(s-=Math.pow(2,8*e)),s},c.prototype.readInt8=function(t,e){return e||A(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},c.prototype.readInt16LE=function(t,e){e||A(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(t,e){e||A(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(t,e){return e||A(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},c.prototype.readInt32BE=function(t,e){return e||A(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},c.prototype.readFloatLE=function(t,e){return e||A(t,4,this.length),r.read(this,t,!0,23,4)},c.prototype.readFloatBE=function(t,e){return e||A(t,4,this.length),r.read(this,t,!1,23,4)},c.prototype.readDoubleLE=function(t,e){return e||A(t,8,this.length),r.read(this,t,!0,52,8)},c.prototype.readDoubleBE=function(t,e){return e||A(t,8,this.length),r.read(this,t,!1,52,8)},c.prototype.writeUIntLE=function(t,e,n,a){(t=+t,e|=0,n|=0,a)||_(this,t,e,n,Math.pow(2,8*n)-1,0);var r=1,s=0;for(this[e]=255&t;++s<n&&(r*=256);)this[e+s]=t/r&255;return e+n},c.prototype.writeUIntBE=function(t,e,n,a){(t=+t,e|=0,n|=0,a)||_(this,t,e,n,Math.pow(2,8*n)-1,0);var r=n-1,s=1;for(this[e+r]=255&t;--r>=0&&(s*=256);)this[e+r]=t/s&255;return e+n},c.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,1,255,0),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},c.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},c.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},c.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},c.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},c.prototype.writeIntLE=function(t,e,n,a){if(t=+t,e|=0,!a){var r=Math.pow(2,8*n-1);_(this,t,e,n,r-1,-r)}var s=0,o=1,i=0;for(this[e]=255&t;++s<n&&(o*=256);)t<0&&0===i&&0!==this[e+s-1]&&(i=1),this[e+s]=(t/o>>0)-i&255;return e+n},c.prototype.writeIntBE=function(t,e,n,a){if(t=+t,e|=0,!a){var r=Math.pow(2,8*n-1);_(this,t,e,n,r-1,-r)}var s=n-1,o=1,i=0;for(this[e+s]=255&t;--s>=0&&(o*=256);)t<0&&0===i&&0!==this[e+s+1]&&(i=1),this[e+s]=(t/o>>0)-i&255;return e+n},c.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,1,127,-128),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},c.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},c.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},c.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},c.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},c.prototype.writeFloatLE=function(t,e,n){return M(this,t,e,!0,n)},c.prototype.writeFloatBE=function(t,e,n){return M(this,t,e,!1,n)},c.prototype.writeDoubleLE=function(t,e,n){return z(this,t,e,!0,n)},c.prototype.writeDoubleBE=function(t,e,n){return z(this,t,e,!1,n)},c.prototype.copy=function(t,e,n,a){if(n||(n=0),a||0===a||(a=this.length),e>=t.length&&(e=t.length),e||(e=0),a>0&&a<n&&(a=n),a===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),t.length-e<a-n&&(a=t.length-e+n);var r,s=a-n;if(this===t&&n<e&&e<a)for(r=s-1;r>=0;--r)t[r+e]=this[r+n];else if(s<1e3||!c.TYPED_ARRAY_SUPPORT)for(r=0;r<s;++r)t[r+e]=this[r+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+s),e);return s},c.prototype.fill=function(t,e,n,a){if("string"===typeof t){if("string"===typeof e?(a=e,e=0,n=this.length):"string"===typeof n&&(a=n,n=this.length),1===t.length){var r=t.charCodeAt(0);r<256&&(t=r)}if(void 0!==a&&"string"!==typeof a)throw new TypeError("encoding must be a string");if("string"===typeof a&&!c.isEncoding(a))throw new TypeError("Unknown encoding: "+a)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var s;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(s=e;s<n;++s)this[s]=t;else{var o=c.isBuffer(t)?t:B(new c(t,a).toString()),i=o.length;for(s=0;s<n-e;++s)this[s+e]=o[s%i]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function P(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var a=t.length,r=null,s=[],o=0;o<a;++o){if((n=t.charCodeAt(o))>55295&&n<57344){if(!r){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(o+1===a){(e-=3)>-1&&s.push(239,191,189);continue}r=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(e-=3)>-1&&s.push(239,191,189);if(r=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function W(t){return a.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(L,"")).length<2)return"";for(;t.length%4!==0;)t+="=";return t}(t))}function V(t,e,n,a){for(var r=0;r<a&&!(r+n>=e.length||r>=t.length);++r)e[r+n]=t[r];return r}}).call(this,n(129))},function(t,e,n){"use strict";var a=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;function o(t){if(null===t||void 0===t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(t){a[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(t,e){for(var n,i,c=o(t),u=1;u<arguments.length;u++){for(var l in n=Object(arguments[u]))r.call(n,l)&&(c[l]=n[l]);if(a){i=a(n);for(var d=0;d<i.length;d++)s.call(n,i[d])&&(c[i[d]]=n[i[d]])}}return c}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({acos_:function(t){const e={x:Object(s.a)(t,"x","acos")};return a.a.runKernel(r.b,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({acosh_:function(t){const e={x:Object(s.a)(t,"x","acosh")};return a.a.runKernel(r.c,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({addN_:function(t){o.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),o.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length));const e=t.map((t,e)=>Object(s.a)(t,"tensors".concat(e),"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!o.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const i=e;return a.a.runKernel(r.e,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({asin_:function(t){const e={x:Object(s.a)(t,"x","asin")};return a.a.runKernel(r.j,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({asinh_:function(t){const e={x:Object(s.a)(t,"x","asinh")};return a.a.runKernel(r.k,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({atan_:function(t){const e={x:Object(s.a)(t,"x","atan")};return a.a.runKernel(r.l,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({atanh_:function(t){const e={x:Object(s.a)(t,"x","atanh")};return a.a.runKernel(r.n,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var a=n(5),r=n(19),s=n(3),o=n(1),i=n(7),c=n(11),u=n(26),l=n(4),d=n(8);const p=Object(l.b)({avgPool3d_:function(t,e,n,l,p,h="NDHWC",f){null==f?f=[1,1,1]:Object(r.b)("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(o.a)(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d.a)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),i.b(5===b.rank,()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(b.rank,".")),i.b("NDHWC"===h,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(h)),i.b(u.h(n,f),()=>"Error in avgPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(f,"'")),null!=p&&i.b(i.v(l),()=>"Error in avgPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(p," but got pad ").concat(l,"."));const y={x:b},x={filterSize:e,strides:n,pad:l,dimRoundingMode:p,dataFormat:h,dilations:f};let v=a.a.runKernel(s.p,y,x);return v=Object(c.a)(v,b.dtype),g?Object(d.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({bincount_:function(t,e,n){const i=Object(s.a)(t,"x","bincount"),c=Object(s.a)(e,"weights","bincount");o.b("int32"===i.dtype,()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(i.dtype)),o.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),o.b(c.size===i.size||0===c.size,()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(i.shape,", weights shape: ")+"".concat(c.shape,"."));const u={x:i,weights:c},l={size:n};return a.a.runKernel(r.u,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({ceil_:function(t){const e={x:Object(s.a)(t,"x","ceil")};return a.a.runKernel(r.x,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({clipByValue_:function(t,e,n){const i=Object(s.a)(t,"x","clipByValue");o.b(e<=n,()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."));const c={x:i},u={clipValueMin:e,clipValueMax:n};return a.a.runKernel(r.y,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(26),c=n(4),u=n(8);const l=Object(c.b)({conv3d_:function(t,e,n,c,l="NDHWC",d=[1,1,1]){const p=Object(s.a)(t,"x","conv3d"),h=Object(s.a)(e,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),o.b(5===f.rank,()=>"Error in conv3d: input must be rank 5, but got rank ".concat(f.rank,".")),o.b(5===h.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(h.rank,".")),o.b(f.shape[4]===h.shape[3],()=>"Error in conv3d: depth of input (".concat(f.shape[4],") must match ")+"input depth for filter ".concat(h.shape[3],".")),o.b(Object(i.h)(n,d),()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'")),o.b("NDHWC"===l,()=>"Error in conv3d: got dataFormat of ".concat(l," but only NDHWC is currently supported."));const b={x:f,filter:h},g={strides:n,pad:c,dataFormat:l,dilations:d},y=a.a.runKernel(r.F,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(4);const c=Object(i.b)({denseBincount_:function(t,e,n,i=!1){const c=Object(s.a)(t,"x","denseBincount"),u=Object(s.a)(e,"weights","denseBincount");o.b("int32"===c.dtype,()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(c.dtype)),o.b(c.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(c.rank,".")),o.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),o.b(u.size===c.size||0===u.size,()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(c.shape,", weights shape: ")+"".concat(u.shape,"."));const l={x:c,weights:u},d={size:n,binaryOutput:i};return a.a.runKernel(r.M,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(5),r=n(3),s=n(1),o=n(7),i=n(11),c=n(4);const u=Object(c.b)({erf_:function(t){let e=Object(s.a)(t,"x","erf");o.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(i.a)(e,"float32"));const n={x:e};return a.a.runKernel(r.Y,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({expm1_:function(t){const e={x:Object(s.a)(t,"x","expm1")};return a.a.runKernel(r.bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({isFinite_:function(t){const e={x:Object(s.a)(t,"x","isFinite")};return a.a.runKernel(r.sb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({isInf_:function(t){const e={x:Object(s.a)(t,"x","isInf")};return a.a.runKernel(r.tb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({isNaN_:function(t){const e={x:Object(s.a)(t,"x","isNaN")};return a.a.runKernel(r.ub,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var a=n(5),r=n(3);function s(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return a.a.runKernel(r.Ab,{},s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var a=n(29),r=n(1),s=n(9),o=n(27),i=n(4),c=n(74),u=n(147);const l=Object(i.b)({logSigmoid_:function(t){const e=Object(r.a)(t,"x","logSigmoid");return Object(a.a)(t=>({value:Object(o.a)(Object(u.a)(Object(o.a)(t))),gradFunc:e=>Object(s.a)(e,Object(c.a)(Object(o.a)(t)))}))(e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var a=n(29),r=n(1),s=n(11),o=n(35),i=n(62),c=n(59),u=n(9),l=n(4),d=n(13),p=n(18);const h=Object(l.b)({logSoftmax_:function(t,e=-1){const n=Object(r.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));return Object(a.a)((t,n)=>{const a=Object(c.a)(t,e,!0),r=Object(d.a)(t,a),l=Object(d.a)(Object(s.a)(r,"float32"),Object(i.a)(Object(p.a)(Object(o.a)(r),e,!0)));n([l]);return{value:l,gradFunc:(t,n)=>{const[a]=n,r=Object(o.a)(a);return Object(d.a)(t,Object(u.a)(Object(p.a)(t,e,!0),r))}}})(n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var a=n(5),r=n(19),s=n(3),o=n(1),i=n(7),c=n(26),u=n(4),l=n(8);const d=Object(u.b)({maxPool3d_:function(t,e=[1,1,1],n,u,d,p="NDHWC",h){null==h?h=[1,1,1]:Object(r.b)("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(o.a)(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),i.b(5===m.rank,()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(m.rank,".")),i.b("NDHWC"===p,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(p)),i.b(c.h(n,h),()=>"Error in maxPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(h,"'")),null!=d&&i.b(i.v(u),()=>"Error in maxPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(u,"."));const g={x:m},y={filterSize:e,strides:n,pad:u,dimRoundingMode:d,dataFormat:p,dilations:h},x=a.a.runKernel(s.Jb,g,y);return b?Object(l.a)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({maxPoolWithArgmax_:function(t,e,n,o,i=!1){const c={x:Object(s.a)(t,"x","maxPoolWithArgmax")},u={filterSize:e,strides:n,pad:o,includeBatchInIndex:i},l=a.a.runKernel(r.Mb,c,u);return{result:l[0],indexes:l[1]}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(4),i=n(8);const c=Object(o.b)({multinomial_:function(t,e,n,o=!1){const c=Object(s.a)(t,"logits","multinomial"),u=c.size,l=c.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(u,"."));if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(l));n=n||Math.random();const d={logits:1===l?Object(i.a)(c,[1,-1]):c},p={numSamples:e,seed:n,normalized:o},h=a.a.runKernel(r.Tb,d,p);return 1===l?Object(i.a)(h,[h.size]):h}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({onesLike_:function(t){const e={x:Object(s.a)(t,"x","onesLike")};return a.a.runKernel(r.bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({reciprocal_:function(t){const e={x:Object(s.a)(t,"x","reciprocal")};return a.a.runKernel(r.lc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({round_:function(t){const e={x:Object(s.a)(t,"x","round")};return a.a.runKernel(r.vc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(6),r=n(1),s=n(7);const o=async function(t,e){const n=Object(r.a)(t,"x","setdiff1d"),o=Object(r.a)(e,"y","setdiff1d");s.b(n.dtype===o.dtype,()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(o.dtype,").")),s.b(1===n.rank,()=>"x should be 1D tensor, but got x (".concat(n.shape,").")),s.b(1===o.rank,()=>"y should be 1D tensor, but got y (".concat(o.shape,")."));const i=await n.data(),c=await o.data(),u=new Set(c);let l=0;for(let a=0;a<i.length;a++)u.has(i[a])||l++;const d=new a.b([l],n.dtype),p=new a.b([l],"int32");for(let a=0,r=0;a<i.length;a++)u.has(i[a])||(d.values[r]=i[a],p.values[r]=a,r++);return[d.toTensor(),p.toTensor()]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({sign_:function(t){const e={x:Object(s.a)(t,"x","sign")};return a.a.runKernel(r.Bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({softmax_:function(t,e=-1){const n=Object(s.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const o={logits:n},i={dim:e};return a.a.runKernel(r.Fc,o,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({stridedSlice_:function(t,e,n,o,i=0,c=0,u=0,l=0,d=0){const p={x:Object(s.a)(t,"x","stridedSlice")},h={begin:e,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:d};return a.a.runKernel(r.Oc,p,h)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({tan_:function(t){const e={x:Object(s.a)(t,"x","tan")};return a.a.runKernel(r.Rc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(40),r=n(4),s=n(90);const o=Object(r.b)({truncatedNormal_:function(t,e=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new s.a(e,n,r,!0,o),c=Object(a.a)(t,r);for(let a=0;a<c.values.length;a++)c.values[a]=i.nextValue();return c.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"f",(function(){return y}));var a=n(19),r=n(1),s=n(7),o=n(68),i=n(39),c=n(47),u=n(82),l=n(48),d=n(85),p=n(4);const h=Object(p.b)({equalStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","equalStrict"),i=Object(r.a)(e,"b","equalStrict");return Object(s.e)(n.shape,i.shape,"Error in equalStrict: "),Object(o.a)(n,i)}}),f=Object(p.b)({greaterEqualStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","greaterEqualStrict"),o=Object(r.a)(e,"b","greaterEqualStrict");return Object(s.e)(n.shape,o.shape,"Error in greaterEqualStrict: "),Object(c.a)(n,o)}}),m=Object(p.b)({greaterStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","greaterStrict"),o=Object(r.a)(e,"b","greaterStrict");return Object(s.e)(n.shape,o.shape,"Error in greaterStrict: "),Object(i.a)(n,o)}}),b=Object(p.b)({lessEqualStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","lessEqualStrict"),o=Object(r.a)(e,"b","lessEqualStrict");return Object(s.e)(n.shape,o.shape,"Error in lessEqualStrict: "),Object(l.a)(n,o)}}),g=Object(p.b)({lessStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","lessStrict"),o=Object(r.a)(e,"b","lessStrict");return Object(s.e)(n.shape,o.shape,"Error in lessStrict: "),Object(u.a)(n,o)}}),y=Object(p.b)({notEqualStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","notEqualStrict"),o=Object(r.a)(e,"b","notEqualStrict");return Object(s.e)(n.shape,o.shape,"Error in notEqualStrict: "),Object(d.a)(n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g})),n.d(e,"c",(function(){return y})),n.d(e,"d",(function(){return x})),n.d(e,"e",(function(){return v})),n.d(e,"f",(function(){return w})),n.d(e,"g",(function(){return k})),n.d(e,"h",(function(){return O})),n.d(e,"i",(function(){return N}));var a=n(19),r=n(1),s=n(7),o=n(12),i=n(14),c=n(66),u=n(84),l=n(112),d=n(9),p=n(4),h=n(41),f=n(87),m=n(13);const b=Object(p.b)({addStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","addStrict"),i=Object(r.a)(e,"b","addStrict");return s.e(n.shape,i.shape,"Error in addStrict: "),Object(o.a)(n,i)}}),g=Object(p.b)({divStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","div"),o=Object(r.a)(e,"b","div");return s.e(n.shape,o.shape,"Error in divideStrict: "),Object(i.a)(n,o)}}),y=Object(p.b)({maximumStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","maximumStrict"),o=Object(r.a)(e,"b","maximumStrict");return s.e(n.shape,o.shape,"Error in maximumStrict: "),Object(c.a)(n,o)}}),x=Object(p.b)({minimumStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","minimumStrict"),o=Object(r.a)(e,"b","minimumStrict");return s.e(n.shape,o.shape,"Error in minimumStrict: "),Object(u.a)(n,o)}}),v=Object(p.b)({modStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","modStrict"),o=Object(r.a)(e,"b","modStrict");return s.e(n.shape,o.shape,"Error in modStrict: "),Object(l.a)(n,o)}}),w=Object(p.b)({mulStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","mul"),o=Object(r.a)(e,"b","mul");return s.e(n.shape,o.shape,"Error in multiplyStrict: "),Object(d.a)(n,o)}}),k=Object(p.b)({powStrict_:function(t,e){return Object(a.b)("strict variants of ops have been deprecated and will be removed in future"),s.e(t.shape,e.shape,"Error in powStrict: "),Object(h.a)(t,e)}}),O=Object(p.b)({squaredDifferenceStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","squaredDifferenceStrict"),o=Object(r.a)(e,"b","squaredDifferenceStrict");return s.e(n.shape,o.shape,"Error in squaredDifferenceStrict: "),Object(f.a)(n,o)}}),N=Object(p.b)({subStrict_:function(t,e){Object(a.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(r.a)(t,"a","subStrict"),o=Object(r.a)(e,"b","subStrict");return s.e(n.shape,o.shape,"Error in subStrict: "),Object(m.a)(n,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(5),r=n(3),s=n(1),o=n(4),i=n(99);const c=Object(o.b)({scatterND_:function(t,e,n){const o=Object(s.a)(t,"indices","scatterND","int32"),c=Object(s.a)(e,"updates","scatterND");i.validateInput(c,o,n);const u={indices:o,updates:c},l={shape:n};return a.a.runKernel(r.xc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3),s=n(1),o=n(4);const i=Object(o.b)({gatherND_:function(t,e){const n=Object(s.a)(e,"indices","gatherND","int32"),o={params:Object(s.a)(t,"x","gatherND"),indices:n};return a.a.runKernel(r.lb,o)}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return r}));const a="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof t?t:t=>t();function r(){return new Promise(t=>a(()=>t()))}}).call(this,n(252).setImmediate)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n(5),r=n(3);var s=n(1),o=n(4);const i=Object(o.b)({sparseToDense_:function(t,e,n,o=0){const i=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),c=Object(s.a)(e,"sparseValues","sparseToDense"),u=Object(s.a)(o,"defaultValue","sparseToDense",c.dtype);!function(t,e,n,a){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const r=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(r,"]"));if(e.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,c,n,u);const l={sparseIndices:i,sparseValues:c,defaultValue:u},d={outputShape:n};return a.a.runKernel(r.Ic,l,d)}})},function(t,e,n){"use strict";!function t(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}}(),t.exports=n(234)},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return a}));const a=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return o}));var a=n(0),r=n(38),s=n(229);class o extends r.a{decodeUTF8(){return new i(this)}}class i extends s.a{constructor(t){super(),this.upstream=t,this.impl=new c(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class c extends r.b{constructor(t){if(super(),this.upstream=t,Object(a.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(254);this.decoder=new t("utf8")}}summary(){return"".concat(this.upstream.summary()," -> Utf8")}async pump(){const e=await this.upstream.next();let n,r;return!e.done&&(n=e.value,r=Object(a.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(r),!0)}}}).call(this,n(169).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var a=n(38);class r extends a.a{split(t){return new s(this,t)}}class s extends r{constructor(t,e){super(),this.upstream=t,this.impl=new o(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class o extends a.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return"".concat(this.upstream.summary()," -> Split('").concat(this.separator,"')")}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},function(t,e,n){var a;a=function(t){return function(t){var e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(a,r,function(e){return t[e]}.bind(null,r));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(t,e,n){"use strict";n.r(e);var a=n("react"),r=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function a(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),s=function(){return(s=Object.assign||function(t){for(var e,n=1,a=arguments.length;n<a;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},o=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(t);r<a.length;r++)e.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(t,a[r])&&(n[a[r]]=t[a[r]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return e?new Promise((function(n,a){e.call(navigator,t,n,a)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(t){function e(e){var n=t.call(this,e)||this;return n.canvas=null,n.ctx=null,n.state={hasUserMedia:!1},n}return r(e,t),e.prototype.componentDidMount=function(){var t=this.state,e=this.props;i()?t.hasUserMedia||this.requestUserMedia():e.onUserMediaError("getUserMedia not supported")},e.prototype.componentDidUpdate=function(t){var e=this.props;if(i()){var n=JSON.stringify(t.audioConstraints)!==JSON.stringify(e.audioConstraints),a=JSON.stringify(t.videoConstraints)!==JSON.stringify(e.videoConstraints),r=t.minScreenshotWidth!==e.minScreenshotWidth,s=t.minScreenshotHeight!==e.minScreenshotHeight;(a||r||s)&&(this.canvas=null,this.ctx=null),(n||a)&&(this.stopAndCleanup(),this.requestUserMedia())}else e.onUserMediaError("getUserMedia not supported")},e.prototype.componentWillUnmount=function(){this.stopAndCleanup()},e.prototype.stopAndCleanup=function(){var t=this.state;t.hasUserMedia&&(this.stream&&(this.stream.getVideoTracks&&this.stream.getAudioTracks?(this.stream.getVideoTracks().map((function(t){return t.stop()})),this.stream.getAudioTracks().map((function(t){return t.stop()}))):this.stream.stop()),t.src&&window.URL.revokeObjectURL(t.src))},e.prototype.getScreenshot=function(t){var e=this.state,n=this.props;if(!e.hasUserMedia)return null;var a=this.getCanvas(t);return a&&a.toDataURL(n.screenshotFormat,n.screenshotQuality)},e.prototype.getCanvas=function(t){var e=this.state,n=this.props;if(!this.video)return null;if(!e.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var a=this.video.videoWidth,r=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=a/r;r=(a=n.minScreenshotWidth||this.video.clientWidth)/s,n.minScreenshotHeight&&r<n.minScreenshotHeight&&(a=(r=n.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===t||void 0===t?void 0:t.width)||a,this.canvas.height=(null===t||void 0===t?void 0:t.height)||r,this.ctx=this.canvas.getContext("2d")}var o=this.ctx,i=this.canvas;return o&&i&&(n.mirrored&&(o.translate(i.width,0),o.scale(-1,1)),o.imageSmoothingEnabled=n.imageSmoothing,o.drawImage(this.video,0,0,i.width,i.height),n.mirrored&&(o.scale(-1,1),o.translate(-i.width,0))),i},e.prototype.requestUserMedia=function(){var t=this,e=this.props,n=function(n,a){var r={video:"undefined"===typeof a||a};e.audio&&(r.audio="undefined"===typeof n||n),navigator.mediaDevices.getUserMedia(r).then((function(e){t.handleUserMedia(null,e)})).catch((function(e){t.handleUserMedia(e)}))};if("mediaDevices"in navigator)n(e.audioConstraints,e.videoConstraints);else{var a=function(t){return{optional:[{sourceId:t}]}},r=function(t){var e=t.deviceId;return"string"===typeof e?e:Array.isArray(e)&&e.length>0?e[0]:"object"===typeof e&&e.ideal?e.ideal:null};MediaStreamTrack.getSources((function(t){var s=null,o=null;t.forEach((function(t){"audio"===t.kind?s=t.id:"video"===t.kind&&(o=t.id)}));var i=r(e.audioConstraints);i&&(s=i);var c=r(e.videoConstraints);c&&(o=c),n(a(s),a(o))}))}},e.prototype.handleUserMedia=function(t,e){var n=this.props;if(t||!e)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(t);this.stream=e;try{this.video&&(this.video.srcObject=e),this.setState({hasUserMedia:!0})}catch(a){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(e)})}n.onUserMedia(e)},e.prototype.render=function(){var t=this,e=this.state,n=this.props,r=n.audio,i=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),c=n.style,u=void 0===c?{}:c,l=o(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),d=i?s(s({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u;return a.createElement("video",s({autoPlay:!0,src:e.src,muted:r,playsInline:!0,ref:function(e){t.video=e},style:d},l))},e.defaultProps={audio:!0,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},e}(a.Component);e.default=c},react:function(e,n){e.exports=t}}).default},t.exports=a(n(43))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var a=n(119),r=n(0);const s={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};async function o(t={}){if(null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const e=t.base||"lite_mobilenet_v2",n=t.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(e))throw new Error("ObjectDetection constructed with invalid base model "+"".concat(e,". Valid names are 'mobilenet_v1',")+" 'mobilenet_v2' and 'lite_mobilenet_v2'.");const a=new i(e,n);return await a.load(),a}class i{constructor(t,e){this.modelPath=e||"".concat("https://storage.googleapis.com/tfjs-models/savedmodel/").concat(this.getPrefix(t),"/model.json")}getPrefix(t){return"lite_mobilenet_v2"===t?"ssd".concat(t):"ssd_".concat(t)}async load(){this.model=await a.a(this.modelPath);const t=r.zeros([1,300,300,3],"int32"),e=await this.model.executeAsync(t);await Promise.all(e.map(t=>t.data())),e.map(t=>t.dispose()),t.dispose()}async infer(t,e,n){const a=r.tidy(()=>(t instanceof r.Tensor||(t=r.browser.fromPixels(t)),t.expandDims(0))),s=a.shape[1],o=a.shape[2],i=await this.model.executeAsync(a),c=i[0].dataSync(),u=i[1].dataSync();a.dispose(),r.dispose(i);const[l,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),p=r.getBackend();r.setBackend("cpu");const h=r.tidy(()=>{const t=r.tensor2d(u,[i[1].shape[1],i[1].shape[3]]);return r.image.nonMaxSuppression(t,l,e,n,n)}),f=h.dataSync();return h.dispose(),r.setBackend(p),this.buildDetectedObjects(o,s,u,l,f,d)}buildDetectedObjects(t,e,n,a,r,o){const i=r.length,c=[];for(let u=0;u<i;u++){const i=[];for(let t=0;t<4;t++)i[t]=n[4*r[u]+t];const l=i[0]*e,d=i[1]*t,p=i[2]*e,h=i[3]*t;i[0]=d,i[1]=l,i[2]=h-d,i[3]=p-l,c.push({bbox:i,class:s[o[r[u]]+1].displayName,score:a[r[u]]})}return c}calculateMaxScores(t,e,n){const a=[],r=[];for(let s=0;s<e;s++){let e=Number.MIN_VALUE,o=-1;for(let a=0;a<n;a++)t[s*n+a]>e&&(e=t[s*n+a],o=a);a[s]=e,r[s]=o}return[a,r]}async detect(t,e=20,n=.5){return this.infer(t,e,n)}dispose(){null!=this.model&&this.model.dispose()}}},,function(t,e,n){"use strict";var a=n(170),r="function"===typeof Symbol&&Symbol.for,s=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,c=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,l=r?Symbol.for("react.provider"):60109,d=r?Symbol.for("react.context"):60110,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,f=r?Symbol.for("react.memo"):60115,m=r?Symbol.for("react.lazy"):60116,b="function"===typeof Symbol&&Symbol.iterator;function g(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function v(t,e,n){this.props=t,this.context=e,this.refs=x,this.updater=n||y}function w(){}function k(t,e,n){this.props=t,this.context=e,this.refs=x,this.updater=n||y}v.prototype.isReactComponent={},v.prototype.setState=function(t,e){if("object"!==typeof t&&"function"!==typeof t&&null!=t)throw Error(g(85));this.updater.enqueueSetState(this,t,e,"setState")},v.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},w.prototype=v.prototype;var O=k.prototype=new w;O.constructor=k,a(O,v.prototype),O.isPureReactComponent=!0;var N={current:null},I=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function T(t,e,n){var a,r={},o=null,i=null;if(null!=e)for(a in void 0!==e.ref&&(i=e.ref),void 0!==e.key&&(o=""+e.key),e)I.call(e,a)&&!S.hasOwnProperty(a)&&(r[a]=e[a]);var c=arguments.length-2;if(1===c)r.children=n;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];r.children=u}if(t&&t.defaultProps)for(a in c=t.defaultProps)void 0===r[a]&&(r[a]=c[a]);return{$$typeof:s,type:t,key:o,ref:i,props:r,_owner:N.current}}function j(t){return"object"===typeof t&&null!==t&&t.$$typeof===s}var C=/\/+/g,E=[];function A(t,e,n,a){if(E.length){var r=E.pop();return r.result=t,r.keyPrefix=e,r.func=n,r.context=a,r.count=0,r}return{result:t,keyPrefix:e,func:n,context:a,count:0}}function _(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>E.length&&E.push(t)}function R(t,e,n){return null==t?0:function t(e,n,a,r){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case s:case o:c=!0}}if(c)return a(r,e,""===n?"."+D(e,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var l=n+D(i=e[u],u);c+=t(i,l,a,r)}else if(null===e||"object"!==typeof e?l=null:l="function"===typeof(l=b&&e[b]||e["@@iterator"])?l:null,"function"===typeof l)for(e=l.call(e),u=0;!(i=e.next()).done;)c+=t(i=i.value,l=n+D(i,u++),a,r);else if("object"===i)throw a=""+e,Error(g(31,"[object Object]"===a?"object with keys {"+Object.keys(e).join(", ")+"}":a,""));return c}(t,"",e,n)}function D(t,e){return"object"===typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function F(t,e){t.func.call(t.context,e,t.count++)}function M(t,e,n){var a=t.result,r=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?z(t,a,n,(function(t){return t})):null!=t&&(j(t)&&(t=function(t,e){return{$$typeof:s,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,r+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(C,"$&/")+"/")+n)),a.push(t))}function z(t,e,n,a,r){var s="";null!=n&&(s=(""+n).replace(C,"$&/")+"/"),R(t,M,e=A(e,s,a,r)),_(e)}var L={current:null};function P(){var t=L.current;if(null===t)throw Error(g(321));return t}var B={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:N,IsSomeRendererActing:{current:!1},assign:a};e.Children={map:function(t,e,n){if(null==t)return t;var a=[];return z(t,a,null,e,n),a},forEach:function(t,e,n){if(null==t)return t;R(t,F,e=A(null,null,e,n)),_(e)},count:function(t){return R(t,(function(){return null}),null)},toArray:function(t){var e=[];return z(t,e,null,(function(t){return t})),e},only:function(t){if(!j(t))throw Error(g(143));return t}},e.Component=v,e.Fragment=i,e.Profiler=u,e.PureComponent=k,e.StrictMode=c,e.Suspense=h,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,e.cloneElement=function(t,e,n){if(null===t||void 0===t)throw Error(g(267,t));var r=a({},t.props),o=t.key,i=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(i=e.ref,c=N.current),void 0!==e.key&&(o=""+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(l in e)I.call(e,l)&&!S.hasOwnProperty(l)&&(r[l]=void 0===e[l]&&void 0!==u?u[l]:e[l])}var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){u=Array(l);for(var d=0;d<l;d++)u[d]=arguments[d+2];r.children=u}return{$$typeof:s,type:t.type,key:o,ref:i,props:r,_owner:c}},e.createContext=function(t,e){return void 0===e&&(e=null),(t={$$typeof:d,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:t},t.Consumer=t},e.createElement=T,e.createFactory=function(t){var e=T.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:p,render:t}},e.isValidElement=j,e.lazy=function(t){return{$$typeof:m,_ctor:t,_status:-1,_result:null}},e.memo=function(t,e){return{$$typeof:f,type:t,compare:void 0===e?null:e}},e.useCallback=function(t,e){return P().useCallback(t,e)},e.useContext=function(t,e){return P().useContext(t,e)},e.useDebugValue=function(){},e.useEffect=function(t,e){return P().useEffect(t,e)},e.useImperativeHandle=function(t,e,n){return P().useImperativeHandle(t,e,n)},e.useLayoutEffect=function(t,e){return P().useLayoutEffect(t,e)},e.useMemo=function(t,e){return P().useMemo(t,e)},e.useReducer=function(t,e,n){return P().useReducer(t,e,n)},e.useRef=function(t){return P().useRef(t)},e.useState=function(t){return P().useState(t)},e.version="16.13.1"},function(t,e,n){"use strict";var a=n(43),r=n(170),s=n(235);function o(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!a)throw Error(o(227));function i(t,e,n,a,r,s,o,i,c){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(l){this.onError(l)}}var c=!1,u=null,l=!1,d=null,p={onError:function(t){c=!0,u=t}};function h(t,e,n,a,r,s,o,l,d){c=!1,u=null,i.apply(p,arguments)}var f=null,m=null,b=null;function g(t,e,n){var a=t.type||"unknown-event";t.currentTarget=b(n),function(t,e,n,a,r,s,i,p,f){if(h.apply(this,arguments),c){if(!c)throw Error(o(198));var m=u;c=!1,u=null,l||(l=!0,d=m)}}(a,e,void 0,t),t.currentTarget=null}var y=null,x={};function v(){if(y)for(var t in x){var e=x[t],n=y.indexOf(t);if(!(-1<n))throw Error(o(96,t));if(!k[n]){if(!e.extractEvents)throw Error(o(97,t));for(var a in k[n]=e,n=e.eventTypes){var r=void 0,s=n[a],i=e,c=a;if(O.hasOwnProperty(c))throw Error(o(99,c));O[c]=s;var u=s.phasedRegistrationNames;if(u){for(r in u)u.hasOwnProperty(r)&&w(u[r],i,c);r=!0}else s.registrationName?(w(s.registrationName,i,c),r=!0):r=!1;if(!r)throw Error(o(98,a,t))}}}}function w(t,e,n){if(N[t])throw Error(o(100,t));N[t]=e,I[t]=e.eventTypes[n].dependencies}var k=[],O={},N={},I={};function S(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var a=t[e];if(!x.hasOwnProperty(e)||x[e]!==a){if(x[e])throw Error(o(102,e));x[e]=a,n=!0}}n&&v()}var T=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),j=null,C=null,E=null;function A(t){if(t=m(t)){if("function"!==typeof j)throw Error(o(280));var e=t.stateNode;e&&(e=f(e),j(t.stateNode,t.type,e))}}function _(t){C?E?E.push(t):E=[t]:C=t}function R(){if(C){var t=C,e=E;if(E=C=null,A(t),e)for(t=0;t<e.length;t++)A(e[t])}}function D(t,e){return t(e)}function F(t,e,n,a,r){return t(e,n,a,r)}function M(){}var z=D,L=!1,P=!1;function B(){null===C&&null===E||(M(),R())}function W(t,e,n){if(P)return t(e,n);P=!0;try{return z(t,e,n)}finally{P=!1,B()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,U=Object.prototype.hasOwnProperty,G={},H={};function q(t,e,n,a,r,s){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=s}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){K[t]=new q(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];K[e]=new q(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){K[t]=new q(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){K[t]=new q(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){K[t]=new q(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){K[t]=new q(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){K[t]=new q(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){K[t]=new q(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){K[t]=new q(t,5,!1,t.toLowerCase(),null,!1)}));var X=/[\-:]([a-z])/g;function Y(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){K[t]=new q(t,1,!1,t.toLowerCase(),null,!1)})),K.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){K[t]=new q(t,1,!1,t.toLowerCase(),null,!0)}));var Q=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(t,e,n,a){var r=K.hasOwnProperty(e)?K[e]:null;(null!==r?0===r.type:!a&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,a){if(null===e||"undefined"===typeof e||function(t,e,n,a){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,r,a)&&(n=null),a||null===r?function(t){return!!U.call(H,t)||!U.call(G,t)&&(V.test(t)?H[t]=!0:(G[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=null===n?3!==r.type&&"":n:(e=r.attributeName,a=r.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?t.setAttributeNS(a,e,n):t.setAttribute(e,n))))}Q.hasOwnProperty("ReactCurrentDispatcher")||(Q.ReactCurrentDispatcher={current:null}),Q.hasOwnProperty("ReactCurrentBatchConfig")||(Q.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,$="function"===typeof Symbol&&Symbol.for,tt=$?Symbol.for("react.element"):60103,et=$?Symbol.for("react.portal"):60106,nt=$?Symbol.for("react.fragment"):60107,at=$?Symbol.for("react.strict_mode"):60108,rt=$?Symbol.for("react.profiler"):60114,st=$?Symbol.for("react.provider"):60109,ot=$?Symbol.for("react.context"):60110,it=$?Symbol.for("react.concurrent_mode"):60111,ct=$?Symbol.for("react.forward_ref"):60112,ut=$?Symbol.for("react.suspense"):60113,lt=$?Symbol.for("react.suspense_list"):60120,dt=$?Symbol.for("react.memo"):60115,pt=$?Symbol.for("react.lazy"):60116,ht=$?Symbol.for("react.block"):60121,ft="function"===typeof Symbol&&Symbol.iterator;function mt(t){return null===t||"object"!==typeof t?null:"function"===typeof(t=ft&&t[ft]||t["@@iterator"])?t:null}function bt(t){if(null==t)return null;if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t;switch(t){case nt:return"Fragment";case et:return"Portal";case rt:return"Profiler";case at:return"StrictMode";case ut:return"Suspense";case lt:return"SuspenseList"}if("object"===typeof t)switch(t.$$typeof){case ot:return"Context.Consumer";case st:return"Context.Provider";case ct:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case dt:return bt(t.type);case ht:return bt(t.render);case pt:if(t=1===t._status?t._result:null)return bt(t)}return null}function gt(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var a=t._debugOwner,r=t._debugSource,s=bt(t.type);n=null,a&&(n=bt(a.type)),a=s,s="",r?s=" (at "+r.fileName.replace(J,"")+":"+r.lineNumber+")":n&&(s=" (created by "+n+")"),n="\n    in "+(a||"Unknown")+s}e+=n,t=t.return}while(t);return e}function yt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function xt(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function vt(t){t._valueTracker||(t._valueTracker=function(t){var e=xt(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),a=""+t[e];if(!t.hasOwnProperty(e)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(t){a=""+t,s.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(t){a=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function wt(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),a="";return t&&(a=xt(t)?t.checked?"true":"false":t.value),(t=a)!==n&&(e.setValue(t),!0)}function kt(t,e){var n=e.checked;return r({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Ot(t,e){var n=null==e.defaultValue?"":e.defaultValue,a=null!=e.checked?e.checked:e.defaultChecked;n=yt(null!=e.value?e.value:n),t._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Nt(t,e){null!=(e=e.checked)&&Z(t,"checked",e,!1)}function It(t,e){Nt(t,e);var n=yt(e.value),a=e.type;if(null!=n)"number"===a?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===a||"reset"===a)return void t.removeAttribute("value");e.hasOwnProperty("value")?Tt(t,e.type,n):e.hasOwnProperty("defaultValue")&&Tt(t,e.type,yt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function St(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var a=e.type;if(!("submit"!==a&&"reset"!==a||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function Tt(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function jt(t,e){return t=r({children:void 0},e),(e=function(t){var e="";return a.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function Ct(t,e,n,a){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&a&&(t[n].defaultSelected=!0)}else{for(n=""+yt(n),e=null,r=0;r<t.length;r++){if(t[r].value===n)return t[r].selected=!0,void(a&&(t[r].defaultSelected=!0));null!==e||t[r].disabled||(e=t[r])}null!==e&&(e.selected=!0)}}function Et(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(o(91));return r({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function At(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}e=n}null==e&&(e=""),n=e}t._wrapperState={initialValue:yt(n)}}function _t(t,e){var n=yt(e.value),a=yt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=a&&(t.defaultValue=""+a)}function Rt(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}var Dt="http://www.w3.org/1999/xhtml",Ft="http://www.w3.org/2000/svg";function Mt(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function zt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Mt(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var Lt,Pt=function(t){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,a,r){MSApp.execUnsafeLocalFunction((function(){return t(e,n)}))}:t}((function(t,e){if(t.namespaceURI!==Ft||"innerHTML"in t)t.innerHTML=e;else{for((Lt=Lt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Lt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}}));function Bt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function Wt(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Vt={animationend:Wt("Animation","AnimationEnd"),animationiteration:Wt("Animation","AnimationIteration"),animationstart:Wt("Animation","AnimationStart"),transitionend:Wt("Transition","TransitionEnd")},Ut={},Gt={};function Ht(t){if(Ut[t])return Ut[t];if(!Vt[t])return t;var e,n=Vt[t];for(e in n)if(n.hasOwnProperty(e)&&e in Gt)return Ut[t]=n[e];return t}T&&(Gt=document.createElement("div").style,"AnimationEvent"in window||(delete Vt.animationend.animation,delete Vt.animationiteration.animation,delete Vt.animationstart.animation),"TransitionEvent"in window||delete Vt.transitionend.transition);var qt=Ht("animationend"),Kt=Ht("animationiteration"),Xt=Ht("animationstart"),Yt=Ht("transitionend"),Qt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Zt=new("function"===typeof WeakMap?WeakMap:Map);function Jt(t){var e=Zt.get(t);return void 0===e&&(e=new Map,Zt.set(t,e)),e}function $t(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!==(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function te(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function ee(t){if($t(t)!==t)throw Error(o(188))}function ne(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=$t(t)))throw Error(o(188));return e!==t?null:t}for(var n=t,a=e;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return ee(r),t;if(s===a)return ee(r),e;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=s;break}if(c===a){i=!0,a=r,n=s;break}c=c.sibling}if(!i){for(c=s.child;c;){if(c===n){i=!0,n=s,a=r;break}if(c===a){i=!0,a=s,n=r;break}c=c.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function ae(t,e){if(null==e)throw Error(o(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function re(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var se=null;function oe(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var a=0;a<e.length&&!t.isPropagationStopped();a++)g(t,e[a],n[a]);else e&&g(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function ie(t){if(null!==t&&(se=ae(se,t)),t=se,se=null,t){if(re(t,oe),se)throw Error(o(95));if(l)throw t=d,l=!1,d=null,t}}function ce(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function ue(t){if(!T)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"===typeof e[t]),e}var le=[];function de(t){t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,10>le.length&&le.push(t)}function pe(t,e,n,a){if(le.length){var r=le.pop();return r.topLevelType=t,r.eventSystemFlags=a,r.nativeEvent=e,r.targetInst=n,r}return{topLevelType:t,eventSystemFlags:a,nativeEvent:e,targetInst:n,ancestors:[]}}function he(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var a=n;if(3===a.tag)a=a.stateNode.containerInfo;else{for(;a.return;)a=a.return;a=3!==a.tag?null:a.stateNode.containerInfo}if(!a)break;5!==(e=n.tag)&&6!==e||t.ancestors.push(n),n=Tn(a)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var r=ce(t.nativeEvent);a=t.topLevelType;var s=t.nativeEvent,o=t.eventSystemFlags;0===n&&(o|=64);for(var i=null,c=0;c<k.length;c++){var u=k[c];u&&(u=u.extractEvents(a,e,s,r,o))&&(i=ae(i,u))}ie(i)}}function fe(t,e,n){if(!n.has(t)){switch(t){case"scroll":Xe(e,"scroll",!0);break;case"focus":case"blur":Xe(e,"focus",!0),Xe(e,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ue(t)&&Xe(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Qt.indexOf(t)&&Ke(t,e)}n.set(t,null)}}var me,be,ge,ye=!1,xe=[],ve=null,we=null,ke=null,Oe=new Map,Ne=new Map,Ie=[],Se="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Te="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function je(t,e,n,a,r){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:r,container:a}}function Ce(t,e){switch(t){case"focus":case"blur":ve=null;break;case"dragenter":case"dragleave":we=null;break;case"mouseover":case"mouseout":ke=null;break;case"pointerover":case"pointerout":Oe.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ne.delete(e.pointerId)}}function Ee(t,e,n,a,r,s){return null===t||t.nativeEvent!==s?(t=je(e,n,a,r,s),null!==e&&(null!==(e=jn(e))&&be(e)),t):(t.eventSystemFlags|=a,t)}function Ae(t){var e=Tn(t.target);if(null!==e){var n=$t(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=te(n)))return t.blockedOn=e,void s.unstable_runWithPriority(t.priority,(function(){ge(n)}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function _e(t){if(null!==t.blockedOn)return!1;var e=Je(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);if(null!==e){var n=jn(e);return null!==n&&be(n),t.blockedOn=e,!1}return!0}function Re(t,e,n){_e(t)&&n.delete(e)}function De(){for(ye=!1;0<xe.length;){var t=xe[0];if(null!==t.blockedOn){null!==(t=jn(t.blockedOn))&&me(t);break}var e=Je(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);null!==e?t.blockedOn=e:xe.shift()}null!==ve&&_e(ve)&&(ve=null),null!==we&&_e(we)&&(we=null),null!==ke&&_e(ke)&&(ke=null),Oe.forEach(Re),Ne.forEach(Re)}function Fe(t,e){t.blockedOn===e&&(t.blockedOn=null,ye||(ye=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,De)))}function Me(t){function e(e){return Fe(e,t)}if(0<xe.length){Fe(xe[0],t);for(var n=1;n<xe.length;n++){var a=xe[n];a.blockedOn===t&&(a.blockedOn=null)}}for(null!==ve&&Fe(ve,t),null!==we&&Fe(we,t),null!==ke&&Fe(ke,t),Oe.forEach(e),Ne.forEach(e),n=0;n<Ie.length;n++)(a=Ie[n]).blockedOn===t&&(a.blockedOn=null);for(;0<Ie.length&&null===(n=Ie[0]).blockedOn;)Ae(n),null===n.blockedOn&&Ie.shift()}var ze={},Le=new Map,Pe=new Map,Be=["abort","abort",qt,"animationEnd",Kt,"animationIteration",Xt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Yt,"transitionEnd","waiting","waiting"];function We(t,e){for(var n=0;n<t.length;n+=2){var a=t[n],r=t[n+1],s="on"+(r[0].toUpperCase()+r.slice(1));s={phasedRegistrationNames:{bubbled:s,captured:s+"Capture"},dependencies:[a],eventPriority:e},Pe.set(a,e),Le.set(a,s),ze[r]=s}}We("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),We("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),We(Be,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ue=0;Ue<Ve.length;Ue++)Pe.set(Ve[Ue],0);var Ge=s.unstable_UserBlockingPriority,He=s.unstable_runWithPriority,qe=!0;function Ke(t,e){Xe(e,t,!1)}function Xe(t,e,n){var a=Pe.get(e);switch(void 0===a?2:a){case 0:a=Ye.bind(null,e,1,t);break;case 1:a=Qe.bind(null,e,1,t);break;default:a=Ze.bind(null,e,1,t)}n?t.addEventListener(e,a,!0):t.addEventListener(e,a,!1)}function Ye(t,e,n,a){L||M();var r=Ze,s=L;L=!0;try{F(r,t,e,n,a)}finally{(L=s)||B()}}function Qe(t,e,n,a){He(Ge,Ze.bind(null,t,e,n,a))}function Ze(t,e,n,a){if(qe)if(0<xe.length&&-1<Se.indexOf(t))t=je(null,t,e,n,a),xe.push(t);else{var r=Je(t,e,n,a);if(null===r)Ce(t,a);else if(-1<Se.indexOf(t))t=je(r,t,e,n,a),xe.push(t);else if(!function(t,e,n,a,r){switch(e){case"focus":return ve=Ee(ve,t,e,n,a,r),!0;case"dragenter":return we=Ee(we,t,e,n,a,r),!0;case"mouseover":return ke=Ee(ke,t,e,n,a,r),!0;case"pointerover":var s=r.pointerId;return Oe.set(s,Ee(Oe.get(s)||null,t,e,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ne.set(s,Ee(Ne.get(s)||null,t,e,n,a,r)),!0}return!1}(r,t,e,n,a)){Ce(t,a),t=pe(t,a,null,e);try{W(he,t)}finally{de(t)}}}}function Je(t,e,n,a){if(null!==(n=Tn(n=ce(a)))){var r=$t(n);if(null===r)n=null;else{var s=r.tag;if(13===s){if(null!==(n=te(r)))return n;n=null}else if(3===s){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;n=null}else r!==n&&(n=null)}}t=pe(t,a,n,e);try{W(he,t)}finally{de(t)}return null}var $e={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tn=["Webkit","ms","Moz","O"];function en(t,e,n){return null==e||"boolean"===typeof e||""===e?"":n||"number"!==typeof e||0===e||$e.hasOwnProperty(t)&&$e[t]?(""+e).trim():e+"px"}function nn(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=en(n,e[n],a);"float"===n&&(n="cssFloat"),a?t.setProperty(n,r):t[n]=r}}Object.keys($e).forEach((function(t){tn.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),$e[e]=$e[t]}))}));var an=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(t,e){if(e){if(an[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(o(137,t,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(o(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(o(62,""))}}function sn(t,e){if(-1===t.indexOf("-"))return"string"===typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var on=Dt;function cn(t,e){var n=Jt(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=I[e];for(var a=0;a<e.length;a++)fe(e[a],t,n)}function un(){}function ln(t){if("undefined"===typeof(t=t||("undefined"!==typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function dn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function pn(t,e){var n,a=dn(t);for(t=0;a;){if(3===a.nodeType){if(n=t+a.textContent.length,t<=e&&n>=e)return{node:a,offset:e-t};t=n}t:{for(;a;){if(a.nextSibling){a=a.nextSibling;break t}a=a.parentNode}a=void 0}a=dn(a)}}function hn(){for(var t=window,e=ln();e instanceof t.HTMLIFrameElement;){try{var n="string"===typeof e.contentWindow.location.href}catch(a){n=!1}if(!n)break;e=ln((t=e.contentWindow).document)}return e}function fn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var mn=null,bn=null;function gn(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function yn(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var xn="function"===typeof setTimeout?setTimeout:void 0,vn="function"===typeof clearTimeout?clearTimeout:void 0;function wn(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function kn(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var On=Math.random().toString(36).slice(2),Nn="__reactInternalInstance$"+On,In="__reactEventHandlers$"+On,Sn="__reactContainere$"+On;function Tn(t){var e=t[Nn];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Sn]||n[Nn]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=kn(t);null!==t;){if(n=t[Nn])return n;t=kn(t)}return e}n=(t=n).parentNode}return null}function jn(t){return!(t=t[Nn]||t[Sn])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function Cn(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(o(33))}function En(t){return t[In]||null}function An(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function _n(t,e){var n=t.stateNode;if(!n)return null;var a=f(n);if(!a)return null;n=a[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!a;break t;default:t=!1}if(t)return null;if(n&&"function"!==typeof n)throw Error(o(231,e,typeof n));return n}function Rn(t,e,n){(e=_n(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=ae(n._dispatchListeners,e),n._dispatchInstances=ae(n._dispatchInstances,t))}function Dn(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=An(e);for(e=n.length;0<e--;)Rn(n[e],"captured",t);for(e=0;e<n.length;e++)Rn(n[e],"bubbled",t)}}function Fn(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=_n(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=ae(n._dispatchListeners,e),n._dispatchInstances=ae(n._dispatchInstances,t))}function Mn(t){t&&t.dispatchConfig.registrationName&&Fn(t._targetInst,null,t)}function zn(t){re(t,Dn)}var Ln=null,Pn=null,Bn=null;function Wn(){if(Bn)return Bn;var t,e,n=Pn,a=n.length,r="value"in Ln?Ln.value:Ln.textContent,s=r.length;for(t=0;t<a&&n[t]===r[t];t++);var o=a-t;for(e=1;e<=o&&n[a-e]===r[s-e];e++);return Bn=r.slice(t,1<e?1-e:void 0)}function Vn(){return!0}function Un(){return!1}function Gn(t,e,n,a){for(var r in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(r)&&((e=t[r])?this[r]=e(n):"target"===r?this.target=a:this[r]=n[r]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:Un,this.isPropagationStopped=Un,this}function Hn(t,e,n,a){if(this.eventPool.length){var r=this.eventPool.pop();return this.call(r,t,e,n,a),r}return new this(t,e,n,a)}function qn(t){if(!(t instanceof this))throw Error(o(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function Kn(t){t.eventPool=[],t.getPooled=Hn,t.release=qn}r(Gn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!==typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!==typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:Un,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Un,this._dispatchInstances=this._dispatchListeners=null}}),Gn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Gn.extend=function(t){function e(){}function n(){return a.apply(this,arguments)}var a=this;e.prototype=a.prototype;var s=new e;return r(s,n.prototype),n.prototype=s,n.prototype.constructor=n,n.Interface=r({},a.Interface,t),n.extend=a.extend,Kn(n),n},Kn(Gn);var Xn=Gn.extend({data:null}),Yn=Gn.extend({data:null}),Qn=[9,13,27,32],Zn=T&&"CompositionEvent"in window,Jn=null;T&&"documentMode"in document&&(Jn=document.documentMode);var $n=T&&"TextEvent"in window&&!Jn,ta=T&&(!Zn||Jn&&8<Jn&&11>=Jn),ea=String.fromCharCode(32),na={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},aa=!1;function ra(t,e){switch(t){case"keyup":return-1!==Qn.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function sa(t){return"object"===typeof(t=t.detail)&&"data"in t?t.data:null}var oa=!1;var ia={eventTypes:na,extractEvents:function(t,e,n,a){var r;if(Zn)t:{switch(t){case"compositionstart":var s=na.compositionStart;break t;case"compositionend":s=na.compositionEnd;break t;case"compositionupdate":s=na.compositionUpdate;break t}s=void 0}else oa?ra(t,n)&&(s=na.compositionEnd):"keydown"===t&&229===n.keyCode&&(s=na.compositionStart);return s?(ta&&"ko"!==n.locale&&(oa||s!==na.compositionStart?s===na.compositionEnd&&oa&&(r=Wn()):(Pn="value"in(Ln=a)?Ln.value:Ln.textContent,oa=!0)),s=Xn.getPooled(s,e,n,a),r?s.data=r:null!==(r=sa(n))&&(s.data=r),zn(s),r=s):r=null,(t=$n?function(t,e){switch(t){case"compositionend":return sa(e);case"keypress":return 32!==e.which?null:(aa=!0,ea);case"textInput":return(t=e.data)===ea&&aa?null:t;default:return null}}(t,n):function(t,e){if(oa)return"compositionend"===t||!Zn&&ra(t,e)?(t=Wn(),Bn=Pn=Ln=null,oa=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return ta&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=Yn.getPooled(na.beforeInput,e,n,a)).data=t,zn(e)):e=null,null===r?e:null===e?r:[r,e]}},ca={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ua(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!ca[t.type]:"textarea"===e}var la={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function da(t,e,n){return(t=Gn.getPooled(la.change,t,e,n)).type="change",_(n),zn(t),t}var pa=null,ha=null;function fa(t){ie(t)}function ma(t){if(wt(Cn(t)))return t}function ba(t,e){if("change"===t)return e}var ga=!1;function ya(){pa&&(pa.detachEvent("onpropertychange",xa),ha=pa=null)}function xa(t){if("value"===t.propertyName&&ma(ha))if(t=da(ha,t,ce(t)),L)ie(t);else{L=!0;try{D(fa,t)}finally{L=!1,B()}}}function va(t,e,n){"focus"===t?(ya(),ha=n,(pa=e).attachEvent("onpropertychange",xa)):"blur"===t&&ya()}function wa(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return ma(ha)}function ka(t,e){if("click"===t)return ma(e)}function Oa(t,e){if("input"===t||"change"===t)return ma(e)}T&&(ga=ue("input")&&(!document.documentMode||9<document.documentMode));var Na={eventTypes:la,_isInputEventSupported:ga,extractEvents:function(t,e,n,a){var r=e?Cn(e):window,s=r.nodeName&&r.nodeName.toLowerCase();if("select"===s||"input"===s&&"file"===r.type)var o=ba;else if(ua(r))if(ga)o=Oa;else{o=wa;var i=va}else(s=r.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===r.type||"radio"===r.type)&&(o=ka);if(o&&(o=o(t,e)))return da(o,n,a);i&&i(t,r,e),"blur"===t&&(t=r._wrapperState)&&t.controlled&&"number"===r.type&&Tt(r,"number",r.value)}},Ia=Gn.extend({view:null,detail:null}),Sa={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ta(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Sa[t])&&!!e[t]}function ja(){return Ta}var Ca=0,Ea=0,Aa=!1,_a=!1,Ra=Ia.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ja,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Ca;return Ca=t.screenX,Aa?"mousemove"===t.type?t.screenX-e:0:(Aa=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Ea;return Ea=t.screenY,_a?"mousemove"===t.type?t.screenY-e:0:(_a=!0,0)}}),Da=Ra.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fa={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ma={eventTypes:Fa,extractEvents:function(t,e,n,a,r){var s="mouseover"===t||"pointerover"===t,o="mouseout"===t||"pointerout"===t;if(s&&0===(32&r)&&(n.relatedTarget||n.fromElement)||!o&&!s)return null;(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,o)?(o=e,null!==(e=(e=n.relatedTarget||n.toElement)?Tn(e):null)&&(e!==$t(e)||5!==e.tag&&6!==e.tag)&&(e=null)):o=null;if(o===e)return null;if("mouseout"===t||"mouseover"===t)var i=Ra,c=Fa.mouseLeave,u=Fa.mouseEnter,l="mouse";else"pointerout"!==t&&"pointerover"!==t||(i=Da,c=Fa.pointerLeave,u=Fa.pointerEnter,l="pointer");if(t=null==o?s:Cn(o),s=null==e?s:Cn(e),(c=i.getPooled(c,o,n,a)).type=l+"leave",c.target=t,c.relatedTarget=s,(n=i.getPooled(u,e,n,a)).type=l+"enter",n.target=s,n.relatedTarget=t,l=e,(a=o)&&l)t:{for(u=l,o=0,t=i=a;t;t=An(t))o++;for(t=0,e=u;e;e=An(e))t++;for(;0<o-t;)i=An(i),o--;for(;0<t-o;)u=An(u),t--;for(;o--;){if(i===u||i===u.alternate)break t;i=An(i),u=An(u)}i=null}else i=null;for(u=i,i=[];a&&a!==u&&(null===(o=a.alternate)||o!==u);)i.push(a),a=An(a);for(a=[];l&&l!==u&&(null===(o=l.alternate)||o!==u);)a.push(l),l=An(l);for(l=0;l<i.length;l++)Fn(i[l],"bubbled",c);for(l=a.length;0<l--;)Fn(a[l],"captured",n);return 0===(64&r)?[c]:[c,n]}};var za="function"===typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t===1/e)||t!==t&&e!==e},La=Object.prototype.hasOwnProperty;function Pa(t,e){if(za(t,e))return!0;if("object"!==typeof t||null===t||"object"!==typeof e||null===e)return!1;var n=Object.keys(t),a=Object.keys(e);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++)if(!La.call(e,n[a])||!za(t[n[a]],e[n[a]]))return!1;return!0}var Ba=T&&"documentMode"in document&&11>=document.documentMode,Wa={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Va=null,Ua=null,Ga=null,Ha=!1;function qa(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Ha||null==Va||Va!==ln(n)?null:("selectionStart"in(n=Va)&&fn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Ga&&Pa(Ga,n)?null:(Ga=n,(t=Gn.getPooled(Wa.select,Ua,t,e)).type="select",t.target=Va,zn(t),t))}var Ka={eventTypes:Wa,extractEvents:function(t,e,n,a,r,s){if(!(s=!(r=s||(a.window===a?a.document:9===a.nodeType?a:a.ownerDocument)))){t:{r=Jt(r),s=I.onSelect;for(var o=0;o<s.length;o++)if(!r.has(s[o])){r=!1;break t}r=!0}s=!r}if(s)return null;switch(r=e?Cn(e):window,t){case"focus":(ua(r)||"true"===r.contentEditable)&&(Va=r,Ua=e,Ga=null);break;case"blur":Ga=Ua=Va=null;break;case"mousedown":Ha=!0;break;case"contextmenu":case"mouseup":case"dragend":return Ha=!1,qa(n,a);case"selectionchange":if(Ba)break;case"keydown":case"keyup":return qa(n,a)}return null}},Xa=Gn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ya=Gn.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),Qa=Ia.extend({relatedTarget:null});function Za(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var Ja={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},$a={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},tr=Ia.extend({key:function(t){if(t.key){var e=Ja[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=Za(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?$a[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ja,charCode:function(t){return"keypress"===t.type?Za(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?Za(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),er=Ra.extend({dataTransfer:null}),nr=Ia.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ja}),ar=Gn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),rr=Ra.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),sr={eventTypes:ze,extractEvents:function(t,e,n,a){var r=Le.get(t);if(!r)return null;switch(t){case"keypress":if(0===Za(n))return null;case"keydown":case"keyup":t=tr;break;case"blur":case"focus":t=Qa;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=Ra;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=er;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=nr;break;case qt:case Kt:case Xt:t=Xa;break;case Yt:t=ar;break;case"scroll":t=Ia;break;case"wheel":t=rr;break;case"copy":case"cut":case"paste":t=Ya;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Da;break;default:t=Gn}return zn(e=t.getPooled(r,e,n,a)),e}};if(y)throw Error(o(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),v(),f=En,m=jn,b=Cn,S({SimpleEventPlugin:sr,EnterLeaveEventPlugin:Ma,ChangeEventPlugin:Na,SelectEventPlugin:Ka,BeforeInputEventPlugin:ia});var or=[],ir=-1;function cr(t){0>ir||(t.current=or[ir],or[ir]=null,ir--)}function ur(t,e){ir++,or[ir]=t.current,t.current=e}var lr={},dr={current:lr},pr={current:!1},hr=lr;function fr(t,e){var n=t.type.contextTypes;if(!n)return lr;var a=t.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===e)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=e[r];return a&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=s),s}function mr(t){return null!==(t=t.childContextTypes)&&void 0!==t}function br(){cr(pr),cr(dr)}function gr(t,e,n){if(dr.current!==lr)throw Error(o(168));ur(dr,e),ur(pr,n)}function yr(t,e,n){var a=t.stateNode;if(t=e.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var s in a=a.getChildContext())if(!(s in t))throw Error(o(108,bt(e)||"Unknown",s));return r({},n,{},a)}function xr(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||lr,hr=dr.current,ur(dr,t),ur(pr,pr.current),!0}function vr(t,e,n){var a=t.stateNode;if(!a)throw Error(o(169));n?(t=yr(t,e,hr),a.__reactInternalMemoizedMergedChildContext=t,cr(pr),cr(dr),ur(dr,t)):cr(pr),ur(pr,n)}var wr=s.unstable_runWithPriority,kr=s.unstable_scheduleCallback,Or=s.unstable_cancelCallback,Nr=s.unstable_requestPaint,Ir=s.unstable_now,Sr=s.unstable_getCurrentPriorityLevel,Tr=s.unstable_ImmediatePriority,jr=s.unstable_UserBlockingPriority,Cr=s.unstable_NormalPriority,Er=s.unstable_LowPriority,Ar=s.unstable_IdlePriority,_r={},Rr=s.unstable_shouldYield,Dr=void 0!==Nr?Nr:function(){},Fr=null,Mr=null,zr=!1,Lr=Ir(),Pr=1e4>Lr?Ir:function(){return Ir()-Lr};function Br(){switch(Sr()){case Tr:return 99;case jr:return 98;case Cr:return 97;case Er:return 96;case Ar:return 95;default:throw Error(o(332))}}function Wr(t){switch(t){case 99:return Tr;case 98:return jr;case 97:return Cr;case 96:return Er;case 95:return Ar;default:throw Error(o(332))}}function Vr(t,e){return t=Wr(t),wr(t,e)}function Ur(t,e,n){return t=Wr(t),kr(t,e,n)}function Gr(t){return null===Fr?(Fr=[t],Mr=kr(Tr,qr)):Fr.push(t),_r}function Hr(){if(null!==Mr){var t=Mr;Mr=null,Or(t)}qr()}function qr(){if(!zr&&null!==Fr){zr=!0;var t=0;try{var e=Fr;Vr(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Fr=null}catch(n){throw null!==Fr&&(Fr=Fr.slice(t+1)),kr(Tr,Hr),n}finally{zr=!1}}}function Kr(t,e,n){return 1073741821-(1+((1073741821-t+e/10)/(n/=10)|0))*n}function Xr(t,e){if(t&&t.defaultProps)for(var n in e=r({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Yr={current:null},Qr=null,Zr=null,Jr=null;function $r(){Jr=Zr=Qr=null}function ts(t){var e=Yr.current;cr(Yr),t.type._context._currentValue=e}function es(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function ns(t,e){Qr=t,Jr=Zr=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Eo=!0),t.firstContext=null)}function as(t,e){if(Jr!==t&&!1!==e&&0!==e)if("number"===typeof e&&1073741823!==e||(Jr=t,e=1073741823),e={context:t,observedBits:e,next:null},null===Zr){if(null===Qr)throw Error(o(308));Zr=e,Qr.dependencies={expirationTime:0,firstContext:e,responders:null}}else Zr=Zr.next=e;return t._currentValue}var rs=!1;function ss(t){t.updateQueue={baseState:t.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function os(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,baseQueue:t.baseQueue,shared:t.shared,effects:t.effects})}function is(t,e){return(t={expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null}).next=t}function cs(t,e){if(null!==(t=t.updateQueue)){var n=(t=t.shared).pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}}function us(t,e){var n=t.alternate;null!==n&&os(n,t),null===(n=(t=t.updateQueue).baseQueue)?(t.baseQueue=e.next=e,e.next=e):(e.next=n.next,n.next=e)}function ls(t,e,n,a){var s=t.updateQueue;rs=!1;var o=s.baseQueue,i=s.shared.pending;if(null!==i){if(null!==o){var c=o.next;o.next=i.next,i.next=c}o=i,s.shared.pending=null,null!==(c=t.alternate)&&(null!==(c=c.updateQueue)&&(c.baseQueue=i))}if(null!==o){c=o.next;var u=s.baseState,l=0,d=null,p=null,h=null;if(null!==c)for(var f=c;;){if((i=f.expirationTime)<a){var m={expirationTime:f.expirationTime,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null};null===h?(p=h=m,d=u):h=h.next=m,i>l&&(l=i)}else{null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null}),sc(i,f.suspenseConfig);t:{var b=t,g=f;switch(i=e,m=n,g.tag){case 1:if("function"===typeof(b=g.payload)){u=b.call(m,u,i);break t}u=b;break t;case 3:b.effectTag=-4097&b.effectTag|64;case 0:if(null===(i="function"===typeof(b=g.payload)?b.call(m,u,i):b)||void 0===i)break t;u=r({},u,i);break t;case 2:rs=!0}}null!==f.callback&&(t.effectTag|=32,null===(i=s.effects)?s.effects=[f]:i.push(f))}if(null===(f=f.next)||f===c){if(null===(i=s.shared.pending))break;f=o.next=i.next,i.next=c,s.baseQueue=o=i,s.shared.pending=null}}null===h?d=u:h.next=p,s.baseState=d,s.baseQueue=h,oc(l),t.expirationTime=l,t.memoizedState=u}}function ds(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var a=t[e],r=a.callback;if(null!==r){if(a.callback=null,a=r,r=n,"function"!==typeof a)throw Error(o(191,a));a.call(r)}}}var ps=Q.ReactCurrentBatchConfig,hs=(new a.Component).refs;function fs(t,e,n,a){n=null===(n=n(a,e=t.memoizedState))||void 0===n?e:r({},e,n),t.memoizedState=n,0===t.expirationTime&&(t.updateQueue.baseState=n)}var ms={isMounted:function(t){return!!(t=t._reactInternalFiber)&&$t(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var a=qi(),r=ps.suspense;(r=is(a=Ki(a,t,r),r)).payload=e,void 0!==n&&null!==n&&(r.callback=n),cs(t,r),Xi(t,a)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var a=qi(),r=ps.suspense;(r=is(a=Ki(a,t,r),r)).tag=1,r.payload=e,void 0!==n&&null!==n&&(r.callback=n),cs(t,r),Xi(t,a)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=qi(),a=ps.suspense;(a=is(n=Ki(n,t,a),a)).tag=2,void 0!==e&&null!==e&&(a.callback=e),cs(t,a),Xi(t,n)}};function bs(t,e,n,a,r,s,o){return"function"===typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(a,s,o):!e.prototype||!e.prototype.isPureReactComponent||(!Pa(n,a)||!Pa(r,s))}function gs(t,e,n){var a=!1,r=lr,s=e.contextType;return"object"===typeof s&&null!==s?s=as(s):(r=mr(e)?hr:dr.current,s=(a=null!==(a=e.contextTypes)&&void 0!==a)?fr(t,r):lr),e=new e(n,s),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=ms,t.stateNode=e,e._reactInternalFiber=t,a&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=s),e}function ys(t,e,n,a){t=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,a),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,a),e.state!==t&&ms.enqueueReplaceState(e,e.state,null)}function xs(t,e,n,a){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs=hs,ss(t);var s=e.contextType;"object"===typeof s&&null!==s?r.context=as(s):(s=mr(e)?hr:dr.current,r.context=fr(t,s)),ls(t,n,r,a),r.state=t.memoizedState,"function"===typeof(s=e.getDerivedStateFromProps)&&(fs(t,e,s,n),r.state=t.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(e=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),e!==r.state&&ms.enqueueReplaceState(r,r.state,null),ls(t,n,r,a),r.state=t.memoizedState),"function"===typeof r.componentDidMount&&(t.effectTag|=4)}var vs=Array.isArray;function ws(t,e,n){if(null!==(t=n.ref)&&"function"!==typeof t&&"object"!==typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var a=n.stateNode}if(!a)throw Error(o(147,t));var r=""+t;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===r?e.ref:((e=function(t){var e=a.refs;e===hs&&(e=a.refs={}),null===t?delete e[r]:e[r]=t})._stringRef=r,e)}if("string"!==typeof t)throw Error(o(284));if(!n._owner)throw Error(o(290,t))}return t}function ks(t,e){if("textarea"!==t.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function Os(t){function e(e,n){if(t){var a=e.lastEffect;null!==a?(a.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,a){if(!t)return null;for(;null!==a;)e(n,a),a=a.sibling;return null}function a(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(t,e){return(t=Sc(t,e)).index=0,t.sibling=null,t}function s(e,n,a){return e.index=a,t?null!==(a=e.alternate)?(a=a.index)<n?(e.effectTag=2,n):a:(e.effectTag=2,n):n}function i(e){return t&&null===e.alternate&&(e.effectTag=2),e}function c(t,e,n,a){return null===e||6!==e.tag?((e=Cc(n,t.mode,a)).return=t,e):((e=r(e,n)).return=t,e)}function u(t,e,n,a){return null!==e&&e.elementType===n.type?((a=r(e,n.props)).ref=ws(t,e,n),a.return=t,a):((a=Tc(n.type,n.key,n.props,null,t.mode,a)).ref=ws(t,e,n),a.return=t,a)}function l(t,e,n,a){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Ec(n,t.mode,a)).return=t,e):((e=r(e,n.children||[])).return=t,e)}function d(t,e,n,a,s){return null===e||7!==e.tag?((e=jc(n,t.mode,a,s)).return=t,e):((e=r(e,n)).return=t,e)}function p(t,e,n){if("string"===typeof e||"number"===typeof e)return(e=Cc(""+e,t.mode,n)).return=t,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case tt:return(n=Tc(e.type,e.key,e.props,null,t.mode,n)).ref=ws(t,null,e),n.return=t,n;case et:return(e=Ec(e,t.mode,n)).return=t,e}if(vs(e)||mt(e))return(e=jc(e,t.mode,n,null)).return=t,e;ks(t,e)}return null}function h(t,e,n,a){var r=null!==e?e.key:null;if("string"===typeof n||"number"===typeof n)return null!==r?null:c(t,e,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case tt:return n.key===r?n.type===nt?d(t,e,n.props.children,a,r):u(t,e,n,a):null;case et:return n.key===r?l(t,e,n,a):null}if(vs(n)||mt(n))return null!==r?null:d(t,e,n,a,null);ks(t,n)}return null}function f(t,e,n,a,r){if("string"===typeof a||"number"===typeof a)return c(e,t=t.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case tt:return t=t.get(null===a.key?n:a.key)||null,a.type===nt?d(e,t,a.props.children,r,a.key):u(e,t,a,r);case et:return l(e,t=t.get(null===a.key?n:a.key)||null,a,r)}if(vs(a)||mt(a))return d(e,t=t.get(n)||null,a,r,null);ks(e,a)}return null}function m(r,o,i,c){for(var u=null,l=null,d=o,m=o=0,b=null;null!==d&&m<i.length;m++){d.index>m?(b=d,d=null):b=d.sibling;var g=h(r,d,i[m],c);if(null===g){null===d&&(d=b);break}t&&d&&null===g.alternate&&e(r,d),o=s(g,o,m),null===l?u=g:l.sibling=g,l=g,d=b}if(m===i.length)return n(r,d),u;if(null===d){for(;m<i.length;m++)null!==(d=p(r,i[m],c))&&(o=s(d,o,m),null===l?u=d:l.sibling=d,l=d);return u}for(d=a(r,d);m<i.length;m++)null!==(b=f(d,r,m,i[m],c))&&(t&&null!==b.alternate&&d.delete(null===b.key?m:b.key),o=s(b,o,m),null===l?u=b:l.sibling=b,l=b);return t&&d.forEach((function(t){return e(r,t)})),u}function b(r,i,c,u){var l=mt(c);if("function"!==typeof l)throw Error(o(150));if(null==(c=l.call(c)))throw Error(o(151));for(var d=l=null,m=i,b=i=0,g=null,y=c.next();null!==m&&!y.done;b++,y=c.next()){m.index>b?(g=m,m=null):g=m.sibling;var x=h(r,m,y.value,u);if(null===x){null===m&&(m=g);break}t&&m&&null===x.alternate&&e(r,m),i=s(x,i,b),null===d?l=x:d.sibling=x,d=x,m=g}if(y.done)return n(r,m),l;if(null===m){for(;!y.done;b++,y=c.next())null!==(y=p(r,y.value,u))&&(i=s(y,i,b),null===d?l=y:d.sibling=y,d=y);return l}for(m=a(r,m);!y.done;b++,y=c.next())null!==(y=f(m,r,b,y.value,u))&&(t&&null!==y.alternate&&m.delete(null===y.key?b:y.key),i=s(y,i,b),null===d?l=y:d.sibling=y,d=y);return t&&m.forEach((function(t){return e(r,t)})),l}return function(t,a,s,c){var u="object"===typeof s&&null!==s&&s.type===nt&&null===s.key;u&&(s=s.props.children);var l="object"===typeof s&&null!==s;if(l)switch(s.$$typeof){case tt:t:{for(l=s.key,u=a;null!==u;){if(u.key===l){switch(u.tag){case 7:if(s.type===nt){n(t,u.sibling),(a=r(u,s.props.children)).return=t,t=a;break t}break;default:if(u.elementType===s.type){n(t,u.sibling),(a=r(u,s.props)).ref=ws(t,u,s),a.return=t,t=a;break t}}n(t,u);break}e(t,u),u=u.sibling}s.type===nt?((a=jc(s.props.children,t.mode,c,s.key)).return=t,t=a):((c=Tc(s.type,s.key,s.props,null,t.mode,c)).ref=ws(t,a,s),c.return=t,t=c)}return i(t);case et:t:{for(u=s.key;null!==a;){if(a.key===u){if(4===a.tag&&a.stateNode.containerInfo===s.containerInfo&&a.stateNode.implementation===s.implementation){n(t,a.sibling),(a=r(a,s.children||[])).return=t,t=a;break t}n(t,a);break}e(t,a),a=a.sibling}(a=Ec(s,t.mode,c)).return=t,t=a}return i(t)}if("string"===typeof s||"number"===typeof s)return s=""+s,null!==a&&6===a.tag?(n(t,a.sibling),(a=r(a,s)).return=t,t=a):(n(t,a),(a=Cc(s,t.mode,c)).return=t,t=a),i(t);if(vs(s))return m(t,a,s,c);if(mt(s))return b(t,a,s,c);if(l&&ks(t,s),"undefined"===typeof s&&!u)switch(t.tag){case 1:case 0:throw t=t.type,Error(o(152,t.displayName||t.name||"Component"))}return n(t,a)}}var Ns=Os(!0),Is=Os(!1),Ss={},Ts={current:Ss},js={current:Ss},Cs={current:Ss};function Es(t){if(t===Ss)throw Error(o(174));return t}function As(t,e){switch(ur(Cs,e),ur(js,t),ur(Ts,Ss),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:zt(null,"");break;default:e=zt(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}cr(Ts),ur(Ts,e)}function _s(){cr(Ts),cr(js),cr(Cs)}function Rs(t){Es(Cs.current);var e=Es(Ts.current),n=zt(e,t.type);e!==n&&(ur(js,t),ur(Ts,n))}function Ds(t){js.current===t&&(cr(Ts),cr(js))}var Fs={current:0};function Ms(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function zs(t,e){return{responder:t,props:e}}var Ls=Q.ReactCurrentDispatcher,Ps=Q.ReactCurrentBatchConfig,Bs=0,Ws=null,Vs=null,Us=null,Gs=!1;function Hs(){throw Error(o(321))}function qs(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!za(t[n],e[n]))return!1;return!0}function Ks(t,e,n,a,r,s){if(Bs=s,Ws=e,e.memoizedState=null,e.updateQueue=null,e.expirationTime=0,Ls.current=null===t||null===t.memoizedState?go:yo,t=n(a,r),e.expirationTime===Bs){s=0;do{if(e.expirationTime=0,!(25>s))throw Error(o(301));s+=1,Us=Vs=null,e.updateQueue=null,Ls.current=xo,t=n(a,r)}while(e.expirationTime===Bs)}if(Ls.current=bo,e=null!==Vs&&null!==Vs.next,Bs=0,Us=Vs=Ws=null,Gs=!1,e)throw Error(o(300));return t}function Xs(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Us?Ws.memoizedState=Us=t:Us=Us.next=t,Us}function Ys(){if(null===Vs){var t=Ws.alternate;t=null!==t?t.memoizedState:null}else t=Vs.next;var e=null===Us?Ws.memoizedState:Us.next;if(null!==e)Us=e,Vs=t;else{if(null===t)throw Error(o(310));t={memoizedState:(Vs=t).memoizedState,baseState:Vs.baseState,baseQueue:Vs.baseQueue,queue:Vs.queue,next:null},null===Us?Ws.memoizedState=Us=t:Us=Us.next=t}return Us}function Qs(t,e){return"function"===typeof e?e(t):e}function Zs(t){var e=Ys(),n=e.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=t;var a=Vs,r=a.baseQueue,s=n.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}a.baseQueue=r=s,n.pending=null}if(null!==r){r=r.next,a=a.baseState;var c=i=s=null,u=r;do{var l=u.expirationTime;if(l<Bs){var d={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===c?(i=c=d,s=a):c=c.next=d,l>Ws.expirationTime&&(Ws.expirationTime=l,oc(l))}else null!==c&&(c=c.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),sc(l,u.suspenseConfig),a=u.eagerReducer===t?u.eagerState:t(a,u.action);u=u.next}while(null!==u&&u!==r);null===c?s=a:c.next=i,za(a,e.memoizedState)||(Eo=!0),e.memoizedState=a,e.baseState=s,e.baseQueue=c,n.lastRenderedState=a}return[e.memoizedState,n.dispatch]}function Js(t){var e=Ys(),n=e.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=t;var a=n.dispatch,r=n.pending,s=e.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=t(s,i.action),i=i.next}while(i!==r);za(s,e.memoizedState)||(Eo=!0),e.memoizedState=s,null===e.baseQueue&&(e.baseState=s),n.lastRenderedState=s}return[s,a]}function $s(t){var e=Xs();return"function"===typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={pending:null,dispatch:null,lastRenderedReducer:Qs,lastRenderedState:t}).dispatch=mo.bind(null,Ws,t),[e.memoizedState,t]}function to(t,e,n,a){return t={tag:t,create:e,destroy:n,deps:a,next:null},null===(e=Ws.updateQueue)?(e={lastEffect:null},Ws.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(a=n.next,n.next=t,t.next=a,e.lastEffect=t),t}function eo(){return Ys().memoizedState}function no(t,e,n,a){var r=Xs();Ws.effectTag|=t,r.memoizedState=to(1|e,n,void 0,void 0===a?null:a)}function ao(t,e,n,a){var r=Ys();a=void 0===a?null:a;var s=void 0;if(null!==Vs){var o=Vs.memoizedState;if(s=o.destroy,null!==a&&qs(a,o.deps))return void to(e,n,s,a)}Ws.effectTag|=t,r.memoizedState=to(1|e,n,s,a)}function ro(t,e){return no(516,4,t,e)}function so(t,e){return ao(516,4,t,e)}function oo(t,e){return ao(4,2,t,e)}function io(t,e){return"function"===typeof e?(t=t(),e(t),function(){e(null)}):null!==e&&void 0!==e?(t=t(),e.current=t,function(){e.current=null}):void 0}function co(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,ao(4,2,io.bind(null,e,t),n)}function uo(){}function lo(t,e){return Xs().memoizedState=[t,void 0===e?null:e],t}function po(t,e){var n=Ys();e=void 0===e?null:e;var a=n.memoizedState;return null!==a&&null!==e&&qs(e,a[1])?a[0]:(n.memoizedState=[t,e],t)}function ho(t,e){var n=Ys();e=void 0===e?null:e;var a=n.memoizedState;return null!==a&&null!==e&&qs(e,a[1])?a[0]:(t=t(),n.memoizedState=[t,e],t)}function fo(t,e,n){var a=Br();Vr(98>a?98:a,(function(){t(!0)})),Vr(97<a?97:a,(function(){var a=Ps.suspense;Ps.suspense=void 0===e?null:e;try{t(!1),n()}finally{Ps.suspense=a}}))}function mo(t,e,n){var a=qi(),r=ps.suspense;r={expirationTime:a=Ki(a,t,r),suspenseConfig:r,action:n,eagerReducer:null,eagerState:null,next:null};var s=e.pending;if(null===s?r.next=r:(r.next=s.next,s.next=r),e.pending=r,s=t.alternate,t===Ws||null!==s&&s===Ws)Gs=!0,r.expirationTime=Bs,Ws.expirationTime=Bs;else{if(0===t.expirationTime&&(null===s||0===s.expirationTime)&&null!==(s=e.lastRenderedReducer))try{var o=e.lastRenderedState,i=s(o,n);if(r.eagerReducer=s,r.eagerState=i,za(i,o))return}catch(c){}Xi(t,a)}}var bo={readContext:as,useCallback:Hs,useContext:Hs,useEffect:Hs,useImperativeHandle:Hs,useLayoutEffect:Hs,useMemo:Hs,useReducer:Hs,useRef:Hs,useState:Hs,useDebugValue:Hs,useResponder:Hs,useDeferredValue:Hs,useTransition:Hs},go={readContext:as,useCallback:lo,useContext:as,useEffect:ro,useImperativeHandle:function(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,no(4,2,io.bind(null,e,t),n)},useLayoutEffect:function(t,e){return no(4,2,t,e)},useMemo:function(t,e){var n=Xs();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var a=Xs();return e=void 0!==n?n(e):e,a.memoizedState=a.baseState=e,t=(t=a.queue={pending:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=mo.bind(null,Ws,t),[a.memoizedState,t]},useRef:function(t){return t={current:t},Xs().memoizedState=t},useState:$s,useDebugValue:uo,useResponder:zs,useDeferredValue:function(t,e){var n=$s(t),a=n[0],r=n[1];return ro((function(){var n=Ps.suspense;Ps.suspense=void 0===e?null:e;try{r(t)}finally{Ps.suspense=n}}),[t,e]),a},useTransition:function(t){var e=$s(!1),n=e[0];return e=e[1],[lo(fo.bind(null,e,t),[e,t]),n]}},yo={readContext:as,useCallback:po,useContext:as,useEffect:so,useImperativeHandle:co,useLayoutEffect:oo,useMemo:ho,useReducer:Zs,useRef:eo,useState:function(){return Zs(Qs)},useDebugValue:uo,useResponder:zs,useDeferredValue:function(t,e){var n=Zs(Qs),a=n[0],r=n[1];return so((function(){var n=Ps.suspense;Ps.suspense=void 0===e?null:e;try{r(t)}finally{Ps.suspense=n}}),[t,e]),a},useTransition:function(t){var e=Zs(Qs),n=e[0];return e=e[1],[po(fo.bind(null,e,t),[e,t]),n]}},xo={readContext:as,useCallback:po,useContext:as,useEffect:so,useImperativeHandle:co,useLayoutEffect:oo,useMemo:ho,useReducer:Js,useRef:eo,useState:function(){return Js(Qs)},useDebugValue:uo,useResponder:zs,useDeferredValue:function(t,e){var n=Js(Qs),a=n[0],r=n[1];return so((function(){var n=Ps.suspense;Ps.suspense=void 0===e?null:e;try{r(t)}finally{Ps.suspense=n}}),[t,e]),a},useTransition:function(t){var e=Js(Qs),n=e[0];return e=e[1],[po(fo.bind(null,e,t),[e,t]),n]}},vo=null,wo=null,ko=!1;function Oo(t,e){var n=Nc(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function No(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function Io(t){if(ko){var e=wo;if(e){var n=e;if(!No(t,e)){if(!(e=wn(n.nextSibling))||!No(t,e))return t.effectTag=-1025&t.effectTag|2,ko=!1,void(vo=t);Oo(vo,n)}vo=t,wo=wn(e.firstChild)}else t.effectTag=-1025&t.effectTag|2,ko=!1,vo=t}}function So(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;vo=t}function To(t){if(t!==vo)return!1;if(!ko)return So(t),ko=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!yn(e,t.memoizedProps))for(e=wo;e;)Oo(t,e),e=wn(e.nextSibling);if(So(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(o(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){wo=wn(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}wo=null}}else wo=vo?wn(t.stateNode.nextSibling):null;return!0}function jo(){wo=vo=null,ko=!1}var Co=Q.ReactCurrentOwner,Eo=!1;function Ao(t,e,n,a){e.child=null===t?Is(e,null,n,a):Ns(e,t.child,n,a)}function _o(t,e,n,a,r){n=n.render;var s=e.ref;return ns(e,r),a=Ks(t,e,n,a,s,r),null===t||Eo?(e.effectTag|=1,Ao(t,e,a,r),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=r&&(t.expirationTime=0),Xo(t,e,r))}function Ro(t,e,n,a,r,s){if(null===t){var o=n.type;return"function"!==typeof o||Ic(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Tc(n.type,null,a,null,e.mode,s)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=o,Do(t,e,o,a,r,s))}return o=t.child,r<s&&(r=o.memoizedProps,(n=null!==(n=n.compare)?n:Pa)(r,a)&&t.ref===e.ref)?Xo(t,e,s):(e.effectTag|=1,(t=Sc(o,a)).ref=e.ref,t.return=e,e.child=t)}function Do(t,e,n,a,r,s){return null!==t&&Pa(t.memoizedProps,a)&&t.ref===e.ref&&(Eo=!1,r<s)?(e.expirationTime=t.expirationTime,Xo(t,e,s)):Mo(t,e,n,a,s)}function Fo(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Mo(t,e,n,a,r){var s=mr(n)?hr:dr.current;return s=fr(e,s),ns(e,r),n=Ks(t,e,n,a,s,r),null===t||Eo?(e.effectTag|=1,Ao(t,e,n,r),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=r&&(t.expirationTime=0),Xo(t,e,r))}function zo(t,e,n,a,r){if(mr(n)){var s=!0;xr(e)}else s=!1;if(ns(e,r),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),gs(e,n,a),xs(e,n,a,r),a=!0;else if(null===t){var o=e.stateNode,i=e.memoizedProps;o.props=i;var c=o.context,u=n.contextType;"object"===typeof u&&null!==u?u=as(u):u=fr(e,u=mr(n)?hr:dr.current);var l=n.getDerivedStateFromProps,d="function"===typeof l||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==u)&&ys(e,o,a,u),rs=!1;var p=e.memoizedState;o.state=p,ls(e,a,o,r),c=e.memoizedState,i!==a||p!==c||pr.current||rs?("function"===typeof l&&(fs(e,n,l,a),c=e.memoizedState),(i=rs||bs(e,n,i,a,p,c,u))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(e.effectTag|=4)):("function"===typeof o.componentDidMount&&(e.effectTag|=4),e.memoizedProps=a,e.memoizedState=c),o.props=a,o.state=c,o.context=u,a=i):("function"===typeof o.componentDidMount&&(e.effectTag|=4),a=!1)}else o=e.stateNode,os(t,e),i=e.memoizedProps,o.props=e.type===e.elementType?i:Xr(e.type,i),c=o.context,"object"===typeof(u=n.contextType)&&null!==u?u=as(u):u=fr(e,u=mr(n)?hr:dr.current),(d="function"===typeof(l=n.getDerivedStateFromProps)||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==u)&&ys(e,o,a,u),rs=!1,c=e.memoizedState,o.state=c,ls(e,a,o,r),p=e.memoizedState,i!==a||c!==p||pr.current||rs?("function"===typeof l&&(fs(e,n,l,a),p=e.memoizedState),(l=rs||bs(e,n,i,a,c,p,u))?(d||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,p,u),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,p,u)),"function"===typeof o.componentDidUpdate&&(e.effectTag|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!==typeof o.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),e.memoizedProps=a,e.memoizedState=p),o.props=a,o.state=p,o.context=u,a=l):("function"!==typeof o.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),a=!1);return Lo(t,e,n,a,s,r)}function Lo(t,e,n,a,r,s){Fo(t,e);var o=0!==(64&e.effectTag);if(!a&&!o)return r&&vr(e,n,!1),Xo(t,e,s);a=e.stateNode,Co.current=e;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return e.effectTag|=1,null!==t&&o?(e.child=Ns(e,t.child,null,s),e.child=Ns(e,null,i,s)):Ao(t,e,i,s),e.memoizedState=a.state,r&&vr(e,n,!0),e.child}function Po(t){var e=t.stateNode;e.pendingContext?gr(0,e.pendingContext,e.pendingContext!==e.context):e.context&&gr(0,e.context,!1),As(t,e.containerInfo)}var Bo,Wo,Vo,Uo={dehydrated:null,retryTime:0};function Go(t,e,n){var a,r=e.mode,s=e.pendingProps,o=Fs.current,i=!1;if((a=0!==(64&e.effectTag))||(a=0!==(2&o)&&(null===t||null!==t.memoizedState)),a?(i=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===s.fallback||!0===s.unstable_avoidThisFallback||(o|=1),ur(Fs,1&o),null===t){if(void 0!==s.fallback&&Io(e),i){if(i=s.fallback,(s=jc(null,r,0,null)).return=e,0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,s.child=t;null!==t;)t.return=s,t=t.sibling;return(n=jc(i,r,n,null)).return=e,s.sibling=n,e.memoizedState=Uo,e.child=s,n}return r=s.children,e.memoizedState=null,e.child=Is(e,null,r,n)}if(null!==t.memoizedState){if(r=(t=t.child).sibling,i){if(s=s.fallback,(n=Sc(t,t.pendingProps)).return=e,0===(2&e.mode)&&(i=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=i;null!==i;)i.return=n,i=i.sibling;return(r=Sc(r,s)).return=e,n.sibling=r,n.childExpirationTime=0,e.memoizedState=Uo,e.child=n,r}return n=Ns(e,t.child,s.children,n),e.memoizedState=null,e.child=n}if(t=t.child,i){if(i=s.fallback,(s=jc(null,r,0,null)).return=e,s.child=t,null!==t&&(t.return=s),0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,s.child=t;null!==t;)t.return=s,t=t.sibling;return(n=jc(i,r,n,null)).return=e,s.sibling=n,n.effectTag|=2,s.childExpirationTime=0,e.memoizedState=Uo,e.child=s,n}return e.memoizedState=null,e.child=Ns(e,t,s.children,n)}function Ho(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e),es(t.return,e)}function qo(t,e,n,a,r,s){var o=t.memoizedState;null===o?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:a,tail:n,tailExpiration:0,tailMode:r,lastEffect:s}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=a,o.tail=n,o.tailExpiration=0,o.tailMode=r,o.lastEffect=s)}function Ko(t,e,n){var a=e.pendingProps,r=a.revealOrder,s=a.tail;if(Ao(t,e,a.children,n),0!==(2&(a=Fs.current)))a=1&a|2,e.effectTag|=64;else{if(null!==t&&0!==(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Ho(t,n);else if(19===t.tag)Ho(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}a&=1}if(ur(Fs,a),0===(2&e.mode))e.memoizedState=null;else switch(r){case"forwards":for(n=e.child,r=null;null!==n;)null!==(t=n.alternate)&&null===Ms(t)&&(r=n),n=n.sibling;null===(n=r)?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),qo(e,!1,r,n,s,e.lastEffect);break;case"backwards":for(n=null,r=e.child,e.child=null;null!==r;){if(null!==(t=r.alternate)&&null===Ms(t)){e.child=r;break}t=r.sibling,r.sibling=n,n=r,r=t}qo(e,!0,n,null,s,e.lastEffect);break;case"together":qo(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function Xo(t,e,n){null!==t&&(e.dependencies=t.dependencies);var a=e.expirationTime;if(0!==a&&oc(a),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw Error(o(153));if(null!==e.child){for(n=Sc(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Sc(t,t.pendingProps)).return=e;n.sibling=null}return e.child}function Yo(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?e||null===t.tail?t.tail=null:t.tail.sibling=null:a.sibling=null}}function Qo(t,e,n){var a=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return mr(e.type)&&br(),null;case 3:return _s(),cr(pr),cr(dr),(n=e.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==t&&null!==t.child||!To(e)||(e.effectTag|=4),null;case 5:Ds(e),n=Es(Cs.current);var s=e.type;if(null!==t&&null!=e.stateNode)Wo(t,e,s,a,n),t.ref!==e.ref&&(e.effectTag|=128);else{if(!a){if(null===e.stateNode)throw Error(o(166));return null}if(t=Es(Ts.current),To(e)){a=e.stateNode,s=e.type;var i=e.memoizedProps;switch(a[Nn]=e,a[In]=i,s){case"iframe":case"object":case"embed":Ke("load",a);break;case"video":case"audio":for(t=0;t<Qt.length;t++)Ke(Qt[t],a);break;case"source":Ke("error",a);break;case"img":case"image":case"link":Ke("error",a),Ke("load",a);break;case"form":Ke("reset",a),Ke("submit",a);break;case"details":Ke("toggle",a);break;case"input":Ot(a,i),Ke("invalid",a),cn(n,"onChange");break;case"select":a._wrapperState={wasMultiple:!!i.multiple},Ke("invalid",a),cn(n,"onChange");break;case"textarea":At(a,i),Ke("invalid",a),cn(n,"onChange")}for(var c in rn(s,i),t=null,i)if(i.hasOwnProperty(c)){var u=i[c];"children"===c?"string"===typeof u?a.textContent!==u&&(t=["children",u]):"number"===typeof u&&a.textContent!==""+u&&(t=["children",""+u]):N.hasOwnProperty(c)&&null!=u&&cn(n,c)}switch(s){case"input":vt(a),St(a,i,!0);break;case"textarea":vt(a),Rt(a);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(a.onclick=un)}n=t,e.updateQueue=n,null!==n&&(e.effectTag|=4)}else{switch(c=9===n.nodeType?n:n.ownerDocument,t===on&&(t=Mt(s)),t===on?"script"===s?((t=c.createElement("div")).innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):"string"===typeof a.is?t=c.createElement(s,{is:a.is}):(t=c.createElement(s),"select"===s&&(c=t,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):t=c.createElementNS(t,s),t[Nn]=e,t[In]=a,Bo(t,e),e.stateNode=t,c=sn(s,a),s){case"iframe":case"object":case"embed":Ke("load",t),u=a;break;case"video":case"audio":for(u=0;u<Qt.length;u++)Ke(Qt[u],t);u=a;break;case"source":Ke("error",t),u=a;break;case"img":case"image":case"link":Ke("error",t),Ke("load",t),u=a;break;case"form":Ke("reset",t),Ke("submit",t),u=a;break;case"details":Ke("toggle",t),u=a;break;case"input":Ot(t,a),u=kt(t,a),Ke("invalid",t),cn(n,"onChange");break;case"option":u=jt(t,a);break;case"select":t._wrapperState={wasMultiple:!!a.multiple},u=r({},a,{value:void 0}),Ke("invalid",t),cn(n,"onChange");break;case"textarea":At(t,a),u=Et(t,a),Ke("invalid",t),cn(n,"onChange");break;default:u=a}rn(s,u);var l=u;for(i in l)if(l.hasOwnProperty(i)){var d=l[i];"style"===i?nn(t,d):"dangerouslySetInnerHTML"===i?null!=(d=d?d.__html:void 0)&&Pt(t,d):"children"===i?"string"===typeof d?("textarea"!==s||""!==d)&&Bt(t,d):"number"===typeof d&&Bt(t,""+d):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(N.hasOwnProperty(i)?null!=d&&cn(n,i):null!=d&&Z(t,i,d,c))}switch(s){case"input":vt(t),St(t,a,!1);break;case"textarea":vt(t),Rt(t);break;case"option":null!=a.value&&t.setAttribute("value",""+yt(a.value));break;case"select":t.multiple=!!a.multiple,null!=(n=a.value)?Ct(t,!!a.multiple,n,!1):null!=a.defaultValue&&Ct(t,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof u.onClick&&(t.onclick=un)}gn(s,a)&&(e.effectTag|=4)}null!==e.ref&&(e.effectTag|=128)}return null;case 6:if(t&&null!=e.stateNode)Vo(0,e,t.memoizedProps,a);else{if("string"!==typeof a&&null===e.stateNode)throw Error(o(166));n=Es(Cs.current),Es(Ts.current),To(e)?(n=e.stateNode,a=e.memoizedProps,n[Nn]=e,n.nodeValue!==a&&(e.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[Nn]=e,e.stateNode=n)}return null;case 13:return cr(Fs),a=e.memoizedState,0!==(64&e.effectTag)?(e.expirationTime=n,e):(n=null!==a,a=!1,null===t?void 0!==e.memoizedProps.fallback&&To(e):(a=null!==(s=t.memoizedState),n||null===s||null!==(s=t.child.sibling)&&(null!==(i=e.firstEffect)?(e.firstEffect=s,s.nextEffect=i):(e.firstEffect=e.lastEffect=s,s.nextEffect=null),s.effectTag=8)),n&&!a&&0!==(2&e.mode)&&(null===t&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&Fs.current)?Ti===vi&&(Ti=wi):(Ti!==vi&&Ti!==wi||(Ti=ki),0!==_i&&null!==Ni&&(Rc(Ni,Si),Dc(Ni,_i)))),(n||a)&&(e.effectTag|=4),null);case 4:return _s(),null;case 10:return ts(e),null;case 17:return mr(e.type)&&br(),null;case 19:if(cr(Fs),null===(a=e.memoizedState))return null;if(s=0!==(64&e.effectTag),null===(i=a.rendering)){if(s)Yo(a,!1);else if(Ti!==vi||null!==t&&0!==(64&t.effectTag))for(i=e.child;null!==i;){if(null!==(t=Ms(i))){for(e.effectTag|=64,Yo(a,!1),null!==(s=t.updateQueue)&&(e.updateQueue=s,e.effectTag|=4),null===a.lastEffect&&(e.firstEffect=null),e.lastEffect=a.lastEffect,a=e.child;null!==a;)i=n,(s=a).effectTag&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(t=s.alternate)?(s.childExpirationTime=0,s.expirationTime=i,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null):(s.childExpirationTime=t.childExpirationTime,s.expirationTime=t.expirationTime,s.child=t.child,s.memoizedProps=t.memoizedProps,s.memoizedState=t.memoizedState,s.updateQueue=t.updateQueue,i=t.dependencies,s.dependencies=null===i?null:{expirationTime:i.expirationTime,firstContext:i.firstContext,responders:i.responders}),a=a.sibling;return ur(Fs,1&Fs.current|2),e.child}i=i.sibling}}else{if(!s)if(null!==(t=Ms(i))){if(e.effectTag|=64,s=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.effectTag|=4),Yo(a,!0),null===a.tail&&"hidden"===a.tailMode&&!i.alternate)return null!==(e=e.lastEffect=a.lastEffect)&&(e.nextEffect=null),null}else 2*Pr()-a.renderingStartTime>a.tailExpiration&&1<n&&(e.effectTag|=64,s=!0,Yo(a,!1),e.expirationTime=e.childExpirationTime=n-1);a.isBackwards?(i.sibling=e.child,e.child=i):(null!==(n=a.last)?n.sibling=i:e.child=i,a.last=i)}return null!==a.tail?(0===a.tailExpiration&&(a.tailExpiration=Pr()+500),n=a.tail,a.rendering=n,a.tail=n.sibling,a.lastEffect=e.lastEffect,a.renderingStartTime=Pr(),n.sibling=null,e=Fs.current,ur(Fs,s?1&e|2:1&e),n):null}throw Error(o(156,e.tag))}function Zo(t){switch(t.tag){case 1:mr(t.type)&&br();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(_s(),cr(pr),cr(dr),0!==(64&(e=t.effectTag)))throw Error(o(285));return t.effectTag=-4097&e|64,t;case 5:return Ds(t),null;case 13:return cr(Fs),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return cr(Fs),null;case 4:return _s(),null;case 10:return ts(t),null;default:return null}}function Jo(t,e){return{value:t,source:e,stack:gt(e)}}Bo=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wo=function(t,e,n,a,s){var o=t.memoizedProps;if(o!==a){var i,c,u=e.stateNode;switch(Es(Ts.current),t=null,n){case"input":o=kt(u,o),a=kt(u,a),t=[];break;case"option":o=jt(u,o),a=jt(u,a),t=[];break;case"select":o=r({},o,{value:void 0}),a=r({},a,{value:void 0}),t=[];break;case"textarea":o=Et(u,o),a=Et(u,a),t=[];break;default:"function"!==typeof o.onClick&&"function"===typeof a.onClick&&(u.onclick=un)}for(i in rn(n,a),n=null,o)if(!a.hasOwnProperty(i)&&o.hasOwnProperty(i)&&null!=o[i])if("style"===i)for(c in u=o[i])u.hasOwnProperty(c)&&(n||(n={}),n[c]="");else"dangerouslySetInnerHTML"!==i&&"children"!==i&&"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(N.hasOwnProperty(i)?t||(t=[]):(t=t||[]).push(i,null));for(i in a){var l=a[i];if(u=null!=o?o[i]:void 0,a.hasOwnProperty(i)&&l!==u&&(null!=l||null!=u))if("style"===i)if(u){for(c in u)!u.hasOwnProperty(c)||l&&l.hasOwnProperty(c)||(n||(n={}),n[c]="");for(c in l)l.hasOwnProperty(c)&&u[c]!==l[c]&&(n||(n={}),n[c]=l[c])}else n||(t||(t=[]),t.push(i,n)),n=l;else"dangerouslySetInnerHTML"===i?(l=l?l.__html:void 0,u=u?u.__html:void 0,null!=l&&u!==l&&(t=t||[]).push(i,l)):"children"===i?u===l||"string"!==typeof l&&"number"!==typeof l||(t=t||[]).push(i,""+l):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&(N.hasOwnProperty(i)?(null!=l&&cn(s,i),t||u===l||(t=[])):(t=t||[]).push(i,l))}n&&(t=t||[]).push("style",n),s=t,(e.updateQueue=s)&&(e.effectTag|=4)}},Vo=function(t,e,n,a){n!==a&&(e.effectTag|=4)};var $o="function"===typeof WeakSet?WeakSet:Set;function ti(t,e){var n=e.source,a=e.stack;null===a&&null!==n&&(a=gt(n)),null!==n&&bt(n.type),e=e.value,null!==t&&1===t.tag&&bt(t.type);try{console.error(e)}catch(r){setTimeout((function(){throw r}))}}function ei(t){var e=t.ref;if(null!==e)if("function"===typeof e)try{e(null)}catch(n){yc(t,n)}else e.current=null}function ni(t,e){switch(e.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,a=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Xr(e.type,n),a),t.__reactInternalSnapshotBeforeUpdate=e}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(o(163))}function ai(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var a=n.destroy;n.destroy=void 0,void 0!==a&&a()}n=n.next}while(n!==e)}}function ri(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var a=n.create;n.destroy=a()}n=n.next}while(n!==e)}}function si(t,e,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ri(3,n);case 1:if(t=n.stateNode,4&n.effectTag)if(null===e)t.componentDidMount();else{var a=n.elementType===n.type?e.memoizedProps:Xr(n.type,e.memoizedProps);t.componentDidUpdate(a,e.memoizedState,t.__reactInternalSnapshotBeforeUpdate)}return void(null!==(e=n.updateQueue)&&ds(n,e,t));case 3:if(null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}ds(n,e,t)}return;case 5:return t=n.stateNode,void(null===e&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&t.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Me(n)))));case 19:case 17:case 20:case 21:return}throw Error(o(163))}function oi(t,e,n){switch("function"===typeof kc&&kc(e),e.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var a=t.next;Vr(97<n?97:n,(function(){var t=a;do{var n=t.destroy;if(void 0!==n){var r=e;try{n()}catch(s){yc(r,s)}}t=t.next}while(t!==a)}))}break;case 1:ei(e),"function"===typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(n){yc(t,n)}}(e,n);break;case 5:ei(e);break;case 4:li(t,e,n)}}function ii(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,t.stateNode=null,null!==e&&ii(e)}function ci(t){return 5===t.tag||3===t.tag||4===t.tag}function ui(t){t:{for(var e=t.return;null!==e;){if(ci(e)){var n=e;break t}e=e.return}throw Error(o(160))}switch(e=n.stateNode,n.tag){case 5:var a=!1;break;case 3:case 4:e=e.containerInfo,a=!0;break;default:throw Error(o(161))}16&n.effectTag&&(Bt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||ci(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}a?function t(e,n,a){var r=e.tag,s=5===r||6===r;if(s)e=s?e.stateNode:e.stateNode.instance,n?8===a.nodeType?a.parentNode.insertBefore(e,n):a.insertBefore(e,n):(8===a.nodeType?(n=a.parentNode).insertBefore(e,a):(n=a).appendChild(e),null!==(a=a._reactRootContainer)&&void 0!==a||null!==n.onclick||(n.onclick=un));else if(4!==r&&null!==(e=e.child))for(t(e,n,a),e=e.sibling;null!==e;)t(e,n,a),e=e.sibling}(t,n,e):function t(e,n,a){var r=e.tag,s=5===r||6===r;if(s)e=s?e.stateNode:e.stateNode.instance,n?a.insertBefore(e,n):a.appendChild(e);else if(4!==r&&null!==(e=e.child))for(t(e,n,a),e=e.sibling;null!==e;)t(e,n,a),e=e.sibling}(t,n,e)}function li(t,e,n){for(var a,r,s=e,i=!1;;){if(!i){i=s.return;t:for(;;){if(null===i)throw Error(o(160));switch(a=i.stateNode,i.tag){case 5:r=!1;break t;case 3:case 4:a=a.containerInfo,r=!0;break t}i=i.return}i=!0}if(5===s.tag||6===s.tag){t:for(var c=t,u=s,l=n,d=u;;)if(oi(c,d,l),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===u)break t;for(;null===d.sibling;){if(null===d.return||d.return===u)break t;d=d.return}d.sibling.return=d.return,d=d.sibling}r?(c=a,u=s.stateNode,8===c.nodeType?c.parentNode.removeChild(u):c.removeChild(u)):a.removeChild(s.stateNode)}else if(4===s.tag){if(null!==s.child){a=s.stateNode.containerInfo,r=!0,s.child.return=s,s=s.child;continue}}else if(oi(t,s,n),null!==s.child){s.child.return=s,s=s.child;continue}if(s===e)break;for(;null===s.sibling;){if(null===s.return||s.return===e)return;4===(s=s.return).tag&&(i=!1)}s.sibling.return=s.return,s=s.sibling}}function di(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:return void ai(3,e);case 1:return;case 5:var n=e.stateNode;if(null!=n){var a=e.memoizedProps,r=null!==t?t.memoizedProps:a;t=e.type;var s=e.updateQueue;if(e.updateQueue=null,null!==s){for(n[In]=a,"input"===t&&"radio"===a.type&&null!=a.name&&Nt(n,a),sn(t,r),e=sn(t,a),r=0;r<s.length;r+=2){var i=s[r],c=s[r+1];"style"===i?nn(n,c):"dangerouslySetInnerHTML"===i?Pt(n,c):"children"===i?Bt(n,c):Z(n,i,c,e)}switch(t){case"input":It(n,a);break;case"textarea":_t(n,a);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!a.multiple,null!=(t=a.value)?Ct(n,!!a.multiple,t,!1):e!==!!a.multiple&&(null!=a.defaultValue?Ct(n,!!a.multiple,a.defaultValue,!0):Ct(n,!!a.multiple,a.multiple?[]:"",!1))}}}return;case 6:if(null===e.stateNode)throw Error(o(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return void((e=e.stateNode).hydrate&&(e.hydrate=!1,Me(e.containerInfo)));case 12:return;case 13:if(n=e,null===e.memoizedState?a=!1:(a=!0,n=e.child,Di=Pr()),null!==n)t:for(t=n;;){if(5===t.tag)s=t.stateNode,a?"function"===typeof(s=s.style).setProperty?s.setProperty("display","none","important"):s.display="none":(s=t.stateNode,r=void 0!==(r=t.memoizedProps.style)&&null!==r&&r.hasOwnProperty("display")?r.display:null,s.style.display=en("display",r));else if(6===t.tag)t.stateNode.nodeValue=a?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(s=t.child.sibling).return=t,t=s;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}return void pi(e);case 19:return void pi(e);case 17:return}throw Error(o(163))}function pi(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new $o),e.forEach((function(e){var a=vc.bind(null,t,e);n.has(e)||(n.add(e),e.then(a,a))}))}}var hi="function"===typeof WeakMap?WeakMap:Map;function fi(t,e,n){(n=is(n,null)).tag=3,n.payload={element:null};var a=e.value;return n.callback=function(){Mi||(Mi=!0,zi=a),ti(t,e)},n}function mi(t,e,n){(n=is(n,null)).tag=3;var a=t.type.getDerivedStateFromError;if("function"===typeof a){var r=e.value;n.payload=function(){return ti(t,e),a(r)}}var s=t.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){"function"!==typeof a&&(null===Li?Li=new Set([this]):Li.add(this),ti(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var bi,gi=Math.ceil,yi=Q.ReactCurrentDispatcher,xi=Q.ReactCurrentOwner,vi=0,wi=3,ki=4,Oi=0,Ni=null,Ii=null,Si=0,Ti=vi,ji=null,Ci=1073741823,Ei=1073741823,Ai=null,_i=0,Ri=!1,Di=0,Fi=null,Mi=!1,zi=null,Li=null,Pi=!1,Bi=null,Wi=90,Vi=null,Ui=0,Gi=null,Hi=0;function qi(){return 0!==(48&Oi)?1073741821-(Pr()/10|0):0!==Hi?Hi:Hi=1073741821-(Pr()/10|0)}function Ki(t,e,n){if(0===(2&(e=e.mode)))return 1073741823;var a=Br();if(0===(4&e))return 99===a?1073741823:1073741822;if(0!==(16&Oi))return Si;if(null!==n)t=Kr(t,0|n.timeoutMs||5e3,250);else switch(a){case 99:t=1073741823;break;case 98:t=Kr(t,150,100);break;case 97:case 96:t=Kr(t,5e3,250);break;case 95:t=2;break;default:throw Error(o(326))}return null!==Ni&&t===Si&&--t,t}function Xi(t,e){if(50<Ui)throw Ui=0,Gi=null,Error(o(185));if(null!==(t=Yi(t,e))){var n=Br();1073741823===e?0!==(8&Oi)&&0===(48&Oi)?$i(t):(Zi(t),0===Oi&&Hr()):Zi(t),0===(4&Oi)||98!==n&&99!==n||(null===Vi?Vi=new Map([[t,e]]):(void 0===(n=Vi.get(t))||n>e)&&Vi.set(t,e))}}function Yi(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var a=t.return,r=null;if(null===a&&3===t.tag)r=t.stateNode;else for(;null!==a;){if(n=a.alternate,a.childExpirationTime<e&&(a.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===a.return&&3===a.tag){r=a.stateNode;break}a=a.return}return null!==r&&(Ni===r&&(oc(e),Ti===ki&&Rc(r,Si)),Dc(r,e)),r}function Qi(t){var e=t.lastExpiredTime;if(0!==e)return e;if(!_c(t,e=t.firstPendingTime))return e;var n=t.lastPingedTime;return 2>=(t=n>(t=t.nextKnownPendingLevel)?n:t)&&e!==t?0:t}function Zi(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Gr($i.bind(null,t));else{var e=Qi(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var a=qi();if(1073741823===e?a=99:1===e||2===e?a=95:a=0>=(a=10*(1073741821-e)-10*(1073741821-a))?99:250>=a?98:5250>=a?97:95,null!==n){var r=t.callbackPriority;if(t.callbackExpirationTime===e&&r>=a)return;n!==_r&&Or(n)}t.callbackExpirationTime=e,t.callbackPriority=a,e=1073741823===e?Gr($i.bind(null,t)):Ur(a,Ji.bind(null,t),{timeout:10*(1073741821-e)-Pr()}),t.callbackNode=e}}}function Ji(t,e){if(Hi=0,e)return Fc(t,e=qi()),Zi(t),null;var n=Qi(t);if(0!==n){if(e=t.callbackNode,0!==(48&Oi))throw Error(o(327));if(mc(),t===Ni&&n===Si||nc(t,n),null!==Ii){var a=Oi;Oi|=16;for(var r=rc();;)try{cc();break}catch(c){ac(t,c)}if($r(),Oi=a,yi.current=r,1===Ti)throw e=ji,nc(t,n),Rc(t,n),Zi(t),e;if(null===Ii)switch(r=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,a=Ti,Ni=null,a){case vi:case 1:throw Error(o(345));case 2:Fc(t,2<n?2:n);break;case wi:if(Rc(t,n),n===(a=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=dc(r)),1073741823===Ci&&10<(r=Di+500-Pr())){if(Ri){var s=t.lastPingedTime;if(0===s||s>=n){t.lastPingedTime=n,nc(t,n);break}}if(0!==(s=Qi(t))&&s!==n)break;if(0!==a&&a!==n){t.lastPingedTime=a;break}t.timeoutHandle=xn(pc.bind(null,t),r);break}pc(t);break;case ki:if(Rc(t,n),n===(a=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=dc(r)),Ri&&(0===(r=t.lastPingedTime)||r>=n)){t.lastPingedTime=n,nc(t,n);break}if(0!==(r=Qi(t))&&r!==n)break;if(0!==a&&a!==n){t.lastPingedTime=a;break}if(1073741823!==Ei?a=10*(1073741821-Ei)-Pr():1073741823===Ci?a=0:(a=10*(1073741821-Ci)-5e3,0>(a=(r=Pr())-a)&&(a=0),(n=10*(1073741821-n)-r)<(a=(120>a?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*gi(a/1960))-a)&&(a=n)),10<a){t.timeoutHandle=xn(pc.bind(null,t),a);break}pc(t);break;case 5:if(1073741823!==Ci&&null!==Ai){s=Ci;var i=Ai;if(0>=(a=0|i.busyMinDurationMs)?a=0:(r=0|i.busyDelayMs,a=(s=Pr()-(10*(1073741821-s)-(0|i.timeoutMs||5e3)))<=r?0:r+a-s),10<a){Rc(t,n),t.timeoutHandle=xn(pc.bind(null,t),a);break}}pc(t);break;default:throw Error(o(329))}if(Zi(t),t.callbackNode===e)return Ji.bind(null,t)}}return null}function $i(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,0!==(48&Oi))throw Error(o(327));if(mc(),t===Ni&&e===Si||nc(t,e),null!==Ii){var n=Oi;Oi|=16;for(var a=rc();;)try{ic();break}catch(r){ac(t,r)}if($r(),Oi=n,yi.current=a,1===Ti)throw n=ji,nc(t,e),Rc(t,e),Zi(t),n;if(null!==Ii)throw Error(o(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,Ni=null,pc(t),Zi(t)}return null}function tc(t,e){var n=Oi;Oi|=1;try{return t(e)}finally{0===(Oi=n)&&Hr()}}function ec(t,e){var n=Oi;Oi&=-2,Oi|=8;try{return t(e)}finally{0===(Oi=n)&&Hr()}}function nc(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,vn(n)),null!==Ii)for(n=Ii.return;null!==n;){var a=n;switch(a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&br();break;case 3:_s(),cr(pr),cr(dr);break;case 5:Ds(a);break;case 4:_s();break;case 13:case 19:cr(Fs);break;case 10:ts(a)}n=n.return}Ni=t,Ii=Sc(t.current,null),Si=e,Ti=vi,ji=null,Ei=Ci=1073741823,Ai=null,_i=0,Ri=!1}function ac(t,e){for(;;){try{if($r(),Ls.current=bo,Gs)for(var n=Ws.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}if(Bs=0,Us=Vs=Ws=null,Gs=!1,null===Ii||null===Ii.return)return Ti=1,ji=e,Ii=null;t:{var r=t,s=Ii.return,o=Ii,i=e;if(e=Si,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==i&&"object"===typeof i&&"function"===typeof i.then){var c=i;if(0===(2&o.mode)){var u=o.alternate;u?(o.updateQueue=u.updateQueue,o.memoizedState=u.memoizedState,o.expirationTime=u.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var l=0!==(1&Fs.current),d=s;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var f=d.memoizedProps;p=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(p){var m=d.updateQueue;if(null===m){var b=new Set;b.add(c),d.updateQueue=b}else m.add(c);if(0===(2&d.mode)){if(d.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var g=is(1073741823,null);g.tag=2,cs(o,g)}o.expirationTime=1073741823;break t}i=void 0,o=e;var y=r.pingCache;if(null===y?(y=r.pingCache=new hi,i=new Set,y.set(c,i)):void 0===(i=y.get(c))&&(i=new Set,y.set(c,i)),!i.has(o)){i.add(o);var x=xc.bind(null,r,c,o);c.then(x,x)}d.effectTag|=4096,d.expirationTime=e;break t}d=d.return}while(null!==d);i=Error((bt(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+gt(o))}5!==Ti&&(Ti=2),i=Jo(i,o),d=s;do{switch(d.tag){case 3:c=i,d.effectTag|=4096,d.expirationTime=e,us(d,fi(d,c,e));break t;case 1:c=i;var v=d.type,w=d.stateNode;if(0===(64&d.effectTag)&&("function"===typeof v.getDerivedStateFromError||null!==w&&"function"===typeof w.componentDidCatch&&(null===Li||!Li.has(w)))){d.effectTag|=4096,d.expirationTime=e,us(d,mi(d,c,e));break t}}d=d.return}while(null!==d)}Ii=lc(Ii)}catch(k){e=k;continue}break}}function rc(){var t=yi.current;return yi.current=bo,null===t?bo:t}function sc(t,e){t<Ci&&2<t&&(Ci=t),null!==e&&t<Ei&&2<t&&(Ei=t,Ai=e)}function oc(t){t>_i&&(_i=t)}function ic(){for(;null!==Ii;)Ii=uc(Ii)}function cc(){for(;null!==Ii&&!Rr();)Ii=uc(Ii)}function uc(t){var e=bi(t.alternate,t,Si);return t.memoizedProps=t.pendingProps,null===e&&(e=lc(t)),xi.current=null,e}function lc(t){Ii=t;do{var e=Ii.alternate;if(t=Ii.return,0===(2048&Ii.effectTag)){if(e=Qo(e,Ii,Si),1===Si||1!==Ii.childExpirationTime){for(var n=0,a=Ii.child;null!==a;){var r=a.expirationTime,s=a.childExpirationTime;r>n&&(n=r),s>n&&(n=s),a=a.sibling}Ii.childExpirationTime=n}if(null!==e)return e;null!==t&&0===(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=Ii.firstEffect),null!==Ii.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=Ii.firstEffect),t.lastEffect=Ii.lastEffect),1<Ii.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=Ii:t.firstEffect=Ii,t.lastEffect=Ii))}else{if(null!==(e=Zo(Ii)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=Ii.sibling))return e;Ii=t}while(null!==Ii);return Ti===vi&&(Ti=5),null}function dc(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function pc(t){var e=Br();return Vr(99,hc.bind(null,t,e)),null}function hc(t,e){do{mc()}while(null!==Bi);if(0!==(48&Oi))throw Error(o(327));var n=t.finishedWork,a=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw Error(o(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var r=dc(n);if(t.firstPendingTime=r,a<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:a<=t.firstSuspendedTime&&(t.firstSuspendedTime=a-1),a<=t.lastPingedTime&&(t.lastPingedTime=0),a<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===Ni&&(Ii=Ni=null,Si=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){var s=Oi;Oi|=32,xi.current=null,mn=qe;var i=hn();if(fn(i)){if("selectionStart"in i)var c={start:i.selectionStart,end:i.selectionEnd};else t:{var u=(c=(c=i.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(u&&0!==u.rangeCount){c=u.anchorNode;var l=u.anchorOffset,d=u.focusNode;u=u.focusOffset;try{c.nodeType,d.nodeType}catch(S){c=null;break t}var p=0,h=-1,f=-1,m=0,b=0,g=i,y=null;e:for(;;){for(var x;g!==c||0!==l&&3!==g.nodeType||(h=p+l),g!==d||0!==u&&3!==g.nodeType||(f=p+u),3===g.nodeType&&(p+=g.nodeValue.length),null!==(x=g.firstChild);)y=g,g=x;for(;;){if(g===i)break e;if(y===c&&++m===l&&(h=p),y===d&&++b===u&&(f=p),null!==(x=g.nextSibling))break;y=(g=y).parentNode}g=x}c=-1===h||-1===f?null:{start:h,end:f}}else c=null}c=c||{start:0,end:0}}else c=null;bn={activeElementDetached:null,focusedElem:i,selectionRange:c},qe=!1,Fi=r;do{try{fc()}catch(S){if(null===Fi)throw Error(o(330));yc(Fi,S),Fi=Fi.nextEffect}}while(null!==Fi);Fi=r;do{try{for(i=t,c=e;null!==Fi;){var v=Fi.effectTag;if(16&v&&Bt(Fi.stateNode,""),128&v){var w=Fi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&v){case 2:ui(Fi),Fi.effectTag&=-3;break;case 6:ui(Fi),Fi.effectTag&=-3,di(Fi.alternate,Fi);break;case 1024:Fi.effectTag&=-1025;break;case 1028:Fi.effectTag&=-1025,di(Fi.alternate,Fi);break;case 4:di(Fi.alternate,Fi);break;case 8:li(i,l=Fi,c),ii(l)}Fi=Fi.nextEffect}}catch(S){if(null===Fi)throw Error(o(330));yc(Fi,S),Fi=Fi.nextEffect}}while(null!==Fi);if(k=bn,w=hn(),v=k.focusedElem,c=k.selectionRange,w!==v&&v&&v.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(v.ownerDocument.documentElement,v)){null!==c&&fn(v)&&(w=c.start,void 0===(k=c.end)&&(k=w),"selectionStart"in v?(v.selectionStart=w,v.selectionEnd=Math.min(k,v.value.length)):(k=(w=v.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),l=v.textContent.length,i=Math.min(c.start,l),c=void 0===c.end?i:Math.min(c.end,l),!k.extend&&i>c&&(l=c,c=i,i=l),l=pn(v,i),d=pn(v,c),l&&d&&(1!==k.rangeCount||k.anchorNode!==l.node||k.anchorOffset!==l.offset||k.focusNode!==d.node||k.focusOffset!==d.offset)&&((w=w.createRange()).setStart(l.node,l.offset),k.removeAllRanges(),i>c?(k.addRange(w),k.extend(d.node,d.offset)):(w.setEnd(d.node,d.offset),k.addRange(w))))),w=[];for(k=v;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof v.focus&&v.focus(),v=0;v<w.length;v++)(k=w[v]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qe=!!mn,bn=mn=null,t.current=n,Fi=r;do{try{for(v=t;null!==Fi;){var O=Fi.effectTag;if(36&O&&si(v,Fi.alternate,Fi),128&O){w=void 0;var N=Fi.ref;if(null!==N){var I=Fi.stateNode;switch(Fi.tag){case 5:w=I;break;default:w=I}"function"===typeof N?N(w):N.current=w}}Fi=Fi.nextEffect}}catch(S){if(null===Fi)throw Error(o(330));yc(Fi,S),Fi=Fi.nextEffect}}while(null!==Fi);Fi=null,Dr(),Oi=s}else t.current=n;if(Pi)Pi=!1,Bi=t,Wi=e;else for(Fi=r;null!==Fi;)e=Fi.nextEffect,Fi.nextEffect=null,Fi=e;if(0===(e=t.firstPendingTime)&&(Li=null),1073741823===e?t===Gi?Ui++:(Ui=0,Gi=t):Ui=0,"function"===typeof wc&&wc(n.stateNode,a),Zi(t),Mi)throw Mi=!1,t=zi,zi=null,t;return 0!==(8&Oi)||Hr(),null}function fc(){for(;null!==Fi;){var t=Fi.effectTag;0!==(256&t)&&ni(Fi.alternate,Fi),0===(512&t)||Pi||(Pi=!0,Ur(97,(function(){return mc(),null}))),Fi=Fi.nextEffect}}function mc(){if(90!==Wi){var t=97<Wi?97:Wi;return Wi=90,Vr(t,bc)}}function bc(){if(null===Bi)return!1;var t=Bi;if(Bi=null,0!==(48&Oi))throw Error(o(331));var e=Oi;for(Oi|=32,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ai(5,n),ri(5,n)}}catch(a){if(null===t)throw Error(o(330));yc(t,a)}n=t.nextEffect,t.nextEffect=null,t=n}return Oi=e,Hr(),!0}function gc(t,e,n){cs(t,e=fi(t,e=Jo(n,e),1073741823)),null!==(t=Yi(t,1073741823))&&Zi(t)}function yc(t,e){if(3===t.tag)gc(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){gc(n,t,e);break}if(1===n.tag){var a=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Li||!Li.has(a))){cs(n,t=mi(n,t=Jo(e,t),1073741823)),null!==(n=Yi(n,1073741823))&&Zi(n);break}}n=n.return}}function xc(t,e,n){var a=t.pingCache;null!==a&&a.delete(e),Ni===t&&Si===n?Ti===ki||Ti===wi&&1073741823===Ci&&Pr()-Di<500?nc(t,Si):Ri=!0:_c(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,Zi(t)))}function vc(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(e=Ki(e=qi(),t,null)),null!==(t=Yi(t,e))&&Zi(t)}bi=function(t,e,n){var a=e.expirationTime;if(null!==t){var r=e.pendingProps;if(t.memoizedProps!==r||pr.current)Eo=!0;else{if(a<n){switch(Eo=!1,e.tag){case 3:Po(e),jo();break;case 5:if(Rs(e),4&e.mode&&1!==n&&r.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:mr(e.type)&&xr(e);break;case 4:As(e,e.stateNode.containerInfo);break;case 10:a=e.memoizedProps.value,r=e.type._context,ur(Yr,r._currentValue),r._currentValue=a;break;case 13:if(null!==e.memoizedState)return 0!==(a=e.child.childExpirationTime)&&a>=n?Go(t,e,n):(ur(Fs,1&Fs.current),null!==(e=Xo(t,e,n))?e.sibling:null);ur(Fs,1&Fs.current);break;case 19:if(a=e.childExpirationTime>=n,0!==(64&t.effectTag)){if(a)return Ko(t,e,n);e.effectTag|=64}if(null!==(r=e.memoizedState)&&(r.rendering=null,r.tail=null),ur(Fs,Fs.current),!a)return null}return Xo(t,e,n)}Eo=!1}}else Eo=!1;switch(e.expirationTime=0,e.tag){case 2:if(a=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,r=fr(e,dr.current),ns(e,n),r=Ks(null,e,a,t,r,n),e.effectTag|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,mr(a)){var s=!0;xr(e)}else s=!1;e.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,ss(e);var i=a.getDerivedStateFromProps;"function"===typeof i&&fs(e,a,i,t),r.updater=ms,e.stateNode=r,r._reactInternalFiber=e,xs(e,a,t,n),e=Lo(null,e,a,!0,s,n)}else e.tag=0,Ao(null,e,r,n),e=e.child;return e;case 16:t:{if(r=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(r),1!==r._status)throw r._result;switch(r=r._result,e.type=r,s=e.tag=function(t){if("function"===typeof t)return Ic(t)?1:0;if(void 0!==t&&null!==t){if((t=t.$$typeof)===ct)return 11;if(t===dt)return 14}return 2}(r),t=Xr(r,t),s){case 0:e=Mo(null,e,r,t,n);break t;case 1:e=zo(null,e,r,t,n);break t;case 11:e=_o(null,e,r,t,n);break t;case 14:e=Ro(null,e,r,Xr(r.type,t),a,n);break t}throw Error(o(306,r,""))}return e;case 0:return a=e.type,r=e.pendingProps,Mo(t,e,a,r=e.elementType===a?r:Xr(a,r),n);case 1:return a=e.type,r=e.pendingProps,zo(t,e,a,r=e.elementType===a?r:Xr(a,r),n);case 3:if(Po(e),a=e.updateQueue,null===t||null===a)throw Error(o(282));if(a=e.pendingProps,r=null!==(r=e.memoizedState)?r.element:null,os(t,e),ls(e,a,null,n),(a=e.memoizedState.element)===r)jo(),e=Xo(t,e,n);else{if((r=e.stateNode.hydrate)&&(wo=wn(e.stateNode.containerInfo.firstChild),vo=e,r=ko=!0),r)for(n=Is(e,null,a,n),e.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ao(t,e,a,n),jo();e=e.child}return e;case 5:return Rs(e),null===t&&Io(e),a=e.type,r=e.pendingProps,s=null!==t?t.memoizedProps:null,i=r.children,yn(a,r)?i=null:null!==s&&yn(a,s)&&(e.effectTag|=16),Fo(t,e),4&e.mode&&1!==n&&r.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(Ao(t,e,i,n),e=e.child),e;case 6:return null===t&&Io(e),null;case 13:return Go(t,e,n);case 4:return As(e,e.stateNode.containerInfo),a=e.pendingProps,null===t?e.child=Ns(e,null,a,n):Ao(t,e,a,n),e.child;case 11:return a=e.type,r=e.pendingProps,_o(t,e,a,r=e.elementType===a?r:Xr(a,r),n);case 7:return Ao(t,e,e.pendingProps,n),e.child;case 8:case 12:return Ao(t,e,e.pendingProps.children,n),e.child;case 10:t:{a=e.type._context,r=e.pendingProps,i=e.memoizedProps,s=r.value;var c=e.type._context;if(ur(Yr,c._currentValue),c._currentValue=s,null!==i)if(c=i.value,0===(s=za(c,s)?0:0|("function"===typeof a._calculateChangedBits?a._calculateChangedBits(c,s):1073741823))){if(i.children===r.children&&!pr.current){e=Xo(t,e,n);break t}}else for(null!==(c=e.child)&&(c.return=e);null!==c;){var u=c.dependencies;if(null!==u){i=c.child;for(var l=u.firstContext;null!==l;){if(l.context===a&&0!==(l.observedBits&s)){1===c.tag&&((l=is(n,null)).tag=2,cs(c,l)),c.expirationTime<n&&(c.expirationTime=n),null!==(l=c.alternate)&&l.expirationTime<n&&(l.expirationTime=n),es(c.return,n),u.expirationTime<n&&(u.expirationTime=n);break}l=l.next}}else i=10===c.tag&&c.type===e.type?null:c.child;if(null!==i)i.return=c;else for(i=c;null!==i;){if(i===e){i=null;break}if(null!==(c=i.sibling)){c.return=i.return,i=c;break}i=i.return}c=i}Ao(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,a=(s=e.pendingProps).children,ns(e,n),a=a(r=as(r,s.unstable_observedBits)),e.effectTag|=1,Ao(t,e,a,n),e.child;case 14:return s=Xr(r=e.type,e.pendingProps),Ro(t,e,r,s=Xr(r.type,s),a,n);case 15:return Do(t,e,e.type,e.pendingProps,a,n);case 17:return a=e.type,r=e.pendingProps,r=e.elementType===a?r:Xr(a,r),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,mr(a)?(t=!0,xr(e)):t=!1,ns(e,n),gs(e,a,r),xs(e,a,r,n),Lo(null,e,a,!0,t,n);case 19:return Ko(t,e,n)}throw Error(o(156,e.tag))};var wc=null,kc=null;function Oc(t,e,n,a){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Nc(t,e,n,a){return new Oc(t,e,n,a)}function Ic(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Sc(t,e){var n=t.alternate;return null===n?((n=Nc(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Tc(t,e,n,a,r,s){var i=2;if(a=t,"function"===typeof t)Ic(t)&&(i=1);else if("string"===typeof t)i=5;else t:switch(t){case nt:return jc(n.children,r,s,e);case it:i=8,r|=7;break;case at:i=8,r|=1;break;case rt:return(t=Nc(12,n,e,8|r)).elementType=rt,t.type=rt,t.expirationTime=s,t;case ut:return(t=Nc(13,n,e,r)).type=ut,t.elementType=ut,t.expirationTime=s,t;case lt:return(t=Nc(19,n,e,r)).elementType=lt,t.expirationTime=s,t;default:if("object"===typeof t&&null!==t)switch(t.$$typeof){case st:i=10;break t;case ot:i=9;break t;case ct:i=11;break t;case dt:i=14;break t;case pt:i=16,a=null;break t;case ht:i=22;break t}throw Error(o(130,null==t?t:typeof t,""))}return(e=Nc(i,n,e,r)).elementType=t,e.type=a,e.expirationTime=s,e}function jc(t,e,n,a){return(t=Nc(7,t,a,e)).expirationTime=n,t}function Cc(t,e,n){return(t=Nc(6,t,null,e)).expirationTime=n,t}function Ec(t,e,n){return(e=Nc(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Ac(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function _c(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Rc(t,e){var n=t.firstSuspendedTime,a=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(a>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function Dc(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Fc(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function Mc(t,e,n,a){var r=e.current,s=qi(),i=ps.suspense;s=Ki(s,r,i);t:if(n){e:{if($t(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(o(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(mr(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(null!==c);throw Error(o(171))}if(1===n.tag){var u=n.type;if(mr(u)){n=yr(n,u,c);break t}}n=c}else n=lr;return null===e.context?e.context=n:e.pendingContext=n,(e=is(s,i)).payload={element:t},null!==(a=void 0===a?null:a)&&(e.callback=a),cs(r,e),Xi(r,s),s}function zc(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Lc(t,e){null!==(t=t.memoizedState)&&null!==t.dehydrated&&t.retryTime<e&&(t.retryTime=e)}function Pc(t,e){Lc(t,e),(t=t.alternate)&&Lc(t,e)}function Bc(t,e,n){var a=new Ac(t,e,n=null!=n&&!0===n.hydrate),r=Nc(3,null,null,2===e?7:1===e?3:0);a.current=r,r.stateNode=a,ss(r),t[Sn]=a.current,n&&0!==e&&function(t,e){var n=Jt(e);Se.forEach((function(t){fe(t,e,n)})),Te.forEach((function(t){fe(t,e,n)}))}(0,9===t.nodeType?t:t.ownerDocument),this._internalRoot=a}function Wc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Vc(t,e,n,a,r){var s=n._reactRootContainer;if(s){var o=s._internalRoot;if("function"===typeof r){var i=r;r=function(){var t=zc(o);i.call(t)}}Mc(e,o,t,r)}else{if(s=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Bc(t,0,e?{hydrate:!0}:void 0)}(n,a),o=s._internalRoot,"function"===typeof r){var c=r;r=function(){var t=zc(o);c.call(t)}}ec((function(){Mc(e,o,t,r)}))}return zc(o)}function Uc(t,e,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:et,key:null==a?null:""+a,children:t,containerInfo:e,implementation:n}}function Gc(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Wc(e))throw Error(o(200));return Uc(t,e,null,n)}Bc.prototype.render=function(t){Mc(t,this._internalRoot,null,null)},Bc.prototype.unmount=function(){var t=this._internalRoot,e=t.containerInfo;Mc(null,t,null,(function(){e[Sn]=null}))},me=function(t){if(13===t.tag){var e=Kr(qi(),150,100);Xi(t,e),Pc(t,e)}},be=function(t){13===t.tag&&(Xi(t,3),Pc(t,3))},ge=function(t){if(13===t.tag){var e=qi();Xi(t,e=Ki(e,t,null)),Pc(t,e)}},j=function(t,e,n){switch(e){case"input":if(It(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var a=n[e];if(a!==t&&a.form===t.form){var r=En(a);if(!r)throw Error(o(90));wt(a),It(a,r)}}}break;case"textarea":_t(t,n);break;case"select":null!=(e=n.value)&&Ct(t,!!n.multiple,e,!1)}},D=tc,F=function(t,e,n,a,r){var s=Oi;Oi|=4;try{return Vr(98,t.bind(null,e,n,a,r))}finally{0===(Oi=s)&&Hr()}},M=function(){0===(49&Oi)&&(function(){if(null!==Vi){var t=Vi;Vi=null,t.forEach((function(t,e){Fc(e,t),Zi(e)})),Hr()}}(),mc())},z=function(t,e){var n=Oi;Oi|=2;try{return t(e)}finally{0===(Oi=n)&&Hr()}};var Hc={Events:[jn,Cn,En,S,O,zn,function(t){re(t,Mn)},_,R,Ze,ie,mc,{current:!1}]};!function(t){var e=t.findFiberByHostInstance;(function(t){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);wc=function(t){try{e.onCommitFiberRoot(n,t,void 0,64===(64&t.current.effectTag))}catch(a){}},kc=function(t){try{e.onCommitFiberUnmount(n,t)}catch(a){}}}catch(a){}})(r({},t,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Q.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=ne(t))?null:t.stateNode},findFiberByHostInstance:function(t){return e?e(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}),e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Hc,e.createPortal=Gc,e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;if(void 0===e){if("function"===typeof t.render)throw Error(o(188));throw Error(o(268,Object.keys(t)))}return t=null===(t=ne(e))?null:t.stateNode},e.flushSync=function(t,e){if(0!==(48&Oi))throw Error(o(187));var n=Oi;Oi|=1;try{return Vr(99,t.bind(null,e))}finally{Oi=n,Hr()}},e.hydrate=function(t,e,n){if(!Wc(e))throw Error(o(200));return Vc(null,t,e,!0,n)},e.render=function(t,e,n){if(!Wc(e))throw Error(o(200));return Vc(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!Wc(t))throw Error(o(40));return!!t._reactRootContainer&&(ec((function(){Vc(null,null,t,!1,(function(){t._reactRootContainer=null,t[Sn]=null}))})),!0)},e.unstable_batchedUpdates=tc,e.unstable_createPortal=function(t,e){return Gc(t,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(t,e,n,a){if(!Wc(n))throw Error(o(200));if(null==t||void 0===t._reactInternalFiber)throw Error(o(38));return Vc(t,e,n,!1,a)},e.version="16.13.1"},function(t,e,n){"use strict";t.exports=n(236)},function(t,e,n){"use strict";var a,r,s,o,i;if("undefined"===typeof window||"function"!==typeof MessageChannel){var c=null,u=null,l=function(){if(null!==c)try{var t=e.unstable_now();c(!0,t),c=null}catch(n){throw setTimeout(l,0),n}},d=Date.now();e.unstable_now=function(){return Date.now()-d},a=function(t){null!==c?setTimeout(a,0,t):(c=t,setTimeout(l,0))},r=function(t,e){u=setTimeout(t,e)},s=function(){clearTimeout(u)},o=function(){return!1},i=e.unstable_forceFrameRate=function(){}}else{var p=window.performance,h=window.Date,f=window.setTimeout,m=window.clearTimeout;if("undefined"!==typeof console){var b=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof p&&"function"===typeof p.now)e.unstable_now=function(){return p.now()};else{var g=h.now();e.unstable_now=function(){return h.now()-g}}var y=!1,x=null,v=-1,w=5,k=0;o=function(){return e.unstable_now()>=k},i=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<t?Math.floor(1e3/t):5};var O=new MessageChannel,N=O.port2;O.port1.onmessage=function(){if(null!==x){var t=e.unstable_now();k=t+w;try{x(!0,t)?N.postMessage(null):(y=!1,x=null)}catch(n){throw N.postMessage(null),n}}else y=!1},a=function(t){x=t,y||(y=!0,N.postMessage(null))},r=function(t,n){v=f((function(){t(e.unstable_now())}),n)},s=function(){m(v),v=-1}}function I(t,e){var n=t.length;t.push(e);t:for(;;){var a=n-1>>>1,r=t[a];if(!(void 0!==r&&0<j(r,e)))break t;t[a]=e,t[n]=r,n=a}}function S(t){return void 0===(t=t[0])?null:t}function T(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var a=0,r=t.length;a<r;){var s=2*(a+1)-1,o=t[s],i=s+1,c=t[i];if(void 0!==o&&0>j(o,n))void 0!==c&&0>j(c,o)?(t[a]=c,t[i]=n,a=i):(t[a]=o,t[s]=n,a=s);else{if(!(void 0!==c&&0>j(c,n)))break t;t[a]=c,t[i]=n,a=i}}}return e}return null}function j(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var C=[],E=[],A=1,_=null,R=3,D=!1,F=!1,M=!1;function z(t){for(var e=S(E);null!==e;){if(null===e.callback)T(E);else{if(!(e.startTime<=t))break;T(E),e.sortIndex=e.expirationTime,I(C,e)}e=S(E)}}function L(t){if(M=!1,z(t),!F)if(null!==S(C))F=!0,a(P);else{var e=S(E);null!==e&&r(L,e.startTime-t)}}function P(t,n){F=!1,M&&(M=!1,s()),D=!0;var a=R;try{for(z(n),_=S(C);null!==_&&(!(_.expirationTime>n)||t&&!o());){var i=_.callback;if(null!==i){_.callback=null,R=_.priorityLevel;var c=i(_.expirationTime<=n);n=e.unstable_now(),"function"===typeof c?_.callback=c:_===S(C)&&T(C),z(n)}else T(C);_=S(C)}if(null!==_)var u=!0;else{var l=S(E);null!==l&&r(L,l.startTime-n),u=!1}return u}finally{_=null,R=a,D=!1}}function B(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=i;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){F||D||(F=!0,a(P))},e.unstable_getCurrentPriorityLevel=function(){return R},e.unstable_getFirstCallbackNode=function(){return S(C)},e.unstable_next=function(t){switch(R){case 1:case 2:case 3:var e=3;break;default:e=R}var n=R;R=e;try{return t()}finally{R=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=W,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=R;R=t;try{return e()}finally{R=n}},e.unstable_scheduleCallback=function(t,n,o){var i=e.unstable_now();if("object"===typeof o&&null!==o){var c=o.delay;c="number"===typeof c&&0<c?i+c:i,o="number"===typeof o.timeout?o.timeout:B(t)}else o=B(t),c=i;return t={id:A++,callback:n,priorityLevel:t,startTime:c,expirationTime:o=c+o,sortIndex:-1},c>i?(t.sortIndex=c,I(E,t),null===S(C)&&t===S(E)&&(M?s():M=!0,r(L,c-i))):(t.sortIndex=o,I(C,t),F||D||(F=!0,a(P))),t},e.unstable_shouldYield=function(){var t=e.unstable_now();z(t);var n=S(C);return n!==_&&null!==_&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<_.expirationTime||o()},e.unstable_wrapCallback=function(t){var e=R;return function(){var n=R;R=e;try{return t.apply(this,arguments)}finally{R=n}}}},,function(t,e,n){"use strict";e.byteLength=function(t){var e=u(t),n=e[0],a=e[1];return 3*(n+a)/4-a},e.toByteArray=function(t){var e,n,a=u(t),o=a[0],i=a[1],c=new s(function(t,e,n){return 3*(e+n)/4-n}(0,o,i)),l=0,d=i>0?o-4:o;for(n=0;n<d;n+=4)e=r[t.charCodeAt(n)]<<18|r[t.charCodeAt(n+1)]<<12|r[t.charCodeAt(n+2)]<<6|r[t.charCodeAt(n+3)],c[l++]=e>>16&255,c[l++]=e>>8&255,c[l++]=255&e;2===i&&(e=r[t.charCodeAt(n)]<<2|r[t.charCodeAt(n+1)]>>4,c[l++]=255&e);1===i&&(e=r[t.charCodeAt(n)]<<10|r[t.charCodeAt(n+1)]<<4|r[t.charCodeAt(n+2)]>>2,c[l++]=e>>8&255,c[l++]=255&e);return c},e.fromByteArray=function(t){for(var e,n=t.length,r=n%3,s=[],o=0,i=n-r;o<i;o+=16383)s.push(l(t,o,o+16383>i?i:o+16383));1===r?(e=t[n-1],s.push(a[e>>2]+a[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(a[e>>10]+a[e>>4&63]+a[e<<2&63]+"="));return s.join("")};for(var a=[],r=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,c=o.length;i<c;++i)a[i]=o[i],r[o.charCodeAt(i)]=i;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var r,s,o=[],i=e;i<n;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),o.push(a[(s=r)>>18&63]+a[s>>12&63]+a[s>>6&63]+a[63&s]);return o.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,a,r){var s,o,i=8*r-a-1,c=(1<<i)-1,u=c>>1,l=-7,d=n?r-1:0,p=n?-1:1,h=t[e+d];for(d+=p,s=h&(1<<-l)-1,h>>=-l,l+=i;l>0;s=256*s+t[e+d],d+=p,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=a;l>0;o=256*o+t[e+d],d+=p,l-=8);if(0===s)s=1-u;else{if(s===c)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,a),s-=u}return(h?-1:1)*o*Math.pow(2,s-a)},e.write=function(t,e,n,a,r,s){var o,i,c,u=8*s-r-1,l=(1<<u)-1,d=l>>1,p=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,h=a?0:s-1,f=a?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(i=isNaN(e)?1:0,o=l):(o=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-o))<1&&(o--,c*=2),(e+=o+d>=1?p/c:p*Math.pow(2,1-d))*c>=2&&(o++,c/=2),o+d>=l?(i=0,o=l):o+d>=1?(i=(e*c-1)*Math.pow(2,r),o+=d):(i=e*Math.pow(2,d-1)*Math.pow(2,r),o=0));r>=8;t[n+h]=255&i,h+=f,i/=256,r-=8);for(o=o<<r|i,u+=r;u>0;t[n+h]=255&o,h+=f,o/=256,u-=8);t[n+h-f]|=128*m}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";(function(t){var e=n(22);const a=()=>n(242);let r;class s{constructor(){this.util=n(243),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==r&&(r=a()),r(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new s)}).call(this,n(130))},,,function(t,e,n){(function(t){var a;!function(t,r,s){function o(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new o(t),a=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n(55)&&n(98)?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.alea=c}(0,t,n(55))}).call(this,n(97)(t))},function(t,e,n){(function(t){var a;!function(t,r,s){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n(55)&&n(98)?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor128=c}(0,t,n(55))}).call(this,n(97)(t))},function(t,e,n){(function(t){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n(55)&&n(98)?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorwow=c}(0,t,n(55))}).call(this,n(97)(t))},function(t,e,n){(function(t){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.x,r=e.i;return t=a[r],n=(t^=t>>>7)^t<<24,n^=(t=a[r+1&7])^t>>>10,n^=(t=a[r+3&7])^t>>>3,n^=(t=a[r+4&7])^t<<7,t=a[r+7&7],n^=(t^=t<<13)^t<<9,a[r]=n,e.i=r+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n(55)&&n(98)?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorshift7=c}(0,t,n(55))}).call(this,n(97)(t))},function(t,e,n){(function(t){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.w,r=e.X,s=e.i;return e.w=a=a+1640531527|0,n=r[s+34&127],t=r[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[s]=n^t,e.i=s,n+(a^a>>>16)|0},function(t,e){var n,a,r,s,o,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),r=0,s=-32;s<c;++s)e&&(a^=e.charCodeAt((s+32)%e.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(e&&e.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;t.w=o,t.X=i,t.i=r}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n(55)&&n(98)?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor4096=c}(0,t,n(55))}).call(this,n(97)(t))},function(t,e,n){(function(t){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n(55)&&n(98)?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.tychei=c}(0,t,n(55))}).call(this,n(97)(t))},function(t,e,n){var a;!function(r,s){var o,i=this,c=s.pow(256,6),u=s.pow(2,52),l=2*u;function d(t,e,n){var a=[],d=f(function t(e,n){var a,r=[],s=typeof e;if(n&&"object"==s)for(a in e)try{r.push(t(e[a],n-1))}catch(o){}return r.length?r:"string"==s?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(r)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(256):(t=new Uint8Array(256),(i.crypto||i.msCrypto).getRandomValues(t)),m(t)}catch(a){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,m(r)]}}():t,3),a),b=new p(a),g=function(){for(var t=b.g(6),e=c,n=0;t<u;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),r),(e.pass||n||function(t,e,n,a){return a&&(a.S&&h(a,b),t.state=function(){return h(b,{})}),n?(s.random=t,e):t})(g,d,"global"in e?e.global:this==s,e.state)}function p(t){var e,n=t.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(t=[n++]);r<256;)o[r]=r++;for(r=0;r<256;r++)o[r]=o[s=255&s+t[r%n]+(e=o[r])],o[s]=e;(a.g=function(t){for(var e,n=0,r=a.i,s=a.j,o=a.S;t--;)e=o[r=255&r+1],n=256*n+o[255&(o[r]=o[s=255&s+e])+(o[s]=e)];return a.i=r,a.j=s,n})(256)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,a=t+"",r=0;r<a.length;)e[255&r]=255&(n^=19*e[255&r])+a.charCodeAt(r++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(s.seedrandom=d,f(s.random(),r),t.exports){t.exports=d;try{o=n(251)}catch(b){}}else void 0===(a=function(){return d}.call(e,n,e,t))||(t.exports=a)}([],Math)},,function(t,e,n){(function(t){var a="undefined"!==typeof t&&t||"undefined"!==typeof self&&self||window,r=Function.prototype.apply;function s(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new s(r.call(setTimeout,a,arguments),clearTimeout)},e.setInterval=function(){return new s(r.call(setInterval,a,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(a,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},n(253),e.setImmediate="undefined"!==typeof self&&self.setImmediate||"undefined"!==typeof t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!==typeof self&&self.clearImmediate||"undefined"!==typeof t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(129))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var a,r=1,s={},o=!1,i=t.document,c=Object.getPrototypeOf&&Object.getPrototypeOf(t);c=c&&c.setTimeout?c:t,"[object process]"==={}.toString.call(t.process)?a=function(t){e.nextTick((function(){l(t)}))}:function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"===typeof n.data&&0===n.data.indexOf(e)&&l(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),a=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){l(t.data)},a=function(e){t.port2.postMessage(e)}}():i&&"onreadystatechange"in i.createElement("script")?function(){var t=i.documentElement;a=function(e){var n=i.createElement("script");n.onreadystatechange=function(){l(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():a=function(t){setTimeout(l,0,t)},c.setImmediate=function(t){"function"!==typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return s[r]=o,a(r),r++},c.clearImmediate=u}function u(t){delete s[t]}function l(t){if(o)setTimeout(l,0,t);else{var e=s[t];if(e){o=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{u(t),o=!1}}}}}("undefined"===typeof self?"undefined"===typeof t?this:t:self)}).call(this,n(129),n(130))},,,,function(t,e,n){"use strict";var a={};n.r(a),n.d(a,"simpleAbsImpl",(function(){return Ns})),n.d(a,"addImpl",(function(){return ms})),n.d(a,"bincountImpl",(function(){return io})),n.d(a,"bincountReduceImpl",(function(){return co})),n.d(a,"ceilImpl",(function(){return po})),n.d(a,"concatImpl",(function(){return yo})),n.d(a,"expImpl",(function(){return ri})),n.d(a,"expm1Impl",(function(){return ui})),n.d(a,"floorImpl",(function(){return Ci})),n.d(a,"gatherV2Impl",(function(){return Li})),n.d(a,"greaterImpl",(function(){return Bi})),n.d(a,"lessImpl",(function(){return $i})),n.d(a,"linSpaceImpl",(function(){return sc})),n.d(a,"logImpl",(function(){return ic})),n.d(a,"maxImpl",(function(){return kc})),n.d(a,"maximumImpl",(function(){return Ic})),n.d(a,"minimumImpl",(function(){return zc})),n.d(a,"multiplyImpl",(function(){return pi})),n.d(a,"negImpl",(function(){return Kc})),n.d(a,"notEqualImpl",(function(){return eu})),n.d(a,"prodImpl",(function(){return fu})),n.d(a,"rangeImpl",(function(){return bu})),n.d(a,"rsqrtImpl",(function(){return ju})),n.d(a,"sliceImpl",(function(){return ao})),n.d(a,"squaredDifferenceImpl",(function(){return el})),n.d(a,"stridedSliceImpl",(function(){return ol})),n.d(a,"subImpl",(function(){return xi})),n.d(a,"tileImpl",(function(){return pl})),n.d(a,"topKImpl",(function(){return fl})),n.d(a,"transposeImpl",(function(){return As})),n.d(a,"uniqueImpl",(function(){return bl}));var r=n(0);let s;function o(){return null==s&&(s=Object(r.backend)().epsilon()),s}class i extends Error{constructor(t){super(t),Object.setPrototypeOf(this,i.prototype)}}class c extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c.prototype)}}class u extends Error{constructor(t){super(t),Object.setPrototypeOf(this,u.prototype)}}class l extends Error{constructor(t){super(t),Object.setPrototypeOf(this,l.prototype)}}class d extends Error{constructor(t){super(t),Object.setPrototypeOf(this,d.prototype)}}Error;function p(t,e){if(Array.isArray(t)){let n=[];for(let a=0;a<e;a++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function h(t,e){if(!t)throw new d(e)}function f(t,e){let n=0;for(const a of t)a===e&&n++;return n}function m(t){return 1===t.length?t[0]:t}function b(t){return Array.isArray(t)?t:[t]}function g(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function y(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let x={};function v(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function w(t,e={},n={},a="object",r=!1){if("string"===typeof t){const r=t;let s;if(r in n)s=n[r];else if(r in x)s=x[r];else if(s=e[r],null==s)throw new u("Unknown ".concat(a,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=t;if(null==s.className||null==s.config)throw new u("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in x?[i,c]=x.className:o in e&&([i,c]=e[o]),null==i)throw new u("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(x))t[n]=x[n];for(const r of Object.keys(n))t[r]=n[r];s.config.customObjects=t;const e=Object.assign({},x);for(const r of Object.keys(n))x[r]=n[r];!function t(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const a of n){const n=e[a];null!=n&&"object"===typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!==typeof n.value?t(n):e[a]=n.value)}}}(s.config);const a=c(i,s.config,n,r);return x=Object.assign({},e),a}{const t=Object.assign({},x);for(const a of Object.keys(n))x[a]=n[a];const e=new i(s.config);return x=Object.assign({},t),e}}}function k(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function O(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function N(t){if(null==t)throw new u("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function I(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new u("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function S(t,e,n=0,a=1/0){return h(n>=0),h(a>=n),Array.isArray(t)&&t.length>=n&&t.length<=a&&t.every(t=>typeof t===e)}function T(t,e){Array.isArray(t)?(r.util.assert(t.length>0,()=>"".concat(e," is unexpectedly an empty array.")),t.forEach((t,n)=>T(t,"element ".concat(n+1," of ").concat(e)))):r.util.assert(Number.isInteger(t)&&t>0,()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}(t),"."))}function j(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function C(t,e){return Object(r.tidy)(()=>r.sqrt(r.sum(r.mul(t,t),e,!0)))}class E extends r.serialization.Serializable{getConfig(){return{}}}class A extends E{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(r.tidy)(()=>{const e=C(t,this.axis),n=r.clipByValue(e,0,this.maxValue);return r.mul(t,r.div(n,r.add(o(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}A.className="MaxNorm",r.serialization.registerClass(A);class _ extends E{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(r.tidy)(()=>r.div(t,r.add(o(),C(t,this.axis))))}getConfig(){return{axis:this.axis}}}_.className="UnitNorm",r.serialization.registerClass(_);class R extends E{apply(t){return r.relu(t)}}R.className="NonNeg",r.serialization.registerClass(R);class D extends E{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(r.tidy)(()=>{const e=C(t,this.axis),n=r.add(r.mul(this.rate,r.clipByValue(e,this.minValue,this.maxValue)),r.mul(1-this.rate,e));return r.mul(t,r.div(n,r.add(o(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}D.className="MinMaxNorm",r.serialization.registerClass(D);const F={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function M(t){return v(t)}function z(t,e={}){return w(t,r.serialization.SerializationMap.getMap().classNameMap,e,"constraint")}function L(t){if(null==t)return null;if("string"===typeof t){return z({className:t in F?F[t]:t,config:{}})}return t instanceof E?t:z(t)}const P=["channelsFirst","channelsLast"],B=["nearest","bilinear"],W=["valid","same","causal"],V=["max","avg"],U=["sum","mul","concat","ave"],G=new Map;function H(t){I(P,"DataFormat",t)}function q(t){I(W,"PaddingMode",t)}function K(t){I(V,"PoolMode",t)}const X=[];function Y(t,e){X.push(t);try{const t=e();return X.pop(),t}catch(n){throw X.pop(),n}}function Q(t){if(!$(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===X.length?"":X.join("/")+"/")+t}function Z(t){if(!$(t))throw new Error("Not a valid tensor name: '"+t+"'");G.has(t)||G.set(t,0);const e=G.get(t);if(G.set(t,G.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return G.set(n,1),n}return t}const J=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function $(t){return!!t.match(J)}function tt(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let a=1;for(let r=e;r<n;++r)a*=t[r];return a}function et(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(r.tensor1d)(t)}function nt(t){return r.min(et(t)).dataSync()[0]}function at(t){return r.max(et(t)).dataSync()[0]}function rt(t,e){if(e<t)throw new u("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let a=t;a<e;++a)n.push(a);return n}function st(t,e){return t.asType(e)}function ot(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function it(t,e,n){return Object(r.tidy)(()=>{switch(t.rank){case 1:return r.slice1d(t,e,n);case 2:return r.slice2d(t,[e,0],[n,t.shape[1]]);case 3:return r.slice3d(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return r.slice4d(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return r.slice(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return r.slice(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new u("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function ct(t,e,n){return Object(r.tidy)(()=>{switch(t.rank){case 1:return r.slice1d(t,e,n);case 2:return r.slice2d(t,[0,e],[t.shape[0],n]);case 3:return r.slice3d(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return r.slice4d(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new u("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function ut(t,e,n,a){return Object(r.tidy)(()=>{switch(t.rank){case 1:return r.slice1d(t,e,n);case 2:switch(a){case 1:return it(t,e,n);case 2:return ct(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return it(t,e,n);case 2:return r.slice3d(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return ct(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return it(t,e,n);case 2:return r.slice4d(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return r.slice4d(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return ct(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new u("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function lt(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),r.concat(t,e)}function dt(t,e){switch(t.rank){case 1:return r.concat1d([t,e]);case 2:return r.concat2d([t,e],0);case 3:return r.concat3d([t,e],0);case 4:return r.concat4d([t,e],0);default:throw new u("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function pt(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new u("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return r.tile(t,e)}function ht(t,e=0,n=1,a,s){return r.randomNormal(t,e,n,a,s)}function ft(t,e,n,a){if(t.rank<2||e.rank<2)throw new l("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new l("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){const s=!1,o=!1;return r.fused.matMul({a:t,b:e,transposeA:s,transposeB:o,bias:a?gt(t.rank,a,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),o=s.pop();t=t.reshape([-1,o]);const i=e.shape.slice(),c=i.pop(),u=i.pop(),l=[...i,c],d=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(d).reshape([u,-1]);const p=[...s,...l],h=!1,f=!1;return r.fused.matMul({a:t,b:e,transposeA:h,transposeB:f,bias:a?gt(t.rank,a,"channelsLast"):null,activation:n}).reshape(p)}}function mt(t,e,n){return Object(r.tidy)(()=>(e=Array.isArray(e)?Object(r.tensor1d)(e,"int32"):e.toInt(),r.gather(t,e,n)))}function bt(t){return r.mul(t,t)}function gt(t,e,n){const a=e.shape;if(1!==e.rank&&e.rank!==t)throw new u("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===a.length?e.reshape([1,a[0],1,1,1]):e.reshape([1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?e.reshape([1,1,1,1,a[0]]):e.reshape([1].concat(a))}else if(4===t){if("channelsFirst"===n)return 1===a.length?e.reshape([1,a[0],1,1]):e.reshape([1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?e.reshape([1,1,1,a[0]]):e.reshape([1].concat(a))}else if(3===t){if("channelsFirst"===n)return 1===a.length?e.reshape([1,a[0],1]):e.reshape([1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?e.reshape([1,1,a[0]]):e.reshape([1].concat(a))}else if(t<3)return e;throw new u("Unsupported input rank by biasAdd: ".concat(e.rank))}function yt(t,e,n){return Object(r.tidy)(()=>(null==n&&(n="channelsLast"),H(n),t.add(gt(t.rank,e,n))))}function xt(t,e,n,a){return Object(r.tidy)(()=>r.dropout(t,e,n,a))}function vt(t,e,n=!1){return n?t():e()}const wt=["fanIn","fanOut","fanAvg"],kt=["normal","uniform","truncatedNormal"];class Ot extends r.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Nt extends Ot{apply(t,e){return Object(r.zeros)(t,e)}}Nt.className="Zeros",r.serialization.registerClass(Nt);class It extends Ot{apply(t,e){return Object(r.ones)(t,e)}}It.className="Ones",r.serialization.registerClass(It);class St extends Ot{constructor(t){if(super(),"object"!==typeof t)throw new u("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new u("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return Object(r.tidy)(()=>Object(r.mul)(Object(r.scalar)(this.value),Object(r.ones)(t,e)))}getConfig(){return{value:this.value}}}St.className="Constant",r.serialization.registerClass(St);class Tt extends Ot{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(r.randomUniform)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Tt.className="RandomUniform",r.serialization.registerClass(Tt);class jt extends Ot{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("randomNormal does not support dType ".concat(e,"."));return ht(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}jt.className="RandomNormal",r.serialization.registerClass(jt);class Ct extends Ot{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("truncatedNormal does not support dType ".concat(e,"."));return Object(r.truncatedNormal)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ct.className="TruncatedNormal",r.serialization.registerClass(Ct);class Et extends Ot{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(r.tidy)(()=>{if(2!==t.length||t[0]!==t[1])throw new u("Identity matrix initializer can only be used for 2D square matrices.");return Object(r.mul)(this.gain,Object(r.eye)(t[0]))})}getConfig(){return{gain:this.gain}}}Et.className="Identity",r.serialization.registerClass(Et);class At extends Ot{constructor(t){if(super(),t.scale<0)throw new u("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,I(wt,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){I(kt,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,a;if(H(e),2===t.length)n=t[0],a=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=tt(t,2);n=t[1]*e,a=t[0]*e}else if("channelsLast"===e){const e=tt(t,0,t.length-2);n=t[t.length-2]*e,a=t[t.length-1]*e}}else{const e=tt(t);n=Math.sqrt(e),a=Math.sqrt(e)}return[n,a]}(t),a=n[0],s=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,s):o/=Math.max(1,(a+s)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("".concat(this.getClassName()," does not support dType ").concat(e,"."));return Object(r.truncatedNormal)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*o);return Object(r.randomUniform)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}At.className="VarianceScaling",r.serialization.registerClass(At);class _t extends At{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return At.className}}_t.className="GlorotUniform",r.serialization.registerClass(_t);class Rt extends At{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return At.className}}Rt.className="GlorotNormal",r.serialization.registerClass(Rt);class Dt extends At{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return At.className}}Dt.className="HeNormal",r.serialization.registerClass(Dt);class Ft extends At{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return At.className}}Ft.className="HeUniform",r.serialization.registerClass(Ft);class Mt extends At{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return At.className}}Mt.className="LeCunNormal",r.serialization.registerClass(Mt);class zt extends At{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return At.className}}zt.className="LeCunNormal",r.serialization.registerClass(zt);class Lt extends Ot{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new l("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(r.tidy)(()=>{if(t.length<2)throw new l("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than 2000 (".concat(t[0]*t[1],") elements: ")+"Slowness may result.");const e=ht(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=r.linalg.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(r.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Lt.className="Orthogonal",r.serialization.registerClass(Lt);const Pt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Bt(t,e={}){return w(t,r.serialization.SerializationMap.getMap().classNameMap,e,"initializer")}function Wt(t){return v(t)}function Vt(t){if("string"===typeof t){const e=t in Pt?Pt[t]:t;if("GlorotNormal"===e)return new Rt;if("GlorotUniform"===e)return new _t;if("HeNormal"===e)return new Dt;if("HeUniform"===e)return new Ft;if("LeCunNormal"===e)return new Mt;if("LeCunUniform"===e)return new zt;{const t={};return t.className=e,t.config={},Bt(t)}}return t instanceof Ot?t:Bt(t)}let Ut=0;function Gt(){return Ut++}const Ht={};function qt(t=""){return t in Ht||(Ht[t]=0),Ht[t]+=1,t+Ht[t].toString()}function Kt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Xt(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Yt(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new u("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function Qt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new u("Expected exactly 1 Shape; got ".concat(t.length))}return t}function Zt(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class Jt{constructor(t,e="float32",n="Variable",a=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Gt(),n=null==n?"Variable":n,this.originalName=Q(n),this.name=Z(this.originalName),this.trainable_=a,this.constraint=s,this.val=r.variable(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function $t(t){return t.map(t=>t.read())}function te(t){t.forEach(t=>{t[0].write(t[1])})}class ee{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ne{constructor(t,e,n,a,r,s,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=Gt(),null!=s&&(this.originalName=Q(s),this.name=Z(this.originalName)),this.rank=e.length}}let ae=0;class re{constructor(t,e){this.callArgs=e,this.id=ae++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let se=0;class oe extends r.serialization.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=se++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=g(t)+"_"+qt(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new c("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new u("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return m(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return m(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new i("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new i("Layer ".concat(this.name)+" is not connected, no input to return.");return m(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new i("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new i("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return m(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=b(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=b(this.inputSpec);if(t.length!==e.length)throw new u("Layer ".concat(this.name," expects ").concat(e.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(t));for(let n=0;n<t.length;n++){const a=t[n],r=e[n];if(null==r)continue;const s=a.rank;if(null!=r.ndim&&s!==r.ndim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&a.dtype!==r.dtype)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(a.dtype,"."));if(r.axes){const t=a.shape;for(const e in r.axes){const a=Number(e),s=r.axes[e],o=a>=0?t[a]:t[t.length+a];if(null!=s&&-1===[s,null].indexOf(o))throw new u("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(a," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],s=a.shape[t];if(null!=e&&null!=s&&e!==s)throw new u("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(a.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=b(t);let a=!0;for(const s of n)if(!(s instanceof ne)){a=!1;break}let r=!0;for(const s of n)if(s instanceof ne){r=!1;break}if(a===r)throw new u("Arguments to apply() must be all SymbolicTensors or all Tensors");return Y(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of b(t))e.push(n.shape);this.build(m(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let a=this.call(t,e);const r=b(a),s=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(a=m(s),null!=this.activityRegularizer)throw new l("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(t){t=b(t);const e=[];for(const n of t)e.push(n.shape);return m(e)}(t),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((n,a)=>new ne(s,n,this,b(t),e,this.name,a)):new ne(s,a,this,b(t),e,this.name),this.addInboundNode(t,r,null,null,n,a,e),this._refCount++,null!=this.activityRegularizer)throw new l("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach((n,a)=>{null!=n&&null!=t[a]&&t[a]!==n&&(e=!0)}),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new i("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new i("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new c("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Zt(this.weights)}build(t){this.built=!0}getWeights(t=!1){return $t(t?this.trainableWeights:this.weights)}setWeights(t){Object(r.tidy)(()=>{const e=this.weights;if(e.length!==t.length)throw new u('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],a=$t(e);for(let s=0;s<a.length;++s){const o=a[s],i=e[s],c=t[s];if(!r.util.arraysEqual(o.shape,c.shape))throw new u("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}te(n)})}addWeight(t,e,n,a,r,s,o){if(-1!==this._addedWeightNames.indexOf(t))throw new u("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=Vt("zeros"));const i=a.apply(e,n),c=new Jt(i,n,t,s,o);return i.dispose(),null!=r&&this.addLoss(()=>r.apply(c.read())),null==s&&(s=!0),s?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=b(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach(t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")})}return null}return e}addInboundNode(t,e,n,a,r,s,o=null){const i=b(t);e=b(e),n=b(n),a=b(a),r=Xt(r),s=Xt(s);const c=[],u=[],l=[];for(const d of i)c.push(d.sourceLayer),u.push(d.nodeIndex),l.push(d.tensorIndex);new re({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:l,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class ie extends oe{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:qt("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new u("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new u("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new u("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const a=new ne(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new re({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new u("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ce(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new u("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new ie({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function ue(t){if(null==t)return;const e=[],n=[],a=[];for(const r in t){const s=t[r];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(r),a.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Object(r.dispose)(a)}}function le(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var de;ie.className="InputLayer",r.serialization.registerClass(ie),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(de||(de={}));class pe{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class he{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class fe extends pe{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const a in e){const t=e[a];if("number"===typeof t)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+t*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;const s=Object(r.tidy)(()=>Object(r.add)(this.totals[a],Object(r.mul)(t,n)));this.totals[a]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(r.tidy)(()=>{const t=Object(r.mul)(Object(r.div)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(r.keep)(e[n])}))}}class me extends pe{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];t.push(o.data()),e.push(r),n.push(s)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r){this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=a[r][0]}}}class be extends pe{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,a=r.util.now();return(...s)=>{const o=r.util.now();return o-a<e||(a=o,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const a=[];null!=this.yield&&(await ue(n),a.push(this.yield(t,e,n))),a.push(Object(r.nextFrame)()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ue(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await ue(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(r.nextFrame)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ue(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await ue(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(r.nextFrame)()):r.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await ue(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ue(t),await this.trainEnd(t))}}function ge(t,e){if(null==t&&(t={}),t instanceof pe)return[t];if(Array.isArray(t)&&t[0]instanceof pe)return t;return b(t).map(t=>new be(t,e))}class ye{constructor(){}static registerCallbackConstructor(t,e){r.util.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t)),ye.checkForDuplicate(e),null==ye.constructors[t]&&(ye.constructors[t]=[]),ye.constructors[t].push(e)}static checkForDuplicate(t){for(const e in ye.constructors){ye.constructors[+e].forEach(e=>{if(e===t)throw new u("Duplicate callback constructor.")})}}static clear(){ye.constructors={}}static createCallbacks(t){const e=[];for(const n in ye.constructors){const a=+n;t>=a&&e.push(...ye.constructors[a])}return e.map(t=>new t)}}function xe(t,e,n,a,r,s,o,i,c){const u=new me,l=[new fe,...ye.createCallbacks(e)];null!=t&&l.push(...t),l.push(u);const d=new he(l);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:e,doValidation:i,metrics:c}),{callbackList:d,history:u}}function ve(t,e={},n=!1){return w(t,r.serialization.SerializationMap.getMap().classNameMap,e,"layer",n)}function we(t,e){return Object(r.tidy)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=r.sum(bt(t),e,!0),a=r.fill(n.shape,o()),s=r.sqrt(r.maximum(n,a));return r.div(t,s)})}function ke(t,e){return Object(r.tidy)(()=>r.mean(bt(r.sub(e,t)),-1))}function Oe(t,e){return Object(r.tidy)(()=>r.mean(r.abs(r.sub(e,t)),-1))}function Ne(t,e){return Object(r.tidy)(()=>{const n=r.sub(t,e),a=r.clipByValue(r.abs(t),o(),Number.MAX_VALUE),s=r.abs(r.div(n,a));return r.mul(100,r.mean(s,-1))})}function Ie(t,e){return Object(r.tidy)(()=>{const n=r.clipByValue(e,o(),Number.MAX_VALUE),a=r.log(r.add(1,n)),s=r.clipByValue(t,o(),Number.MAX_VALUE),i=r.log(r.add(1,s));return r.mean(bt(r.sub(a,i)),-1)})}function Se(t,e,n=!1){return Object(r.tidy)(()=>{if(n)e=r.softmax(e);else{const t=r.sum(e,e.shape.length-1,!0);e=r.div(e,t)}return e=r.clipByValue(e,o(),1-o()),r.neg(r.sum(r.mul(t.toFloat(),r.log(e)),e.shape.length-1))})}function Te(t,e,n=!1){return Object(r.tidy)(()=>{const a=r.floor(function(t){const e=[tt(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=r.clipByValue(e,o(),1-o())).shape;return Se(r.oneHot(a,s[s.length-1]).reshape(s),e,n)})}function je(t,e){return Object(r.tidy)(()=>{let n;return n=r.clipByValue(e,o(),1-o()),n=r.log(r.div(n,r.sub(1,n))),r.mean(function(t,e){if(!r.util.arraysEqual(t.shape,e.shape))throw new u("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return Object(r.tidy)(()=>{const n=e.relu(),a=e.abs().neg();return n.sub(e.mul(t)).add(a.exp().log1p())})}(t,n),-1)})}function Ce(t,e){return Object(r.tidy)(()=>{const n=r.clipByValue(t,o(),1),a=r.clipByValue(e,o(),1);return r.sum(r.mul(t,r.log(r.div(n,a))),-1)})}function Ee(t,e){return Object(r.tidy)(()=>{const n=we(t,-1),a=we(e,-1),s=r.mul(n,a);return r.neg(r.sum(s,-1))})}ye.constructors={};const Ae={meanSquaredError:ke,meanAbsoluteError:Oe,meanAbsolutePercentageError:Ne,meanSquaredLogarithmicError:Ie,squaredHinge:function(t,e){return Object(r.tidy)(()=>{const n=r.maximum(0,r.sub(1,r.mul(t,e)));return r.mean(bt(n),-1)})},hinge:function(t,e){return Object(r.tidy)(()=>{const n=r.maximum(0,r.sub(1,r.mul(t,e)));return r.mean(n,-1)})},categoricalHinge:function(t,e){return Object(r.tidy)(()=>{const n=r.sum(r.mul(t,e),-1),a=r.max(r.mul(r.sub(1,t),e),-1);return r.maximum(0,r.add(1,r.sub(a,n)))})},logcosh:function(t,e){return Object(r.tidy)(()=>{const n=Math.log(2),a=r.sub(e,t),s=r.sub(r.add(a,r.softplus(r.mul(-2,a))),n);return r.mean(s,-1)})},categoricalCrossentropy:Se,sparseCategoricalCrossentropy:Te,binaryCrossentropy:je,kullbackLeiblerDivergence:Ce,poisson:function(t,e){return Object(r.tidy)(()=>{const n=r.log(r.add(o(),e));return r.mean(r.sub(e,r.mul(t,n)),-1)})},cosineProximity:Ee};function _e(t){if("string"===typeof t){if(t in Ae)return Ae[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new u(e)}return t}function Re(t,e){return Object(r.tidy)(()=>{const n=r.mul(.5,r.onesLike(e)),a=st(r.greater(e,n),t.dtype);return r.mean(r.equal(t,a),-1)})}function De(t,e){return Object(r.tidy)(()=>st(r.equal(r.argMax(t,-1),r.argMax(e,-1)),"float32"))}function Fe(t,e){return Object(r.tidy)(()=>r.logicalAnd(t.equal(1),e.equal(1)).sum().cast("float32"))}function Me(t,e){return Object(r.tidy)(()=>{const n=Fe(t,e),a=function(t,e){return Object(r.tidy)(()=>r.logicalAnd(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),s=n.add(a);return r.where(r.greater(s,0),n.div(s),0).cast("float32")})}function ze(t,e){return je(t,e)}function Le(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),r.equal(t,e).asType("float32")}const Pe=Se,Be=Te,We={binaryAccuracy:Re,categoricalAccuracy:De,precision:Me,categoricalCrossentropy:Pe,sparseCategoricalCrossentropy:Be,mse:ke,MSE:ke,mae:Oe,MAE:Oe,mape:Ne,MAPE:Ne,cosine:Ee};function Ve(t){if("string"===typeof t&&t in We)return We[t];if("string"!==typeof t&&null!=t)return t;throw new u("Unknown metric ".concat(t))}function Ue(t){if(h(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(Ae))if(Ae[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(We))if(We[n]===t){e=n;break}return void 0!==e?e:t.name}}function Ge(t,e,n=!1){if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const a of n){if("string"!==typeof a)return!1;if(!t(e[a]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(1048576,"."))}}function He(t,e,n,a=console.log){const r=function(t){let e=!0;const n=[],a=[];for(const r in t.nodesByDepth)n.push(t.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){e=!1;break}a.push(...r)}if(e)for(const r of t.layers){let t=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let o;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!r){s.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}a("_".repeat(e)),qe(s,n,a),a("=".repeat(e));const i=t.layers;for(let l=0;l<i.length;++l)r?Ke(i[l],n,a):Xe(i[l],n,o,a),a((l===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=function(t){let e;e=null!=t.collectedTrainableWeights?Zt(t.collectedTrainableWeights):Zt(t.trainableWeights);return e}(t),u=Zt(t.nonTrainableWeights);a("Total params: ".concat(c+u)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(u)),a("_".repeat(e))}function qe(t,e,n=console.log){let a="";for(let r=0;r<t.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=t[r],a=a.slice(0,e[r]),a+=" ".repeat(e[r]-a.length);n(a)}function Ke(t,e,n){let a;try{a=JSON.stringify(t.outputShape)}catch(o){a="multiple"}const r=t.name,s=t.getClassName();qe(["".concat(r," (").concat(s,")"),a,t.countParams().toString()],e,n)}function Xe(t,e,n,a){let r;try{r=JSON.stringify(t.outputShape)}catch(u){r="multiple"}const s=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],a=l.tensorIndices[t];s.push("".concat(e,"[").concat(n,"][").concat(a,"]"))}const o=t.name,i=t.getClassName(),c=0===s.length?"":s[0];qe(["".concat(o," (").concat(i,")"),r,t.countParams().toString(),c],e,a);for(let l=1;l<s.length;++l)qe(["","","",s[l]],e,a)}function Ye(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function Qe(t,e){if(null===t)return null;if("string"===typeof t)return y(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let r=0;r<a;++r){const a=t[r];Ye(e,r,a)?n.push(a):n.push(Qe(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n];if("name"===n&&"string"===typeof a)e[n]=a;else{const t=y(n);e[t]=Qe(a,t)}}return e}}class Ze{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ze)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new u("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(r.cast)(e,t.dtype)}catch(n){throw new u("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ne){if(null==this.id2Value[t.id])throw new u("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new u("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof ne){if(null==this.id2Value[t.id])throw new u("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new u("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(r.dispose)(this.id2Mask)}}const Je={},$e={};function tn(t,e,n,a){const s=null!=n&&n.training,o=Array.isArray(t),i=o?t:[t],c=i.map(t=>t.name),u=[],l=e.names();for(const r of c)-1!==l.indexOf(r)?u.push(e.getValue(r)):u.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=c.join(",")+"|"+e.names().join(",");let p,h;if(null==Je[d]){const t=function(t,e){r.util.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(1===t.length){const r=nn(t[0],e);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of t){const{sorted:t,recipientMap:o}=nn(s,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const e in o)null==a[e]&&(a[e]=new Set),o[e].forEach(t=>a[e].add(t))}}return{sorted:n,recipientCounts:en(a)}}(i,e);p=t.sorted,h=t.recipientCounts,Je[d]=p,$e[d]=h}p=Je[d],h={},s||Object.assign(h,$e[d]);const f=new Ze(e);for(let m=0;m<p.length;++m){if(null!=a){const t=Object(r.memory)().numTensors;t>a.maxNumTensors&&(a.maxNumTensors=t),t<a.minNumTensors&&(a.minNumTensors=t)}const t=p[m],o=t.sourceLayer;if(o instanceof ie)continue;const i=[],l=[],d=[];let g=!1;for(const n of t.inputs){const t=f.getValue(n),a=f.getMask(n);i.push(t),l.push(a),null!=a&&(g=!0),s||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==c.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||d.push(t))}g&&((n=n||{}).mask=l[0]);const y=b(o.apply(i,n));let x=null;o.supportsMasking&&(x=o.computeMask(i,l));const v=an(t),w=Array.isArray(v)?v:[v];for(let e=0;e<w.length;++e){f.hasKey(w[e])||f.add(w[e],y[e],Array.isArray(x)?x[0]:x);const t=c.indexOf(w[e].name);-1!==t&&(u[t]=y[e])}s||Object(r.dispose)(d)}return f.disposeMasks(),o?u:u[0]}function en(t){const e={};for(const n in t)e[n]=t[n].size;return e}function nn(t,e){const n=new Set,a=[],r={};for(const i of e.names())n.add(i);const s=[],o=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=o[o.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),a.push(t),n.add(t.name),e&&o.pop();else{o.push(s.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:a,recipientMap:r}}function an(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const a of t.sourceLayer.inboundNodes[e].outputTensors)if(a.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class rn extends oe{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=qt(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],O(this.inputs).length!==this.inputs.length)throw new u("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map(t=>t.name)));O(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map(t=>t.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const c of this.outputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const c of this.inputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;h(0===e,"input layer has >1 nodes"),h(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let c=0;c<this.inputLayers.length;c++){const e=this.inputLayers[c];if(!(e instanceof ie))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(c," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const c of this.outputLayers)this.outputNames.push(c.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},a={},r={},s={},o=[],i=(t,e,n,a,r,u)=>{null!=a&&null!=r&&null!=u||(a=t.sourceLayer,r=t.nodeIndex,u=t.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new c("The tensor ".concat(t.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(rn.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const d=l.inboundLayers.length;for(let s=0;s<d;s++){const t=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(t,e,n,a,r,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},l=[],d=[];for(const c of this.outputs)i(c,l,d);const p=o.slice().reverse();for(const c of p){n[c.id]=c,c.id in e||(e[c.id]=0);let t=e[c.id];const s=null==a[c.outboundLayer.id]?0:a[c.outboundLayer.id];t=Math.max(t,s),a[c.outboundLayer.id]=t,r[c.outboundLayer.id]=c.outboundLayer,e[c.id]=t;for(let a=0;a<c.inboundLayers.length;a++){const r=c.inboundLayers[a],s=c.nodeIndices[a],o=r.inboundNodes[s],i=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,i),n[o.id]=o}}const f={};for(const c in e){const t=e[c];t in f||(f[t]=[]),f[t].push(n[c])}const m={};for(const c in a){const t=a[c];t in m||(m[t]=[]),m[t].push(r[c])}let b=Object.keys(m).map(t=>parseInt(t,10)).sort(k);this.layers=[];for(const c of b){const t=m[c];t.sort((t,e)=>{const n=s[t.id],a=s[e.id];return n<a?-1:n>a?1:0});for(const e of t)e instanceof rn&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=m,b=Object.keys(f).map(t=>parseInt(t,10)).sort(k);const g=this.inputs.slice(),y=[];for(const u of b)for(const t of f[u]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===g.indexOf(n))throw new c("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(y));for(const e of t.outputTensors)g.push(e);y.push(e.name)}}this.nodesByDepth=f;const x=this.layers.map(t=>t.name);for(const u of x){const t=x.filter(t=>t===u).length;if(1!==t)throw new c('The name "'.concat(u,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new re({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new u("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let a=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new u("Duplicate weight name: ".concat(t.originalName));n[t.originalName]=t,a++}const r=[];for(const s in t){let a=s;if(null==n[s]){const t=s.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[s]]);else if(e)throw new u("Provided weight data has no target variable: ".concat(s));delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new u("".concat(t.length," of ").concat(a," weights are not set: ")+"".concat(t))}te(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat("2.8.6"),e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null===e||void 0===e)return null;if("string"===typeof e)return g(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const a=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Ye(n,s,r)?a.push(r):a.push(t(r,n))}return a}{const n={};for(const a of Object.keys(e)){const r=e[a],s=g(a);n[s]="name"!==a&&"className"!==a||"string"!==typeof r?t(r,a):r}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(r.tidy)(()=>{t=b(t);const n=new Ze;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return tn(this.outputs,n,e)})}computeMask(t,e){return Object(r.tidy)(()=>{let n;return t=b(t),n=null==e?p(null,t.length):b(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Xt(t);if(e.length!==this.inputLayers.length)throw new u("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],a=e[o];n[t.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(k);if(a.length>1)for(const o of a){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const a=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],r=e.nodeIndices[o],s=e.tensorIndices[o],i=n["".concat(t.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=Xt(t.computeOutputShape(m(a))),s=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++){n["".concat(t.name,"_").concat(s,"_").concat(e)]=r[e]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(t.name,"_").concat(e,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const t=s[o];h(t in n),r.push(n[t])}return m(r)}runInternalGraph(t,e){null==e&&(e=p(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=t[i],s=e[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(k);for(const i of a){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,r=e.outputTensors,s=new Array;for(const e of a)e.id in n&&s.push(n[e.id]);if(s.length===a.length){let a,o,i,c,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){const[e,n]=s[0];null==u.mask&&(u.mask=n),i=b(t.call(e,u)),c=b(t.computeMask(e,n)),a=[e],o=[n]}else a=s.map(t=>t[0]),o=s.map(t=>t[1]),null==u.mask&&(u.mask=o),i=b(t.call(a,u)),c=b(t.computeMask(a,o));if(t.activityRegularizer)throw new l("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],a=i[t],s=c[t];n[e.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){h(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];o.push(t.shape),r.push(t),s.push(e)}return[r,s,o]}buildNodeConversionMap(t){const e={};let n;for(const a of this.layers){n=a instanceof rn?1:0;for(let t=0;t<a.inboundNodes.length;t++){const r=rn.nodeKey(a,t);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new u("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}if(null==t)throw new u("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new u("No such layer: ".concat(t))}calculateLosses(){return Object(r.tidy)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const a=rn.nodeKey(e,n);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const t=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const t=o.inboundNodes[n],a=rn.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),i=t.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(t.inboundLayers.length>0){const n=[];for(let a=0;a<t.inboundLayers.length;a++){const r=t.inboundLayers[a],s=t.nodeIndices[a],o=t.tensorIndices[a];let c=e[rn.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,o,i])}r.push(n)}}}const i={};i.name=o.name,i.className=t,i.config=a,i.inboundNodes=r,n.push(i)}t.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const t=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=rn.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let s=e[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([t.name,s,i])}t.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=rn.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let s=e[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([t.name,s,i])}return t.outputLayers=r,t}static fromConfig(t,e,n={},a=!1){const r={},s={};function o(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function i(t,e){const n=[];let a;for(const s of e){const i=s[0],c=s[1],u=s[2];if(a=null==s[3]?{}:s[3],!(i in r))return void o(t,e);const l=r[i];if(l.inboundNodes.length<=c)return void o(t,e);const d=l.inboundNodes[c];n.push(d.outputTensors[u])}n.length>0&&t.apply(m(n),a)}function c(t){const n=t.name,s=ve(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(a),r[n]=s;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new u("Corrupted configuration, expected array for nodeData: ".concat(t));o(s,t)})}const l=e.name,d=e.layers;for(const u of d)c(u);for(;!N(s);)for(const t of d){const e=r[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)i(e,n)}}const p=[],f=[],b=e.inputLayers;for(const u of b){const t=u[0],e=u[1],n=u[2];h(t in r);const a=r[t].inboundNodes[e].outputTensors;p.push(a[n])}const g=e.outputLayers;for(const u of g){const t=u[0],e=u[1],n=u[2];h(t in r);const a=r[t].inboundNodes[e].outputTensors;f.push(a[n])}return new t({inputs:p,outputs:f,name:l})}get stateful(){if(this._stateful)throw new u("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(r.tidy)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function sn(t,e,n){const a=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===a)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function on(t,e){return sn(t,e,"classWeight")}async function cn(t,e,n,a){if(null!=e||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(r.tidy)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")}),a=Array.from(await e.data());Object(r.dispose)(e);const s=[];return a.forEach(t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");s.push(n[t])}),Object(r.tensor1d)(s,"float32")}return null}function un(t,e){return Object(r.mul)(t,e)}function ln(t,e){let n,a;const s=e;n=s.xs,a=s.ys,r.util.assert(null!=n&&null!=a,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e));const o=dn("input",t.inputNames,n),i=dn("output",t.outputNames,a),c=o[0].shape[0];r.util.assert(o.length===t.inputs.length,()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")")),r.util.assert(i.length===t.outputs.length,()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")"));for(let u=0;u<o.length;u++)r.util.assert(o[u].shape[0]===c,()=>"Batch size mismatch: input "+"".concat(t.inputNames[u]," has ").concat(o[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],"."));for(let u=0;u<i.length;u++)r.util.assert(i[u].shape[0]===c,()=>"Batch size mismatch: output "+"".concat(t.outputNames[u]," has ").concat(i[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],"."));return{xs:o,ys:i}}function dn(t,e,n){if(n instanceof r.Tensor)return[n];if(Array.isArray(n))return r.util.assert(n.length===e.length,()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,".")),n;{const a=[];for(const r of e){if(null==n[r])throw new u("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(r,"'."));a.push(n[r])}return a}}async function pn(t,e,n){const a=null!=n.batchesPerEpoch;if(r.util.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs)),r.util.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch)),r.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let o,i;if(s)if(hn(n.validationData))r.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches));else{const t=function(t){if(3===t.length)throw new l("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);o=t.xs,i=t.ys}const c=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let d;d=s?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const p=ge(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:f,history:m}=xe(p,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,d);f.setModel(t),t.history=m,await f.onTrainBegin(),t.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,y=await e.iterator();for(;g<n.epochs;){const l={};await f.onEpochBegin(g);let d=0,p=0;for(a||(y=await e.iterator());!a||d<n.batchesPerEpoch;){const e=await y.next();if(a&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:a,ys:s}=ln(t,e.value),o={};o.batch=p,o.size=a[0].shape[0],await f.onBatchBegin(p,o);const i=[];if(null!=n.classWeight){const e=on(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await cn(s[t],null,e[t]))}const l=a.concat(s).concat(i),h=c(l);r.dispose(l);for(let t=0;t<u.length;++t){const e=u[t],n=h[t];o[e]=n,r.keep(n)}await f.onBatchEnd(p,o),le(o),p++,d++}if(a?d>=n.batchesPerEpoch:e.done){if(s){let e;e=hn(n.validationData)?b(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):b(t.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await f.onEpochEnd(g,l),g++,t.stopTraining_)break}return await f.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function hn(t){return"function"===typeof t.iterator}function fn(t){r.util.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got ".concat(t))}function mn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>it(t,e,n-e)):it(t,e,n-e)}function bn(t,e){return r.tidy(()=>null==t?null:Array.isArray(t)?t.map(t=>bn(t,e)):mt(t,"int32"===e.dtype?e:e.toInt()))}function gn(t,e){const n=[];let a=0,r=null;for(;a<t;)r=a+e,r>=t&&(r=t),n.push([a,r]),a=r;return n}async function yn(t,e,n,a={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,o,i,c,d,p,h;t.isTraining=!0;try{const f=null==a.batchSize?32:a.batchSize;fn(f);const m=!1,b=await t.standardizeUserData(e,n,a.sampleWeight,a.classWeight,m,f);s=b[0],o=b[1],h=b[2];let g,y=!1;if(null!=a.validationData&&a.validationData.length>0){if(y=!0,2!==a.validationData.length)throw 3===a.validationData.length?new l("validationData including sample weights is not supported yet."):new u("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(a.validationData," is invalid."));i=a.validationData[0],c=a.validationData[1];const e=!0,n=await t.standardizeUserData(i,c,null,null,e,f);d=n[0],p=n[1],g=d.concat(p)}else if(null!=a.validationSplit&&a.validationSplit>0&&a.validationSplit<1){y=!0;const t=Math.floor(s[0].shape[0]*(1-a.validationSplit)),e=s[0].shape[0];d=mn(s,t,e),s=mn(s,0,t),p=mn(o,t,e),o=mn(o,0,t),g=d.concat(p)}else null!=a.validationSteps&&(y=!0);const x=s.concat(o).concat(h);t.checkTrainableWeightsConsistency();const v=t.makeTrainFunction(),w=t.getDedupedMetricsNames();let k,O;y?(t.makeTestFunction(),k=t.testFunction,O=w.slice().concat(w.map(t=>"val_"+t))):(k=null,g=[],O=w.slice());const N=ge(a.callbacks,a.yieldEvery);return await async function(t,e,n,a,s,o,i,c,d,p,h,f,m,b,g){null==s&&(s=32),null==o&&(o=1),null==h&&(h=!0),null==m&&(m=0);let y=!1;if(null!=d&&null!=p&&(y=!0),null!=g&&(y=!0,null==b))throw new u("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=t.checkNumSamples(n,s,b,"steps_per_epoch");let v;null!=x&&(v=rt(0,x)),null==i&&(i=1);const{callbackList:w,history:k}=xe(c,i,o,m,x,b,s,y,f);w.setModel(t),t.history=k,await w.onTrainBegin(),t.stopTraining_=!1;for(let u=m;u<o;++u){await w.onEpochBegin(u);const o={};if(null!=b)throw new l("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new l("batch shuffling is not implemneted yet");h&&r.util.shuffle(v);const i=Object(r.tensor1d)(v),c=gn(x,s);for(let u=0;u<c.length;++u){const l={};if(await w.onBatchBegin(u,l),r.tidy(()=>{const h=c[u][0],f=c[u][1],m=it(i,h,f-h);l.batch=u,l.size=f-h;const b=bn(n,m),g=e(b);for(let t=0;t<a.length;++t){const e=a[t],n=g[t];l[e]=n,r.keep(n)}if(u===c.length-1&&y){const e=t.testLoop(d,p,s);for(let t=0;t<a.length;++t){const n=a[t],s=e[t];r.keep(s),o["val_"+n]=s}}}),await w.onBatchEnd(u,l),le(l),t.stopTraining_)break}i.dispose()}if(await w.onEpochEnd(u,o),t.stopTraining_)break}return await w.onTrainEnd(),await t.history.syncData(),t.history}(t,v,x,w,f,a.epochs,a.verbose,N,k,g,a.shuffle,O,a.initialEpoch,null,null)}finally{t.isTraining=!1,vn(s,e),vn(o,n),vn(d,i),vn(p,c),null!=h&&r.dispose(h)}}function xn(t){const e=[];t instanceof r.Tensor&&(t=[t]);for(let n=0;n<t.length;++n){const a=t[n];if(1===a.rank)e.push(ot(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(a)}}return e}function vn(t,e){if(null==t)return;const n=[];if(e instanceof r.Tensor)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const r in e){const t=e[r];n.push(t.id)}const a=[];if(t instanceof r.Tensor)-1===n.indexOf(t.id)&&a.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&a.push(t)});else if(null!=t)for(const r in t){const e=t[r];-1===n.indexOf(e.id)&&a.push(e)}a.forEach(t=>{t.isDisposed||t.dispose()})}function wn(t){return Array.isArray(t)}function kn(t){return!function(t){return t instanceof r.Tensor}(t)&&!wn(t)}function On(t,e,n,a=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(wn(t)&&t.length>0)e=!0;else if(kn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new u("Error when checking model ".concat(r," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map(t=>null);let s;if(kn(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new u('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));s.push(t[n])}}else if(wn(t)){if((t=t).length!==e.length)throw new u("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));s=t}else{if(t=t,e.length>1)throw new u("The model ".concat(r," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));s=[t]}if(s=xn(s),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=s[o];if(t.shape.length!==n[o].length)throw new u("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let s=0;s<n[o].length;++s){if(0===s&&!a)continue;const i=t.shape[s],c=n[o][s];if(null!=c&&c>=0&&i!==c)throw new u("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have shape [".concat(n[o],"], but got array with shape ")+"[".concat(t.shape,"]."))}}return s}function Nn(t,e,n,a=!0,r=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new u("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));s=t}else{if(e.length>1)throw new u("The model expects ".concat(e.length," ").concat(r," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));s=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=s[o];if(t.shape.length!==n[o].length)throw new u("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let s=0;s<n[o].length;++s){if(0===s&&!a)continue;const i=t.shape[s],c=n[o][s];if(null!=c&&c!==i)throw new u("Error when checking ".concat(r,": expected ")+"".concat(e[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class In extends rn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new u("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");He(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>r.train.adagrad(.01),Adadelta:()=>r.train.adadelta(1,.95,o()),Adam:()=>r.train.adam(.001,.9,.999,o()),Adamax:()=>r.train.adamax(.002,.9,.999,o(),0),RMSProp:()=>r.train.rmsprop(.001,.9,0,o()),SGD:()=>r.train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new u("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof r.Optimizer))throw new u("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new u("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map(t=>_e(t))}else{const n=_e(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new u('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(_e(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const t=this.internalOutputShapes[r],e=this.outputNames[r];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[r])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Y("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const a=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const a of e){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Y("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,a,r;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===je?-1!==["accuracy","acc"].indexOf(o)?a=Re:-1!==["crossentropy","ce"].indexOf(o)&&(a=ze):this.lossFunctions[t]===Te?-1!==["accuracy","acc"].indexOf(o)?a=Le:-1!==["crossentropy","ce"].indexOf(o)&&(a=Be):-1!==["accuracy","acc"].indexOf(o)?a=De:-1!==["crossentropy","ce"].indexOf(o)&&(a=Pe),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),r=a,n=""+s}else{const t=Ve(o);r=t,n=""+Ue(o)}let e;Y(n,()=>{e=r}),s(t,n,e)}})(a[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const a=null==n.batchSize?32:n.batchSize;fn(a);const r=this.standardizeUserDataXY(t,e,!0,a);try{const s=r[0].concat(r[1]);this.makeTestFunction();const o=this.testFunction;return m(this.testLoop(o,s,a,n.verbose,n.steps))}finally{vn(r[0],t),vn(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const a=null!=(n=n||{}).batches,s=t.testFunction;let o=[];if(n.verbose>0)throw new l("Verbose mode is not implemented yet.");r.util.assert(!a||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches)));const i="function"===typeof e.next?e:await e.iterator();let c=0,u=0;for(;!a||u<n.batches;){const e=await i.next();if(o=r.tidy(()=>{if(e.value){const{xs:n,ys:a}=ln(t,e.value),i=n.concat(a),l=r.tidy(()=>s(i));if(r.dispose(i),0===u)for(let t=0;t<l.length;++t)o.push(Object(r.scalar)(0));const d=i[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=o[t];o[t]=r.tidy(()=>r.add(o[t],r.mul(d,e))),u>0&&r.dispose(n)}r.dispose(l),c+=d,++u}return o}),e.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<o.length;++l){const t=o[l];o[l]=r.div(o[l],c),r.dispose(t)}return m(o)}(this,t,e)}checkNumSamples(t,e,n,a="steps"){let r;if(null!=n){if(r=null,null!=e)throw new u("If ".concat(a," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new u("Either the input data should have a defined shape, or "+"".concat(a," shoud be specified."));r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new u("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),a=n?e:[e],s=this.retrieveSymbolicTensors(a),o=new Ze;if(t instanceof r.Tensor&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new u("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)o.add(this.inputs[e],t[e])}else for(const r of this.inputs){const e=t[r.name];if(null==e)throw new u("No value is provided for the model's input ".concat(r.name));o.add(r,e)}const i=tn(s,o);return n?i:i[0]}retrieveSymbolicTensors(t){const e=p(null,t.length);let n=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map(t=>t.name);for(let a=0;a<t.length;++a){const o=s.indexOf(t[a]);if(-1!==o&&(e[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,a)=>{null==e&&n.push(t[a])}),new u("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t,e=32,n=!1){return r.tidy(()=>{const a=this.checkNumSamples(t);if(n)throw new l("Verbose predictLoop() is not implemented yet.");const s=gn(a,e),o=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e){r.tidy(()=>{const n=s[e][0],a=s[e][1],r=mn(t,n,a),o=[];if(Array.isArray(r))for(let t=0;t<r.length;++t)o.push({key:this.inputs[t],value:r[t]});else o.push({key:this.inputs[0],value:r});const i=new Ze(o);return tn(this.outputs,i)}).forEach((t,e)=>o[e].push(t))}return m(o.map(t=>r.concat(t,0)))})}predict(t,e={}){const n=xn(t);Nn(n,this.inputNames,this.feedInputShapes,!1);try{const a=null==e.batchSize?32:e.batchSize;return fn(a),this.predictLoop(n,a)}finally{vn(n,t)}}predictOnBatch(t){Nn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,a){if(null==this.optimizer_)throw new c("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let r=0;r<this.feedOutputShapes.length;++r){const t=this.feedOutputShapes[r];this.feedLossFns[r]===Te?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(t,e,n){const a=O(t.map(t=>t.shape[0]));a.sort();const s=O(e.map(t=>t.shape[0]));if(s.sort(),a.length>1)throw new u("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map(t=>t.shape))));if(s.length>1)throw new u("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map(t=>t.shape))));if(a.length>0&&s.length>0&&!r.util.arraysEqual(a,s))throw new u("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(s[0]," target ")+"sample(s).")}(t=On(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=On(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const a=[ke,je,Se];for(let r=0;r<t.length;++r){const s=t[r],o=e[r],i=n[r];if(null!=o){if(o===Se&&1===s.shape[s.shape.length-1])throw new u("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const t=s.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const a=t[n],r=e[n];if(null!=r&&a!==r)throw new u("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&t[0].shape[0]%a!==0)throw new u("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(a,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,a,r=!0,s){const[o,i]=this.standardizeUserDataXY(t,e,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const t=on(a,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await cn(i[e],null,t[e]))}return[o,i,c]}testLoop(t,e,n,a=0,s){return r.tidy(()=>{const o=this.checkNumSamples(e,n,s,"steps"),i=[];if(a>0)throw new l("Verbose mode is not implemented yet.");if(null!=s)throw new l("steps mode in testLoop() is not implemented yet");{const a=gn(o,n),s=Object(r.tensor1d)(rt(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],c=a[n][1],u=it(s,o,c-o),l=bn(e,u),d=t(l);if(0===n)for(let t=0;t<d.length;++t)i.push(Object(r.scalar)(0));for(let t=0;t<d.length;++t){const e=d[t];i[t]=r.add(i[t],r.mul(c-o,e))}}for(let t=0;t<i.length;++t)i[t]=r.div(i[t],o)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const a=t[n];let r=a;if(f(t,a)>1){const e=f(t.slice(0,n),a);r+="_".concat(e)}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Ze(t),c=tn(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(a[n],c[n]);null!=s[n]&&(t=un(t,s[n]));const o=r.mean(t);e.push(o),u=0===n?t:r.add(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],s=this.metricsTensors[n][1];t=r.mean(e(a[s],c[s]))}r.keep(t),o.push(t)}return u=r.mean(u),this.calculateLosses().forEach(t=>{u=r.add(u,t)}),u},!0,i)].concat(o)}}makeTestFunction(){this.testFunction=t=>r.tidy(()=>{const e=[];let n;const a=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let t=0;t<this.inputs.length;++t)o.push({key:this.inputs[t],value:a[t]});const i=new Ze(o),c=tn(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const a=this.lossFunctions[t],o=r.mean(a(s[t],c[t]));n=0===t?o:r.add(n,o),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],a=this.metricsTensors[t][1],o=r.mean(n(s[a],c[a]));e.push(o)}return e})}async fit(t,e,n={}){return yn(this,t,e,n)}async fitDataset(t,e){return pn(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),a=n[0],s=n[1],o=this.makeTrainFunction()(a.concat(s)),i=[];for(const r of o){const t=await r.data();i.push(t[0])}return r.dispose(o),m(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||e.push({name:a[s].originalName,tensor:r[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=r.memory().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-r.memory().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=g(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>g(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const a of e){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=g(n[a])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[g(Ue(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>g(Ue(t)));{const t={};for(const e in this.metrics)t[e]=g(Ue(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ve(Qe(t.optimizer_config));let n,a;if("string"===typeof t.loss)n=y(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>y(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=y(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map(t=>y(t));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=y(t.metrics[e])}this.compile({loss:n,metrics:a,optimizer:e})}async save(t,e){if("string"===typeof t){const e=r.io.getSaveHandlers(t);if(0===e.length)throw new u("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new u("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new u("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await r.io.encodeWeights(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat("2.8.6"),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await r.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=r.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Ge(this.userDefinedMetadata,this.name,t),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){Ge(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}In.className="Model",r.serialization.registerClass(In);class Sn extends In{}Sn.className="Functional",r.serialization.registerClass(Sn);class Tn extends In{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:qt("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new u("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof Tn||t instanceof In;let n;if(e){if(n=t,1!==n.outputs.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new u("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new u("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=ce({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new u("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,a){if((null==n||null!=a&&a>0)&&(n=e.sourceLayer,a=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[a];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=t(e.inputTensors[a],e.inboundLayers[a],e.nodeIndices[a]);for(const t of r)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new re({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:p(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Qt(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new In({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},a=!1){let s,o={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new u("Legacy serialization format not supported yet.");s=e}else r.util.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,o=e;const i=new t(o);if(!(i instanceof Tn))throw new l("Sequential.fromConfig called on non-Sequential input: ".concat(i));for(const r of s){const t=ve(r,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(t){if(null==this.model)throw new u("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new u("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Tn.className="Sequential",r.serialization.registerClass(Tn);class jn extends r.serialization.Serializable{getConfig(){return{}}}class Cn extends jn{apply(t,e=1){return function(t,e=1){if(1!==e)throw new l("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return r.elu(t)}(t,e)}}Cn.className="elu",r.serialization.registerClass(Cn);class En extends jn{apply(t){return r.selu(t)}}En.className="selu",r.serialization.registerClass(En);class An extends jn{apply(t){return r.relu(t)}}An.className="relu",r.serialization.registerClass(An);class _n extends jn{apply(t){return Object(r.tidy)(()=>r.minimum(6,r.relu(t)))}}_n.className="relu6",r.serialization.registerClass(_n);class Rn extends jn{apply(t){return t}}Rn.className="linear",r.serialization.registerClass(Rn);class Dn extends jn{apply(t){return r.sigmoid(t)}}Dn.className="sigmoid",r.serialization.registerClass(Dn);class Fn extends jn{apply(t){return function(t){return Object(r.tidy)(()=>{const e=r.add(.5,r.mul(.2,t));return r.clipByValue(e,0,1)})}(t)}}Fn.className="hardSigmoid",r.serialization.registerClass(Fn);class Mn extends jn{apply(t){return r.softplus(t)}}Mn.className="softplus",r.serialization.registerClass(Mn);class zn extends jn{apply(t){return function(t){return Object(r.tidy)(()=>r.div(t,r.abs(t).add(1)))}(t)}}zn.className="softsign",r.serialization.registerClass(zn);class Ln extends jn{apply(t){return r.tanh(t)}}Ln.className="tanh",r.serialization.registerClass(Ln);class Pn extends jn{apply(t,e=-1){return r.softmax(t,e)}}Pn.className="softmax",r.serialization.registerClass(Pn);class Bn extends jn{apply(t,e=-1){return r.logSoftmax(t,e)}}Bn.className="logSoftmax",r.serialization.registerClass(Bn);class Wn extends jn{apply(t,e=1){return Object(r.tidy)(()=>r.sigmoid(t.mul(e)).mul(t))}}function Vn(t){return t.getClassName()}function Un(t,e={}){return w(t,r.serialization.SerializationMap.getMap().classNameMap,e,"activation")}function Gn(t){if(null==t){const t={className:"linear",config:{}};return Un(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},Un(e)}return t instanceof jn?t:Un(t)}function Hn(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Wn.className="swish",r.serialization.registerClass(Wn);class qn extends r.serialization.Serializable{}class Kn extends qn{constructor(t){super(),Hn(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(r.tidy)(()=>{let e=Object(r.zeros)([1]);return this.hasL1&&(e=Object(r.add)(e,Object(r.sum)(r.mul(this.l1,Object(r.abs)(t))))),this.hasL2&&(e=Object(r.add)(e,Object(r.sum)(r.mul(this.l2,bt(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Kn.className="L1L2",r.serialization.registerClass(Kn);const Xn={l1l2:"L1L2"};function Yn(t){return v(t)}function Qn(t,e={}){return w(t,r.serialization.SerializationMap.getMap().classNameMap,e,"regularizer")}function Zn(t){if(null==t)return null;if("string"===typeof t){return Qn({className:t in Xn?Xn[t]:t,config:{}})}return t instanceof qn?t:Qn(t)}class Jn extends oe{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Yt(t);let n=Object(r.relu)(t);return null!=this.maxValue&&(n=Object(r.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Jn.className="ReLU",r.serialization.registerClass(Jn);class $n extends oe{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Yt(t);return Object(r.leakyRelu)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}$n.className="LeakyReLU",r.serialization.registerClass($n);class ta extends oe{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Vt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Zn(t.alphaRegularizer),this.alphaConstraint=L(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new u("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Qt(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)n[a]=t[a];this.inputSpec=[new ee({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Yt(t),Object(r.prelu)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Wt(this.alphaInitializer),alphaRegularizer:Yn(this.alphaRegularizer),alphaConstraint:M(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ta.className="PReLU",r.serialization.registerClass(ta);class ea extends oe{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new l("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Yt(t);return Object(r.elu)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ea.className="ELU",r.serialization.registerClass(ea);class na extends oe{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Yt(t);return n.mul(st(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}na.className="ThresholdedReLU",r.serialization.registerClass(na);class aa extends oe{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Pn).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Yt(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function ra(t,e,n){if("number"===typeof t)return p(t,e);if(t.length!==e)throw new u("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let r=0;r<e;++r){const s=t[r];if((a=s)!==parseInt(a.toString(),10))throw new u("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(s))}return t;var a}function sa(t,e,n,a,r=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((s+a-1)/a)}function oa(t,e,n,a){if(null==t)return null;if("valid"===a)t=t*e+at([n-e,0]);else{if("same"!==a)throw new u("Unsupport padding mode: ".concat(a,"."));t*=e}return t}function ia(t,e){return Object(r.tidy)(()=>(H(e),"channelsFirst"===e?r.transpose(t,[0,2,3,1]):t))}function ca(t,e){return Object(r.tidy)(()=>(H(e),"channelsFirst"===e?r.transpose(t,[0,2,3,4,1]):t))}function ua(t,e,n,a=1,s="valid",o,i=1){return Object(r.tidy)(()=>{if(null==o&&(o="channelsLast"),H(o),3!==t.shape.length)throw new u("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new u("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new u("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(e.shape.length," instead"));if("channelsFirst"===o&&(t=r.transpose(t,[0,2,1])),"causal"===s)throw new l("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=r.conv1d(t,e,a,"same"===s?"same":"valid","NWC",i);return null!=n&&(c=yt(c,n)),c})}function la(t,e,n,a=[1,1],s="valid",o,i,c=null){return Object(r.tidy)(()=>{if(null==o&&(o="channelsLast"),H(o),3!==t.rank&&4!==t.rank)throw new u("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new u("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let d=ia(t,o);if("causal"===s)throw new l("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return d=r.fused.conv2d({x:d,filter:e,strides:a,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===o&&(d=r.transpose(d,[0,3,1,2])),d})}function da(t,e,n,a=[1,1,1],s="valid",o,i){return Object(r.tidy)(()=>{if(null==o&&(o="channelsLast"),H(o),4!==t.rank&&5!==t.rank)throw new u("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new u("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let c=ca(t,o);if("causal"===s)throw new l("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=r.conv3d(c,e,a,"same"===s?"same":"valid","NDHWC",i),null!=n&&(c=yt(c,n)),"channelsFirst"===o&&(c=r.transpose(c,[0,4,1,2,3])),c})}aa.className="Softmax",r.serialization.registerClass(aa);class pa extends oe{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",pa.verifyArgs(e),this.rank=t,T(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new l("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=ra(e.kernelSize,t,"kernelSize"),this.strides=ra(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,q(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,H(this.dataFormat),this.activation=Gn(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=L(e.biasConstraint),this.biasRegularizer=Zn(e.biasRegularizer),this.activityRegularizer=Zn(e.activityRegularizer),this.dilationRate=ra(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new u("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new u("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new u("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(h("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!S(t.kernelSize,"number",1,3))throw new u("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Vn(this.activation),useBias:this.useBias,biasInitializer:Wt(this.biasInitializer),biasRegularizer:Yn(this.biasRegularizer),activityRegularizer:Yn(this.activityRegularizer),biasConstraint:M(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class ha extends pa{constructor(t,e){super(t,e),this.kernel=null,ha.verifyArgs(e),this.filters=e.filters,T(this.filters,"filters"),this.kernelInitializer=Vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=L(e.kernelConstraint),this.kernelRegularizer=Zn(e.kernelRegularizer)}build(t){t=Qt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(r.tidy)(()=>{let e;t=Yt(t);const n=null==this.bias?null:this.bias.read(),a=j(this.activation.getClassName());if(null!=a&&2===this.rank)e=la(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=ua(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=la(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new l("convolutions greater than 3D are not implemented yet.");e=da(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Qt(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const t=sa(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);e.push(t)}let a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Wt(this.kernelInitializer),kernelRegularizer:Yn(this.kernelRegularizer),kernelConstraint:M(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new u("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class fa extends ha{constructor(t){super(2,t),fa.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!S(t.kernelSize,"number",1,2))throw new u("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}fa.className="Conv2D",r.serialization.registerClass(fa);class ma extends ha{constructor(t){super(3,t),ma.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new u("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}ma.className="Conv3D",r.serialization.registerClass(ma);class ba extends fa{constructor(t){if(super(t),this.inputSpec=[new ee({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new u("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=Qt(t)).length)throw new u("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ee({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return r.tidy(()=>{let e=Yt(t);if(4!==e.shape.length)throw new u("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let s,o;"channelsFirst"===this.dataFormat?(s=2,o=3):(s=1,o=2);const i=n[s],c=n[o],l=this.kernelSize[0],d=this.kernelSize[1],p=this.strides[0],h=this.strides[1],f=[a,oa(i,p,l,this.padding),oa(c,h,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=r.transpose(e,[0,2,3,1]));let m=r.conv2dTranspose(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=r.transpose(m,[0,3,1,2])),null!=this.bias&&(m=yt(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(t){const e=(t=Qt(t)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[a]=oa(e[a],i,s,this.padding),e[r]=oa(e[r],c,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}ba.className="Conv2DTranspose",r.serialization.registerClass(ba);class ga extends ha{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new u("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new u("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new u("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Vt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Zn(e.depthwiseRegularizer),this.depthwiseConstraint=L(e.depthwiseConstraint),this.pointwiseInitializer=Vt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Zn(e.pointwiseRegularizer),this.pointwiseConstraint=L(e.pointwiseConstraint)}build(t){if((t=Qt(t)).length<this.rank+2)throw new u("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new u("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let s=0;s<this.rank;++s)r.push(1);r.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new ee({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(r.tidy)(()=>{let e;if(t=Yt(t),1===this.rank)throw new l("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=r.transpose(t,[0,2,3,1])),e=r.separableConv2d(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=yt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=r.transpose(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Wt(this.depthwiseInitializer),t.pointwiseInitializer=Wt(this.pointwiseInitializer),t.depthwiseRegularizer=Yn(this.depthwiseRegularizer),t.pointwiseRegularizer=Yn(this.pointwiseRegularizer),t.depthwiseConstraint=M(this.depthwiseConstraint),t.pointwiseConstraint=M(this.pointwiseConstraint),t}}ga.className="SeparableConv";class ya extends ga{constructor(t){super(2,t)}}ya.className="SeparableConv2D",r.serialization.registerClass(ya);class xa extends ha{constructor(t){super(1,t),xa.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!S(t.kernelSize,"number",1,1))throw new u("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}xa.className="Conv1D",r.serialization.registerClass(xa);class va extends oe{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(r.tidy)(()=>{if(t=Yt(t),"channelsLast"===this.dataFormat){const e=ut(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ut(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ut(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ut(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}va.className="Cropping2D",r.serialization.registerClass(va);class wa extends oe{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,H(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,I(B,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return r.tidy(()=>{let e=Yt(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=r.transpose(e,[0,2,3,1]);const t=this.size[0]*n[2],a=this.size[1]*n[3],s="nearest"===this.interpolation?e.resizeNearestNeighbor([t,a]):e.resizeBilinear([t,a]);return r.transpose(s,[0,3,1,2])}{const t=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,a]):e.resizeBilinear([t,a])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}wa.className="UpSampling2D",r.serialization.registerClass(wa);class ka extends pa{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Vt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=L(t.depthwiseConstraint),this.depthwiseRegularizer=Zn(t.depthwiseRegularizer)}build(t){if((t=Qt(t)).length<4)throw new u("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new u("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(r.tidy)(()=>{let e=function(t,e,n=[1,1],a="valid",s,o){return Object(r.tidy)(()=>{null==s&&(s="channelsLast"),H(s);let i=ia(t,s);if(4!==t.rank)throw new u("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new u("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return i=r.depthwiseConv2d(i,e,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===s&&(i=r.transpose(i,[0,3,1,2])),i})}(t=Yt(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=yt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Qt(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=sa(e,this.kernelSize[0],this.padding,this.strides[0]),s=sa(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,r,s]:[t[0],r,s,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Wt(this.depthwiseInitializer),t.depthwiseRegularizer=Yn(this.depthwiseRegularizer),t.depthwiseConstraint=M(this.depthwiseRegularizer),t}}function Oa(t,e,n,a){if(Array.isArray(t)){if(null!=e||null!=n)throw new u("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=t.slice(t.length-a,t.length),t=t.slice(0,t.length-a)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function Na(t,e,n,a=!1,s,o,i=!1,c=!1){return r.tidy(()=>{const d=e.shape.length;if(d<3)throw new u("Input should be at least 3D, but is ".concat(d,"D."));const p=[1,0].concat(rt(2,d));if(e=r.transpose(e,p),null!=o)throw new l("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===d-1&&(s=r.expandDims(s,-1)),s=r.transpose(s,p)),a&&(e=r.reverse(e,0),null!=s&&(s=r.reverse(s,0)));const h=[];let f,m=n;const b=e.shape[0],g=r.unstack(e);let y,x;null!=s&&(y=r.unstack(s));for(let e=0;e<b;++e){const n=g[e],a=r.tidy(()=>t(n,m));if(null==s)f=a[0],m=a[1];else{const t=r.tidy(()=>{const t=y[e],n=r.onesLike(t).sub(t);return{output:a[0].mul(t).add(m[0].mul(n)),newStates:m.map((e,r)=>a[1][r].mul(t).add(e.mul(n)))}});f=t.output,m=t.newStates}c&&h.push(f)}if(c){const t=1;x=r.stack(h,t)}return[f,x,m]})}ka.className="DepthwiseConv2D",r.serialization.registerClass(ka);class Ia extends oe{constructor(t){let e;if(super(t),null==t.cell)throw new u("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Ra({cells:t.cell}):t.cell,null==e.stateSize)throw new u("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new ee({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return rt(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Kt(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let a;if(a=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const a of e)n.push([t[0],a]);return[a].concat(n)}return a}computeMask(t,e){return r.tidy(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new l("Constants support is not implemented in RNN yet.");Kt(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new ee({shape:[e,null,...n]});const a=[t[0]].concat(t.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.util.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),s))throw new u("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=s.map(t=>new ee({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(r.tidy)(()=>{if(!this.stateful)throw new i("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>r.zeros([n,t])):this.states_=[r.zeros([n,this.cell.stateSize])];else if(null==t)r.dispose(this.states_),null!=this.keptStates&&(r.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>r.zeros([n,t])):this.states_[0]=r.zeros([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):r.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const a=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,o=[n,s];if(!r.util.arraysEqual(a.shape,o))throw new u("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[e]=a}}this.states_=this.states_.map(t=>r.keep(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const r=Oa(t,n,a,this.numConstants);t=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new ee({shape:t.shape}));o=o.concat(this.stateSpec)}null!=a&&(e.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof ne){const n=[t].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=r,i}return super.apply(t,e)}call(t,e){return Object(r.tidy)(()=>{const n=null==e?null:e.mask,a=null==e?null:e.training;let r=null==e?null:e.initialState;t=Yt(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new u("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Na((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]},t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],d=i[2];this.stateful&&this.resetStates(d,a);const p=this.returnSequences?l:c;return this.returnState?[p].concat(d):p})}getInitialState(t){return Object(r.tidy)(()=>{let e=r.zeros(t.shape);return e=r.sum(e,[1,2]),e=ot(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?pt(e,[1,t]):e):this.cell.stateSize>1?[pt(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ia.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const a=ve(e.cell,n);return new t(Object.assign(e,{cell:a}))}}Ia.className="RNN",r.serialization.registerClass(Ia);class Sa extends oe{}class Ta extends Sa{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,T(this.units,"units"),this.activation=Gn(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Zn(t.kernelRegularizer),this.recurrentRegularizer=Zn(t.recurrentRegularizer),this.biasRegularizer=Zn(t.biasRegularizer),this.kernelConstraint=L(t.kernelConstraint),this.recurrentConstraint=L(t.recurrentConstraint),this.biasConstraint=L(t.biasConstraint),this.dropout=nt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=nt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Qt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(r.tidy)(()=>{if(2!==(t=t).length)throw new u("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const a=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Da({ones:()=>r.onesLike(t),rate:this.dropout,training:a})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Da({ones:()=>r.onesLike(n),rate:this.recurrentDropout,training:a}));const o=this.dropoutMask,i=this.recurrentDropoutMask;s=ft(null!=o?r.mul(t,o):t,this.kernel.read()),null!=this.bias&&(s=yt(s,this.bias.read())),null!=i&&(n=r.mul(n,i));let c=r.add(s,ft(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Vn(this.activation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),recurrentInitializer:Wt(this.recurrentInitializer),biasInitializer:Wt(this.biasInitializer),kernelRegularizer:Yn(this.kernelRegularizer),recurrentRegularizer:Yn(this.recurrentRegularizer),biasRegularizer:Yn(this.biasRegularizer),activityRegularizer:Yn(this.activityRegularizer),kernelConstraint:M(this.kernelConstraint),recurrentConstraint:M(this.recurrentConstraint),biasConstraint:M(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ta.className="SimpleRNNCell",r.serialization.registerClass(Ta);class ja extends Ia{constructor(t){t.cell=new Ta(t),super(t)}call(t,e){return Object(r.tidy)(()=>{null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})})}static fromConfig(t,e){return new t(e)}}ja.className="SimpleRNN",r.serialization.registerClass(ja);class Ca extends Sa{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new u("GRUCell does not support reset_after parameter set to true.");this.units=t.units,T(this.units,"units"),this.activation=Gn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Gn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Zn(t.kernelRegularizer),this.recurrentRegularizer=Zn(t.recurrentRegularizer),this.biasRegularizer=Zn(t.biasRegularizer),this.kernelConstraint=L(t.kernelConstraint),this.recurrentConstraint=L(t.recurrentConstraint),this.biasConstraint=L(t.biasConstraint),this.dropout=nt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=nt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Qt(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(r.tidy)(()=>{if(2!==(t=t).length)throw new u("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Da({ones:()=>r.onesLike(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Da({ones:()=>r.onesLike(a),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(t=r.mul(t,s[0]));let d=ft(t,this.kernel.read());this.useBias&&(d=yt(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=r.mul(a,o[0]));const p=this.recurrentKernel.read(),[h,f]=r.split(p,[2*this.units,this.units],p.rank-1),m=ft(a,h),[b,g,y]=r.split(d,3,d.rank-1),[x,v]=r.split(m,2,m.rank-1);i=this.recurrentActivation.apply(r.add(b,x)),c=this.recurrentActivation.apply(r.add(g,v));const w=ft(r.mul(c,a),f);l=this.activation.apply(r.add(y,w));const k=r.add(r.mul(i,a),r.mul(r.add(1,r.neg(i)),l));return[k,k]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Vn(this.activation),recurrentActivation:Vn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),recurrentInitializer:Wt(this.recurrentInitializer),biasInitializer:Wt(this.biasInitializer),kernelRegularizer:Yn(this.kernelRegularizer),recurrentRegularizer:Yn(this.recurrentRegularizer),biasRegularizer:Yn(this.biasRegularizer),activityRegularizer:Yn(this.activityRegularizer),kernelConstraint:M(this.kernelConstraint),recurrentConstraint:M(this.recurrentConstraint),biasConstraint:M(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Ca.className="GRUCell",r.serialization.registerClass(Ca);class Ea extends Ia{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ca(t),super(t)}call(t,e){return Object(r.tidy)(()=>{null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Ea.className="GRU",r.serialization.registerClass(Ea);class Aa extends Sa{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,T(this.units,"units"),this.activation=Gn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Gn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Zn(t.kernelRegularizer),this.recurrentRegularizer=Zn(t.recurrentRegularizer),this.biasRegularizer=Zn(t.biasRegularizer),this.kernelConstraint=L(t.kernelConstraint),this.recurrentConstraint=L(t.recurrentConstraint),this.biasConstraint=L(t.biasConstraint),this.dropout=nt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=nt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Qt(t))[t.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;a=new((e=class extends Ot{apply(e,a){const r=t.apply([n]),s=(new It).apply([n]),o=t.apply([2*n]);return dt(dt(r,s),o)}}).className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(r.tidy)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new u("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let a=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Da({ones:()=>r.onesLike(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Da({ones:()=>r.onesLike(a),rate:this.recurrentDropout,training:n,count:4}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,d,p;0<this.dropout&&this.dropout<1&&(t=r.mul(t,o[0]));let h=ft(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=r.mul(a,i[0])),h=r.add(h,ft(a,this.recurrentKernel.read())),this.useBias&&(h=yt(h,this.bias.read()));const[f,m,b,g]=r.split(h,4,h.rank-1);c=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(m),d=r.add(r.mul(l,s),r.mul(c,this.activation.apply(b))),p=this.recurrentActivation.apply(g);const y=r.mul(p,this.activation.apply(d));return[y,y,d]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Vn(this.activation),recurrentActivation:Vn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),recurrentInitializer:Wt(this.recurrentInitializer),biasInitializer:Wt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Yn(this.kernelRegularizer),recurrentRegularizer:Yn(this.recurrentRegularizer),biasRegularizer:Yn(this.biasRegularizer),activityRegularizer:Yn(this.activityRegularizer),kernelConstraint:M(this.kernelConstraint),recurrentConstraint:M(this.recurrentConstraint),biasConstraint:M(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Aa.className="LSTMCell",r.serialization.registerClass(Aa);class _a extends Ia{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Aa(t),super(t)}call(t,e){return Object(r.tidy)(()=>{null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}_a.className="LSTM",r.serialization.registerClass(_a);class Ra extends Sa{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(r.tidy)(()=>{let n=(t=t).slice(1);const a=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?a.push(n.splice(0,t.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[t[0]].concat(n):[s[0]].concat(n),s=i.call(s,e),r.push(s.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;Kt(t)&&(t=t[0]),t=t,this.cells.forEach((n,a)=>{Y("RNNCell_".concat(a),()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const a=[];for(const r of e.cells)a.push(ve(r,n));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return $t(t)}setWeights(t){const e=[];for(const n of this.cells){const a=n.weights.length,r=t.splice(a);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}te(e)}}function Da(t){const{ones:e,rate:n,training:a=!1,count:s=1}=t,o=()=>xt(e(),n),i=()=>vt(o,e,a);if(!s||s<=1)return r.keep(i().clone());return Array(s).fill(void 0).map(i).map(t=>r.keep(t.clone()))}Ra.className="StackedRNNCells",r.serialization.registerClass(Ra);var Fa=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(t);r<a.length;r++)e.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(t,a[r])&&(n[a[r]]=t[a[r]])}return n};class Ma extends Ia{constructor(t){if(t.unroll)throw new l("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new l("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ee({ndim:5})]}call(t,e){return r.tidy(()=>{if(null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new u("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,a=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return r.tidy(()=>{const{stateSize:e}=this.cell,n=t.shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)],o=r.zeros(s);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){r.tidy(()=>{if(!this.stateful)throw new i("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>r.zeros(s)):this.states_=[r.zeros(s)];else if(null==t)r.dispose(this.states_),null!=this.keptStates&&(r.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>r.zeros(s)):this.states_[0]=r.zeros(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):r.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],a=s;if(!r.util.arraysEqual(n.shape,a))throw new u("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map(t=>r.keep(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===e,c=t[i?3:2],u=t[i?4:3],l=sa(c,a[0],r,s[0],o[0]),d=sa(u,a[1],r,s[1],o[1]);return[...t.slice(0,2),...i?[n,l,d]:[l,d,n]]}}Ma.className="ConvRNN2D";class za extends Aa{constructor(t){const{filters:e,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,T(this.filters,"filters"),this.kernelSize=ra(n,2,"kernelSize"),this.kernelSize.forEach(t=>T(t,"kernelSize")),this.strides=ra(a||1,2,"strides"),this.strides.forEach(t=>T(t,"strides")),this.padding=r||"valid",q(this.padding),this.dataFormat=s||"channelsLast",H(this.dataFormat),this.dilationRate=ra(o||1,2,"dilationRate"),this.dilationRate.forEach(t=>T(t,"dilationRate"))}build(t){var e;t=Qt(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new u("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const a=t[n],s=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;t=new((e=class extends Ot{apply(t,e){return lt([n.apply([a]),r.ones([a]),n.apply([2*a])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return r.tidy(()=>{if(3!==t.length)throw new u("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,a=t[0],s=t[1],o=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Da({ones:()=>r.onesLike(a),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,c=(t,e,n)=>e&&e[n]?r.mul(e[n],t):t;let l=c(a,i,0),d=c(a,i,1),p=c(a,i,2),h=c(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Da({ones:()=>r.onesLike(s),rate:this.recurrentDropout,training:n,count:4}));const f=this.recurrentDropoutMask;let m=c(s,f,0),b=c(s,f,1),g=c(s,f,2),y=c(s,f,3);const[x,v,w,k]=r.split(this.kernel.read(),4,3),[O,N,I,S]=this.useBias?r.split(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,x,O,this.padding),d=this.inputConv(d,v,N,this.padding),p=this.inputConv(p,w,I,this.padding),h=this.inputConv(h,k,S,this.padding);const[T,j,C,E]=r.split(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,T),b=this.recurrentConv(b,j),g=this.recurrentConv(g,C),y=this.recurrentConv(y,E);const A=this.recurrentActivation.apply(r.add(l,m)),_=this.recurrentActivation.apply(r.add(d,b)),R=r.add(r.mul(_,o),r.mul(A,this.activation.apply(r.add(p,g)))),D=r.mul(this.recurrentActivation.apply(r.add(h,y)),this.activation.apply(R));return[D,D,R]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=Fa(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(t,e,n,a){const s=r.conv2d(t,e,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?yt(s,n,this.dataFormat):s}recurrentConv(t,e){return r.conv2d(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}za.className="ConvLSTM2DCell",r.serialization.registerClass(za);class La extends Ma{constructor(t){const e=new za(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}La.className="ConvLSTM2D",r.serialization.registerClass(La);class Pa extends oe{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?e[a]:this.noiseShape[a]);return n}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,a=this.getNoiseShape(n);return vt(()=>xt(n,this.rate,a,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Pa.className="Dropout",r.serialization.registerClass(Pa);class Ba extends Pa{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Ba.className="SpatialDropout1D",r.serialization.registerClass(Ba);class Wa extends oe{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,T(this.units,"units"),this.activation=Gn(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=L(t.kernelConstraint),this.biasConstraint=L(t.biasConstraint),this.kernelRegularizer=Zn(t.kernelRegularizer),this.biasRegularizer=Zn(t.biasRegularizer),this.activityRegularizer=Zn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Qt(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Qt(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t),a=j(this.activation.getClassName());let r;return null!=a?r=ft(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=ft(n,this.kernel.read()),null!=this.bias&&(r=yt(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Vn(this.activation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),biasInitializer:Wt(this.biasInitializer),kernelRegularizer:Yn(this.kernelRegularizer),biasRegularizer:Yn(this.biasRegularizer),activityRegularizer:Yn(this.activityRegularizer),kernelConstraint:M(this.kernelConstraint),biasConstraint:M(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Wa.className="Dense",r.serialization.registerClass(Wa);class Va extends oe{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Qt(t);for(const e of t.slice(1))if(null==e)throw new u('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],tt(t,1)]}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);let n=Yt(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new u("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],tt(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Va.className="Flatten",r.serialization.registerClass(Va);class Ua extends oe{constructor(t){super(t),this.supportsMasking=!0,this.activation=Gn(t.activation)}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t);return this.activation.apply(n)})}getConfig(){const t={activation:Vn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Ua.className="Activation",r.serialization.registerClass(Ua);class Ga extends oe{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(r.tidy)(()=>{return t=Yt(t),e=t,n=this.n,Object(r.tidy)(()=>{if(2!==e.shape.length)throw new u("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(e.shape.length," tensor."));return pt(ot(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Ga.className="RepeatVector",r.serialization.registerClass(Ga);class Ha extends oe{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",a=e.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const t=a[i];if(this.isUnknown(t)){if(null!==s)throw new u("Can only specifiy one unknown dimension.");s=i}else r*=t}const o=tt(t);if(null!==s){if(0===r||o%r!==0)throw new u(n);a[s]=o/r}else if(o!==r)throw new u(n);return a}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return n.reshape(r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ha.className="Reshape",r.serialization.registerClass(Ha);class qa extends oe{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=rt(1,t.dims.length+1);if(!r.util.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ee({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Qt(t)).slice();return this.dims.forEach((n,a)=>{e[a+1]=t[n]}),e}call(t,e){return Object(r.transpose)(Yt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}qa.className="Permute",r.serialization.registerClass(qa);class Ka extends oe{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Yt(t);return Object(r.any)(Object(r.notEqual)(n,this.maskValue),-1)}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t),a=Object(r.any)(Object(r.notEqual)(n,this.maskValue),-1,!0);return n.mul(a.asType(n.dtype))})}}Ka.className="Masking",r.serialization.registerClass(Ka);class Xa extends oe{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(b(t.inputLength))}this.inputDim=t.inputDim,T(this.inputDim,"inputDim"),this.outputDim=t.outputDim,T(this.outputDim,"outputDim"),this.embeddingsInitializer=Vt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Zn(t.embeddingsRegularizer),this.activityRegularizer=Zn(t.activityRegularizer),this.embeddingsConstraint=L(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(r.tidy)(()=>this.maskZero?(t=Yt(t),Object(r.notEqual)(t,Object(r.zerosLike)(t))):null)}computeOutputShape(t){if(t=Qt(t),null==this.inputLength)return[...t,this.outputDim];const e=b(this.inputLength);if(e.length!==t.length-1)throw new u('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let a=0;a<e.length;++a){const r=e[a],s=t[a+1];if(null!=r&&null!=s&&r!==s)throw new u('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==r&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);let n=Yt(t);"int32"!==n.dtype&&(n=st(n,"int32"));return mt(this.embeddings.read(),n.as1D()).reshape(Qt(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Wt(this.embeddingsInitializer),embeddingsRegularizer:Yn(this.embeddingsRegularizer),activityRegularizer:Yn(this.activityRegularizer),embeddingsConstraint:M(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Xa.className="Embedding",r.serialization.registerClass(Xa);class Ya extends oe{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new l}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],s=e[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new u("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Qt(t)]),(t=t).length<2)throw new u("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const r of t)null!=r&&null!==r[0]&&e.push(r[0]);if(e=O(e),e.length>1)throw new u("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const e=null==t[r]?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const a=t.map(t=>t.length);-1===t.indexOf(null)&&1===O(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(r.tidy)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const a=at(n);for(let n of t){const t=n.rank;for(let e=0;e<a-t;++e)n=ot(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const o of t){const t=o.rank;if(null==t){const t=o.shape,a=t[0],s=t.slice(1).concat([a]);let i=o.reshape([a].concat(tt(t.slice(1))));i=r.transpose(i,[1,0]),i=i.reshape(s),e.push(i),n=!0}else if(t>1){const a=rt(1,t).concat([0]);e.push(r.transpose(o,a)),n=!0}else e.push(o)}let a=this.mergeFunction(e);const s=a.rank;if(n)if(null==s){const t=a.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));a=r.transpose(a.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(rt(0,s-1));a=r.transpose(a,t)}return a}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const n=null==t[a]?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const a of t)null!=a&&null!==a[0]&&n.push(a[0]);return n=O(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return r.tidy(()=>{if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an Array");if(!Array.isArray(t))throw new u("`inputs` should be an Array");if(e.length!==t.length)throw new u("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:r.expandDims(t,0)))[0];for(let t=1;t<e.length-1;++t)n=r.logicalAnd(n,e[t]);return n})}}class Qa extends Ya{constructor(t){super(t)}mergeFunction(t){return Object(r.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.add(e,t[n]);return e})}}Qa.className="Add",r.serialization.registerClass(Qa);class Za extends Ya{constructor(t){super(t)}mergeFunction(t){return Object(r.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.mul(e,t[n]);return e})}}Za.className="Multiply",r.serialization.registerClass(Za);class Ja extends Ya{constructor(t){super(t)}mergeFunction(t){return Object(r.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.add(e,t[n]);return r.mul(1/t.length,e)})}}Ja.className="Average",r.serialization.registerClass(Ja);class $a extends Ya{constructor(t){super(t)}mergeFunction(t){return Object(r.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=r.maximum(e,t[n]);return e})}}$a.className="Maximum",r.serialization.registerClass($a);class tr extends Ya{constructor(t){super(t)}mergeFunction(t){return Object(r.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=r.minimum(e,t[n]);return e})}}tr.className="Minimum",r.serialization.registerClass(tr);class er extends Ya{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new u("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const a of t)if(null!=a){e=!1;break}if(e)return;const n=[];for(let a=0;a<t.length;++a){const e=t[a].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(r.util.arraysEqual(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new u("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(r.tidy)(()=>lt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new u("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new u("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new u("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return r.tidy(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const a=[];for(let o=0;o<t.length;++o)null==e[o]?a.push(r.onesLike(t[o]).asType("bool")):e[o].rank<t[o].rank?a.push(r.expandDims(e[o],-1)):a.push(e[o]);const s=r.concat(a,this.axis);return r.all(s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function nr(t,e){for(;t<0;)t+=e;return t}er.className="Concatenate",r.serialization.registerClass(er);class ar extends Ya{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){r.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new l("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);if(e[a[0]]!==n[a[1]])throw new u("Dimension incompatibility: "+"".concat(e[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(t){if(2!==t.length)throw new u("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],a=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>nr(e,t[n].shape.length)):[nr(this.axes,n.shape.length),nr(this.axes,a.shape.length)],this.normalize&&(n=we(n,e[0]),a=we(a,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new l("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length)),r.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length)),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new l("batchDot is not implemented for complex64-type Tensors yet.");const a=t.shape.length,s=e.shape.length;null==n&&(n=[a-1,s-2]);const o=n;return r.tidy(()=>{let n,r;if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)r=o[0]===o[1]?t.mul(e).sum(o[0]):t.transpose([1,0]).mul(e).sum(o[1]);else{const n=o[0]!==t.shape.length-1,a=o[1]===e.shape.length-1;r=t.matMul(e,n,a)}if(n>0){let t;t=a>s?a+s-3:a-1;const e=[];for(let a=t;a<t+n;++a)e.push(a);r=r.squeeze(e)}return 1===r.shape.length&&(r=r.expandDims(1)),r})}(n,a,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[nr(this.axes,t.length),nr(this.axes,e.length)],n}computeOutputShape(t){r.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new l("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);e.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ar.className="Dot",r.serialization.registerClass(ar);class rr extends oe{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t);return vt(()=>ht(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}rr.className="GaussianNoise",r.serialization.registerClass(rr);class sr extends oe{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e);const n=Yt(t);if(this.rate>0&&this.rate<1){return vt(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(ht(n.shape,1,t))},()=>n,e.training||!1)}return n})}}sr.className="GaussianDropout",r.serialization.registerClass(sr);class or extends oe{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Yt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(r.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return vt(()=>{const e=Yt(t),a=-1.7580993408473766;let s=Object(r.greaterEqual)(Object(r.randomUniform)(n),this.rate);s=st(s,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-o*a*this.rate;return e.mul(s).add(s.add(-1).mul(a)).mul(o).add(i)},()=>Yt(t),e.training||!1)}return t})}}function ir(t,e,n,a,s,o=.001){let i;if(2===t.rank)i=r.batchNorm2d(t,e,n,a,s,o);else if(3===t.rank)i=r.batchNorm3d(t,e,n,a,s,o);else{if(4!==t.rank)throw new l("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");i=r.batchNorm4d(t,e,n,a,s,o)}return i}function cr(t,e,n,a,s=.001){return r.util.arraysEqual(a.slice().sort(),rt(0,t.rank-1))?function(t,e,n,a,s=.001){return Object(r.tidy)(()=>{const o=r.moments(t,a),i=o.mean,c=o.variance;return[ir(t,i,c,n,e,s),i,c]})}(t,e,n,a,s):function(t,e,n,a,s=.001){return Object(r.tidy)(()=>{const o=r.moments(t,a),i=o.mean,c=o.variance,u=[];for(const e of rt(0,t.rank))-1!==a.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),d=c.reshape(u),p=null==e?null:e.reshape(u),h=null==n?null:n.reshape(u);return[ir(t,l,d,h,p,s),i,c]})}(t,e,n,a,s)}or.className="AlphaDropout",r.serialization.registerClass(or);class ur extends oe{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Vt(t.betaInitializer||"zeros"),this.gammaInitializer=Vt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Vt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Vt(t.movingVarianceInitializer||"ones"),this.betaConstraint=L(t.betaConstraint),this.gammaConstraint=L(t.gammaConstraint),this.betaRegularizer=Zn(t.betaRegularizer),this.gammaRegularizer=Zn(t.gammaRegularizer)}build(t){t=Qt(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new u("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new ee({ndim:t.length,axes:{[e]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(r.tidy)(()=>{const n=null!=e.training&&e.training,a=Yt(t),s=a.shape,o=s.length,i=rt(0,o),c=this.axis>=0?this.axis:this.axis+o;i.splice(c,1);const u=p(1,o);u[c]=s[c];const l=i.slice();l.sort();const d=!r.util.arraysEqual(l,rt(0,o).slice(0,o-1));if(!n)return(()=>{if(d){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,r=this.scale?this.gamma.read().reshape(u):null;return ir(a,t,e,n,r,this.epsilon)}return ir(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,f,m]=cr(a,this.gamma.read(),this.beta.read(),i,this.epsilon),b=(t,e,n)=>{r.tidy(()=>{const a=1-n,r=t.read(),s=r.sub(e).mul(a);t.write(r.sub(s))})};return(()=>{b(this.movingMean,f,this.momentum),b(this.movingVariance,m,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Wt(this.betaInitializer),gammaInitializer:Wt(this.gammaInitializer),movingMeanInitializer:Wt(this.movingMeanInitializer),movingVarianceInitializer:Wt(this.movingVarianceInitializer),betaRegularizer:Yn(this.betaRegularizer),gammaRegularizer:Yn(this.gammaRegularizer),betaConstraint:M(this.betaConstraint),gammaConstraint:M(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ur.className="BatchNormalization",r.serialization.registerClass(ur);class lr extends oe{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Vt(t.betaInitializer||"zeros"),this.gammaInitializer=Vt(t.gammaInitializer||"ones"),this.betaRegularizer=Zn(t.betaRegularizer),this.gammaRegularizer=Zn(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Qt(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=e);for(const a of this.axis)if(a<0||a>=e)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==O(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Yt(t),a=n.shape,s=a.length;return Object(r.tidy)(()=>{let{mean:t,variance:e}=Object(r.moments)(n,this.axis,!0);const o=p(1,s);for(const n of this.axis)o[n]=a[n];const i=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(o):t;let c=i(this.gamma.read()),u=i(this.beta.read());const l=[],d=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),d.push(1)):(l.push(1),d.push(a[n]));return t=t.tile(l),e=e.tile(l),c=c.tile(d),u=u.tile(d),ir(n,t,e,u,c,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Wt(this.betaInitializer),gammaInitializer:Wt(this.gammaInitializer),betaRegularizer:Yn(this.betaRegularizer),gammaRegularizer:Yn(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}lr.className="LayerNormalization",r.serialization.registerClass(lr);class dr extends oe{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new u("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new u("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new u("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new ee({ndim:4})]}computeOutputShape(t){let e,n;return t=Qt(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(r.tidy)(()=>{return e=Yt(t),n=this.padding,a=this.dataFormat,Object(r.tidy)(()=>{if(4!==e.rank)throw new u("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(e.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new u("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new u("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let t;return t="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.pad(e,t)});var e,n,a})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function pr(t,e,n,a,s,o){return Object(r.tidy)(()=>{let i;H(s),K(o),q(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),t=ia(t,s);const c="same"===a?"same":"valid";return i="max"===o?r.maxPool(t,e,n,c):r.avgPool(t,e,n,c),"channelsFirst"===s&&(i=r.transpose(i,[0,3,1,2])),i})}function hr(t,e,n,a,s,o){return Object(r.tidy)(()=>{let i;H(s),K(o),q(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),t=ca(t,s);const c="same"===a?"same":"valid";return i="max"===o?r.maxPool3d(t,e,n,c):r.avgPool3d(t,e,n,c),"channelsFirst"===s&&(i=r.transpose(i,[0,4,1,2,3])),i})}dr.className="ZeroPadding2D",r.serialization.registerClass(dr);class fr extends oe{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new u("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(T(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new u("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}T(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,q(this.padding),this.inputSpec=[new ee({ndim:3})]}computeOutputShape(t){const e=sa((t=Qt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(r.tidy)(()=>{this.invokeCallHook(t,e),t=ot(Yt(t),2);const n=this.poolingFunction(Yt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.squeeze(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class mr extends fr{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return H(r),q(a),pr(t,e,n,a,r,"max")}}mr.className="MaxPooling1D",r.serialization.registerClass(mr);class br extends fr{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return H(r),q(a),pr(t,e,n,a,r,"avg")}}br.className="AveragePooling1D",r.serialization.registerClass(br);class gr extends oe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new u("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];T(this.poolSize,"poolSize"),T(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,H(this.dataFormat),q(this.padding),this.inputSpec=[new ee({ndim:4})]}computeOutputShape(t){t=Qt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=sa(e,this.poolSize[0],this.padding,this.strides[0]),n=sa(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(r.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Yt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yr extends gr{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return H(r),q(a),pr(t,e,n,a,r,"max")}}yr.className="MaxPooling2D",r.serialization.registerClass(yr);class xr extends gr{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return H(r),q(a),pr(t,e,n,a,r,"avg")}}xr.className="AveragePooling2D",r.serialization.registerClass(xr);class vr extends oe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new u("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];T(this.poolSize,"poolSize"),T(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,H(this.dataFormat),q(this.padding),this.inputSpec=[new ee({ndim:5})]}computeOutputShape(t){t=Qt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=sa(e,this.poolSize[0],this.padding,this.strides[0]),n=sa(n,this.poolSize[1],this.padding,this.strides[1]),a=sa(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,a]:[t[0],e,n,a,t[4]]}call(t,e){return Object(r.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Yt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class wr extends vr{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return H(r),q(a),hr(t,e,n,a,r,"max")}}wr.className="MaxPooling3D",r.serialization.registerClass(wr);class kr extends vr{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return H(r),q(a),hr(t,e,n,a,r,"avg")}}kr.className="AveragePooling3D",r.serialization.registerClass(kr);class Or extends oe{constructor(t){super(t),this.inputSpec=[new ee({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new l}}class Nr extends Or{constructor(t){super(t||{})}call(t,e){return Object(r.tidy)(()=>{const e=Yt(t);return r.mean(e,1)})}}Nr.className="GlobalAveragePooling1D",r.serialization.registerClass(Nr);class Ir extends Or{constructor(t){super(t||{})}call(t,e){return Object(r.tidy)(()=>{const e=Yt(t);return r.max(e,1)})}}Ir.className="GlobalMaxPooling1D",r.serialization.registerClass(Ir);class Sr extends oe{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,H(this.dataFormat),this.inputSpec=[new ee({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new l}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Tr extends Sr{call(t,e){return Object(r.tidy)(()=>{const e=Yt(t);return"channelsLast"===this.dataFormat?r.mean(e,[1,2]):r.mean(e,[2,3])})}}Tr.className="GlobalAveragePooling2D",r.serialization.registerClass(Tr);class jr extends Sr{call(t,e){return Object(r.tidy)(()=>{const e=Yt(t);return"channelsLast"===this.dataFormat?r.max(e,[1,2]):r.max(e,[2,3])})}}jr.className="GlobalMaxPooling2D",r.serialization.registerClass(jr);class Cr extends oe{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const a=ve(e.layer,n);delete e.layer;const r={layer:a};return Object.assign(r,e),new t(r)}}class Er extends Cr{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Qt(t)).length<3)throw new u("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Qt(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),a=t[1];return[n[0],a].concat(n.slice(1))}call(t,e){return Object(r.tidy)(()=>Na((t,n)=>[Yt(this.layer.call(t,e)),[]],t=Yt(t),[],!1,null,null,!1,!0)[1])}}Er.className="TimeDistributed",r.serialization.registerClass(Er);class Ar extends Cr{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ve(n),e.goBackwards=!0!==e.goBackwards;const a={};var r;if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=ve(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,I(U,"BidirectionalMergeMode",r),t.weights)throw new l("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,a,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(a=r.slice(1),e=r[0]):e=r[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[e].concat(a).concat(a.slice()):m(n)}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const r=Oa(t,n,a,this.numConstants);if(t=r.inputs,n=r.initialState,a=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==a)return super.apply(t,e);const s=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new u("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const a=n.map(t=>new ee({shape:t.shape}));this.forwardLayer.stateSpec=a.slice(0,t/2),this.backwardLayer.stateSpec=a.slice(t/2),o.push(...a)}if(null!=a)throw new l("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof ne;for(const c of s)if(c instanceof ne!==i)throw new u("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=r,i}return super.apply(t,e)}call(t,e){return Object(r.tidy)(()=>{const n=e.initialState;let a,s,o,i;if(null==n)a=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const r=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:r})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(s.slice(1))),a=a[0],s=s[0]),this.returnSequences&&(s=r.reverse(s,1)),"concat"===this.mergeMode?i=lt([a,s]):"sum"===this.mergeMode?i=r.add(a,s):"ave"===this.mergeMode?i=r.mul(.5,r.add(a,s)):"mul"===this.mergeMode?i=r.mul(a,s):null==this.mergeMode&&(i=[a,s]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Y(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Y(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ve(e.layer);if(delete e.layer,null!=e.numConstants)throw new l("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=n,new t(a)}}Ar.className="Bidirectional",r.serialization.registerClass(Ar);var _r=n(119),Rr=n(76),Dr=n(38),Fr=n(61);class Mr{constructor(){this.size=null}batch(t,e=!0){const n=this;let a;return r.util.assert(t>0,()=>"batchSize needs to be positive, but it is\n      ".concat(t)),a=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),zr(async()=>(await n.iterator()).columnMajorBatch(t,e,Lr),a)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,zr(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,zr(async()=>(await e.iterator()).filter(e=>r.tidy(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return zr(async()=>(await e.iterator()).map(e=>r.tidy(()=>t(e))),this.size)}mapAsync(t){const e=this;return zr(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return zr(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,zr(async()=>{const n=Object(Dr.e)(async()=>({value:await e.iterator(),done:!1}));return Object(Dr.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,zr(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,s=Rr.alea(e||r.util.now().toString());return zr(async()=>{let e=s.int32();return n&&(e+=s.int32()),(await a.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,zr(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function zr(t,e=null){return new class extends Mr{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Lr(t){if(null===t)return null;const e=t[0];if(Object(Fr.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof r.Tensor?r.stack(t):r.tensor(t)}(t),recurse:!1}}return{value:null,recurse:!0}}Mr.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");Dr.a;Dr.a;var Pr=n(228);Pr.a;function Br(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&r.util.assert("complex64"!==t.dtype,()=>"".concat(e," does not support complex64 tensors in the CPU backend."))})}const Wr=r.kernel_impls.whereImpl;class Vr extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,Object(r.engine)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={};return this.data.set(a,{values:t,dtype:n,refCount:1}),a}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map(t=>r.util.encodeString(t));a=this.write(s,t,e)}else a=this.write(n,t,e);return{dataId:a,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,a){this.data.set(t,{values:e,dtype:a,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>r.util.decodeString(t))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(t.shape,t.dtype,n)}makeOutput(t,e,n){const a=this.write(t,e,n);return Object(r.engine)().makeTensorFromDataId(a,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=r.util.now();t();return{kernelMs:r.util.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Br([t],"where");const e=this.readSync(t.dataId);return Wr(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Ur(t,e,n){return({inputs:a,attrs:s,backend:o})=>{const{x:i}=a;if(Br(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,u=c.data.get(i.dataId).values,l=r.util.sizeFromShape(i.shape),d=n||i.dtype,p=r.util.getArrayFromDType(d,l);for(let t=0;t<l;++t)p[t]=e(u[t],s);return c.makeTensorInfo(i.shape,d,p)}}function Gr(t,e,n){return({inputs:a,attrs:r,backend:s})=>{const{x:o}=a;if(Br(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=s,c=i.data.get(o.dataId).values,u=n||o.dtype,l=e(c,u,r);return i.makeTensorInfo(o.shape,u,l)}}Object(r.registerBackend)("cpu",()=>new Vr,1);const Hr=Ur(r.Elu,t=>t>=0?t:Math.exp(t)-1),qr={kernelName:r.Elu,backendName:"cpu",kernelFunc:Hr};function Kr(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Xr={kernelName:r.Identity,backendName:"cpu",kernelFunc:Kr};function Yr(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{alpha:o}=a;Br([s],"leakyRelu");const i=r.util.sizeFromShape(s.shape),c=n.data.get(s.dataId).values,u=r.util.getTypedArrayFromDType("float32",i);for(let r=0;r<c.length;r++)u[r]=c[r]<0?o*c[r]:c[r];return n.makeTensorInfo(s.shape,"float32",u)}const Qr={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:Yr};function Zr(t){return(e,n,a,s,o)=>{const i=r.backend_util.assertAndGetBroadcastShape(e,n),c=i.length,u=r.util.computeStrides(i),l=r.util.sizeFromShape(i),d=r.util.getTypedArrayFromDType(o,l),p=e.length,h=n.length,f=r.util.computeStrides(e),m=r.util.computeStrides(n),b=r.backend_util.getBroadcastDims(e,i),g=r.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let r=0;r<d.length;++r)d[r]=t(a[r%a.length],s[r%s.length]);else for(let y=0;y<d.length;++y){const e=r.util.indexToLoc(y,c,u),n=e.slice(-p);b.forEach(t=>n[t]=0);const o=r.util.locToIndex(n,p,f),i=e.slice(-h);g.forEach(t=>i[t]=0);const l=r.util.locToIndex(i,h,m);d[y]=t(a[o],s[l])}return[d,i]}}const Jr=Zr((t,e)=>t<0?e*t:t);function $r(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e;Br([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=Jr(a.shape,r.shape,s,o,a.dtype);return n.makeTensorInfo(c,a.dtype,i)}const ts={kernelName:r.Prelu,backendName:"cpu",kernelFunc:$r},es=Ur(r.Relu,t=>Math.max(0,t)),ns={kernelName:r.Relu,backendName:"cpu",kernelFunc:es},as=Ur(r.Relu6,t=>Math.min(Math.max(0,t),6)),rs={kernelName:r.Relu6,backendName:"cpu",kernelFunc:as};function ss(t,e,n,a,r){if("linear"===n)return Kr({inputs:{x:e},backend:t});if("relu"===n)return es({inputs:{x:e},backend:t});if("elu"===n)return Hr({inputs:{x:e},backend:t});if("relu6"===n)return as({inputs:{x:e},backend:t});if("prelu"===n)return $r({inputs:{x:e,alpha:a},backend:t});if("leakyrelu"===n)return Yr({inputs:{x:e},backend:t,attrs:{alpha:r}});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function os(t){const{inputs:e,backend:n}=t,{real:a,imag:r}=e,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const is={kernelName:r.Complex,backendName:"cpu",kernelFunc:os};function cs(t,e,n="float32"){if("complex64"===n){return os({inputs:{real:cs(t,e,"float32"),imag:cs(t,e,"float32")},backend:t})}const a=r.util.makeZerosTypedArray(r.util.sizeFromShape(e),n);return t.makeTensorInfo(e,n,a)}function us(t){const{inputs:e,backend:n}=t,{input:a}=e,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const ls={kernelName:r.Real,backendName:"cpu",kernelFunc:us};function ds(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return Kr({inputs:{x:s},backend:n});const t=cs(n,s.shape,s.dtype),e=ds({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=os({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),a}if("complex64"===s.dtype){const t=us({inputs:{input:s},backend:n}),e=ds({inputs:{x:t},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(t),e}if(!r.util.hasEncodingLoss(s.dtype,o)){const t=Kr({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===o){const t=n.data.get(s.dataId).values,e=r.util.toTypedArray([0],s.dtype),[a,o]=Zr((t,e)=>t!==e?1:0)(s.shape,[],t,e,"bool");return n.makeTensorInfo(o,"bool",a)}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}const ps={kernelName:r.Cast,backendName:"cpu",kernelFunc:ds};function hs(t,e,n,a){return null==n?({inputs:n,backend:r})=>{const{a:s,b:o}=n,i=r;Br([s,o],t);const c=i.data.get(s.dataId).values,u=i.data.get(o.dataId).values,l=a||s.dtype,[d,p]=e(s.shape,o.shape,c,u,l);return i.makeTensorInfo(p,l,d)}:({inputs:t,backend:r})=>{const{a:s,b:o}=t,i=r;if("complex64"===s.dtype||"complex64"===o.dtype){const t=ds({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),e=i.data.get(t.dataId),a=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,c=i.data.get(a.dataId).values,u=i.data.get(r.dataId).values,l=ds({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(l.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(h.dataId).values,[b,g,y]=n(s.shape,o.shape,c,u,f,m),x=i.makeTensorInfo(y,"float32",b),v=i.makeTensorInfo(y,"float32",g),w=os({inputs:{real:x,imag:v},backend:i});return i.disposeIntermediateTensorInfo(t),i.disposeIntermediateTensorInfo(l),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),w}{const t=i.data.get(s.dataId).values,n=i.data.get(o.dataId).values,r=a||s.dtype,[c,u]=e(s.shape,o.shape,t,n,r);return i.makeTensorInfo(u,r,c)}}}function fs(t){return(e,n,a,s,o,i)=>{const c=r.backend_util.assertAndGetBroadcastShape(e,n),u=r.util.sizeFromShape(c),l=c.length,d=r.util.computeStrides(c),p=r.util.getTypedArrayFromDType("float32",u),h=r.util.getTypedArrayFromDType("float32",u),f=r.backend_util.getBroadcastDims(e,c),m=r.backend_util.getBroadcastDims(n,c),b=r.backend_util.mergeRealAndImagArrays(a,s),g=r.backend_util.mergeRealAndImagArrays(o,i),y=e.length,x=r.util.computeStrides(e),v=n.length,w=r.util.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<p.length;r++){const e=r%b.length,n=r%g.length,a=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);p[r]=a.real,h[r]=a.imag}else for(let k=0;k<p.length;k++){const e=r.util.indexToLoc(k,l,d),n=e.slice(-y);f.forEach(t=>n[t]=0);const a=r.util.locToIndex(n,y,x),s=e.slice(-v);m.forEach(t=>s[t]=0);const o=r.util.locToIndex(s,v,w),i=t(b[2*a],b[2*a+1],g[2*o],g[2*o+1]);p[k]=i.real,h[k]=i.imag}return[p,h,c]}}const ms=Zr((t,e)=>t+e),bs=fs((t,e,n,a)=>({real:t+n,imag:e+a})),gs=hs(r.Add,ms,bs),ys={kernelName:r.Add,backendName:"cpu",kernelFunc:gs};function xs(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{shape:o}=a,i=r.util.sizeFromShape(s.shape),c=r.util.inferFromImplicitShape(o,i),u=r.util.sizeFromShape(c);r.util.assert(i===u,()=>"The new shape (".concat(c,") has ").concat(u," elements and the old ")+"shape (".concat(s.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=c,e.shape=c}return{dataId:s.dataId,shape:c,dtype:s.dtype}}const vs={kernelName:r.Reshape,backendName:"cpu",kernelFunc:xs};function ws(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:o}=e,{transposeA:i,transposeB:c}=a;Br([s,o],"matMul");const u=s.shape.length,l=o.shape.length,d=i?s.shape[u-2]:s.shape[u-1],p=c?o.shape[l-1]:o.shape[l-2],h=i?s.shape[u-1]:s.shape[u-2],f=c?o.shape[l-2]:o.shape[l-1],m=s.shape.slice(0,-2),b=o.shape.slice(0,-2),g=r.util.sizeFromShape(m),y=r.util.sizeFromShape(b),x=g===y||1===g||1===y;r.util.assert(u>=2&&l>=2&&x,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(m,") and (").concat(b,")."));const v=(g>y?s.shape.slice(0,-2):o.shape.slice(0,-2)).concat([h,f]);r.util.assert(d===p,()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(s.shape," and ")+"".concat(o.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match."));const w=c?[y,f,p]:[y,p,f],k=xs({inputs:{x:s},backend:n,attrs:{shape:i?[g,d,h]:[g,h,d]}}),O=xs({inputs:{x:o},backend:n,attrs:{shape:w}}),N=i?k.shape[1]:k.shape[2],I=i?k.shape[2]:k.shape[1],S=c?O.shape[1]:O.shape[2],T=Math.max(g,y),j=n.data.get(k.dataId).values,C=n.data.get(O.dataId).values,E=r.util.computeStrides(k.shape),A=r.util.computeStrides(O.shape),[_,R,D]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,M,z]=c?[1,A[1],A[0]]:[A[1],1,A[0]],L=I*S,P=Object(r.buffer)([T,I,S],k.dtype),B=P.values,W=n.blockSize;for(let r=0;r<T;r++)for(let t=0;t<I;t+=W)for(let e=0;e<S;e+=W)for(let n=0;n<N;n+=W){const a=Math.min(t+W,I),s=Math.min(e+W,S),o=Math.min(n+W,N);for(let i=t;i<a;i++)for(let t=e;t<s;t++){let e=0;for(let a=n;a<o;a++){const n=Math.min(r,g-1)*_,s=Math.min(r,y-1)*z;e+=j[n+i*R+a*D]*C[a*F+t*M+s]}B[r*L+(i*S+t)]+=e}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(O),n.makeTensorInfo(v,P.dtype,P.values)}const ks={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:ws};const Os={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=a;let p,h,f;const m=[];p=ws({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:u},backend:n}),o&&(h=gs({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),l&&(f=ss(n,p,l,i,d),m.push(p),p=f);for(const b of m)n.disposeIntermediateTensorInfo(b);return p}};function Ns(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Is={kernelName:r.Abs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Br(e,"abs");let a=new Float32Array(r.util.sizeFromShape(e.shape));return a=Ns(n.data.get(e.dataId).values),n.makeOutput(a,e.shape,"float32")}},Ss=Ur(r.Acos,t=>Math.acos(t)),Ts={kernelName:r.Acos,backendName:"cpu",kernelFunc:Ss},js=Ur(r.Acosh,t=>Math.acosh(t)),Cs={kernelName:r.Acosh,backendName:"cpu",kernelFunc:js};const Es={kernelName:r.AddN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,a=e;Br(e,"addN");const s=a.map(t=>n.data.get(t.dataId).values),o=Object(r.buffer)(a[0].shape,a[0].dtype),i=o.values;for(let r=0;r<a.length;r++){const t=s[r];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function As(t,e,n,a,s){const o=e.length,i=r.util.sizeFromShape(e),c=r.util.computeStrides(e),u=r.util.computeStrides(s),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let d=0;d<i;++d){const e=r.util.indexToLoc(d,o,c),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[a[t]];l[r.util.locToIndex(n,o,u)]=t[d]}return l}function _s(t){const{inputs:e,attrs:n,backend:a}=t,{x:r}=e,{perm:s}=n;Br(r,"transpose");const o=r.shape.length,i=new Array(o);for(let u=0;u<i.length;u++)i[u]=r.shape[s[u]];const c=As(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const Rs={kernelName:r.Transpose,backendName:"cpu",kernelFunc:_s};const Ds={kernelName:r.All,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a;Br(s,"all");const c=r.util.parseAxisParam(o,s.shape);let u=c;const l=r.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=l&&(d=_s({inputs:{x:s},backend:n,attrs:{perm:l}}),u=r.backend_util.getInnerMostAxes(u.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",u,d.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),d.dtype),b=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const t=r*f;let e=b[t];for(let n=0;n<f;++n){const a=b[t+n];e=e&&a}m[r]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(p,d.dtype,m);if(i){const t=xs({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Fs={kernelName:r.Any,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a;Br(s,"any");const c=r.util.parseAxisParam(o,s.shape);let u=c;const l=r.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=l&&(d=_s({inputs:{x:s},backend:n,attrs:{perm:l}}),u=r.backend_util.getInnerMostAxes(u.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",u,d.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),d.dtype),b=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const t=r*f;let e=b[t];for(let n=0;n<f;++n){const a=b[t+n];e=e||a}m[r]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(p,d.dtype,m);if(i){const t=xs({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Ms={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;Br(s,"argMax");let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=_s({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=r.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[d,p]=r.backend_util.computeOutAndReduceShapes(u.shape,i),h=r.util.sizeFromShape(d),f=r.util.makeZerosTypedArray(h,"int32"),m=r.util.sizeFromShape(p),b=n.data.get(u.dataId).values;for(let r=0;r<f.length;++r){const t=r*m;let e=b[t],n=0;for(let a=0;a<m;++a){const r=b[t+a];r>e&&(e=r,n=a)}f[r]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}};const zs={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;Br(s,"argMin");let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=_s({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=r.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[d,p]=r.backend_util.computeOutAndReduceShapes(u.shape,i),h=r.util.sizeFromShape(d),f=r.util.makeZerosTypedArray(h,"int32"),m=r.util.sizeFromShape(p),b=n.data.get(u.dataId).values;for(let r=0;r<f.length;++r){const t=r*m;let e=b[t],n=0;for(let a=0;a<m;++a){const r=b[t+a];r<e&&(e=r,n=a)}f[r]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}},Ls=Ur(r.Asin,t=>Math.asin(t)),Ps={kernelName:r.Asin,backendName:"cpu",kernelFunc:Ls},Bs=Ur(r.Asinh,t=>Math.asinh(t)),Ws={kernelName:r.Asinh,backendName:"cpu",kernelFunc:Bs},Vs=Ur(r.Atan,t=>Math.atan(t)),Us={kernelName:r.Atan,backendName:"cpu",kernelFunc:Vs},Gs=Zr((t,e)=>Math.atan2(t,e)),Hs=hs(r.Atan2,Gs),qs={kernelName:r.Atan2,backendName:"cpu",kernelFunc:Hs},Ks=Ur(r.Atanh,t=>Math.atanh(t)),Xs={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Ks};function Ys(t,e,n,a,s,o){const i=s.strideHeight,c=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r.buffer)(s.outShape,n),g=b.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let r=0;r<s.batchSize;++r){const e=r*y,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let b=0;b<s.outHeight;++b){const y=b*i-h,w=Math.max(0,y),k=Math.min(s.inHeight,d+y),O=e+b*x;for(let e=0;e<s.outWidth;++e){const i=e*c-f,d=Math.max(0,i),h=Math.min(s.inWidth,p+i);let b=m,y=0,x=0;for(let e=w;e<k;e+=u){const s=n+e*a[1];for(let e=d;e<h;e+=l){const n=t[s+e*a[2]+r];"max"===o&&n>b?b=n:"avg"===o&&(y+=n,x++)}if(isNaN(b))break}g[O+e*v+r]="avg"===o?y/x:b}}}return b}function Qs(t,e,n,a,s=!1,o=!1){const i=Object(r.buffer)(a.outShape,"int32"),c=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,b=Object(r.buffer)(e,n,t);for(let r=0;r<a.batchSize;++r)for(let t=0;t<a.inChannels;++t)for(let e=0;e<a.outHeight;++e){const n=e*c-f;let g=n;for(;g<0;)g+=l;const y=Math.min(a.inHeight,p+n);for(let c=0;c<a.outWidth;++c){const p=c*u-m;let f=p;for(;f<0;)f+=d;const x=Math.min(a.inWidth,h+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=g;e<y;e+=l){const i=e-n;for(let n=f;n<x;n+=d){const c=n-p,u=b.get(r,e,n,t);u>v&&(v=u,w=s?o?((r*a.inHeight+e)*a.inWidth+n)*a.inChannels+t:(e*a.inWidth+n)*a.inChannels+t:i*h+c)}}i.set(w,r,e,c,t)}}return i}function Zs(t,e,n,a,s,o){const i=s.strideDepth,c=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,b=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(r.buffer)(s.outShape,n),w=v.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],O=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let r=0;r<s.batchSize;++r){const e=r*k,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let v=0;v<s.outDepth;++v){const k=v*i-b;let S=k;for(;S<0;)S+=l;const T=Math.min(s.inDepth,h+k),j=e+v*O;for(let e=0;e<s.outHeight;++e){const i=e*c-g;let h=i;for(;h<0;)h+=d;const b=Math.min(s.inHeight,f+i),v=j+e*N;for(let e=0;e<s.outWidth;++e){const i=e*u-y;let c=i;for(;c<0;)c+=p;const f=Math.min(s.inWidth,m+i),g=v+e*I;let k=x,O=0,N=0;for(let e=S;e<T;e+=l){const s=n+e*a[1];for(let e=h;e<b;e+=d){const n=s+e*a[2];for(let e=c;e<f;e+=p){const s=t[n+e*a[3]+r];if("max"===o&&s>k?k=s:"avg"===o&&(O+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+r]="avg"===o?O/N:k}}}}return v}const Js={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;Br(s,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))d=Kr({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=r.util.computeStrides(s.shape),a=Ys(t,s.shape,s.dtype,e,l,"avg");d=n.makeTensorInfo(l.outShape,s.dtype,a.values)}return d}};const $s={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l,dilations:d}=a;Br(s,"avgPool3d");let p=d;null==p&&(p=[1,1,1]);const h=r.backend_util.computePool3DInfo(s.shape,o,i,p,c,u,l),f=Zs(n.data.get(s.dataId).values,s.shape,s.dtype,r.util.computeStrides(s.shape),h,"avg");return n.makeTensorInfo(f.shape,"float32",f.values)}};const to={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,{filterSize:i,strides:c,pad:u,dilations:l,dimRoundingMode:d}=a;Br([s,o],"avgPool3DGrad");const p=r.backend_util.computePool3DInfo(o.shape,i,c,l,u,d),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=p.dilationDepth,v=p.dilationHeight,w=p.dilationWidth,k=p.effectiveFilterDepth,O=p.effectiveFilterHeight,N=p.effectiveFilterWidth,I=k-1-p.padInfo.front,S=N-1-p.padInfo.left,T=O-1-p.padInfo.top,j=Object(r.buffer)(o.shape,"float32"),C=1/(b*g*y),E=n.bufferSync(s);for(let r=0;r<p.batchSize;++r)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inDepth;++e)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=e-I,o=n-T,i=a-S;let c=0;for(let e=0;e<k;e+=x){const n=(s+e)/h;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let e=0;e<O;e+=v){const a=(o+e)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let e=0;e<N;e+=w){const s=(i+e)/m;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;c+=E.get(r,n,a,s,t)}}}j.set(c*C,r,e,n,a,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const eo={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,i=o;Br([s,o],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=a,d=r.backend_util.computePool2DInfo(i.shape,c,u,1,l),p=d.strideHeight,h=d.strideWidth,f=d.filterHeight,m=d.filterWidth,b=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,w=y-1-d.padInfo.top,k=Object(r.buffer)(i.shape,"float32"),O=1/(f*m),N=n.data.get(s.dataId).values,I=Object(r.buffer)(s.shape,"float32",N);for(let r=0;r<d.batchSize;++r)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const a=e-w,s=n-v;let o=0;for(let e=0;e<y;e+=b){const n=(a+e)/p;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let e=0;e<x;e+=g){const a=(s+e)/h;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;o+=I.get(r,n,a,t)}}k.set(o*O,r,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const no={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,scale:o,offset:i,mean:c,variance:u}=e;r.util.assert(c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==o||c.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Br([s,c,u,o,i],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const d=n.data.get(s.dataId).values,p=n.data.get(c.dataId).values,h=n.data.get(u.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),g=m.length,y=f.length,x=h.length,v=p.length;let w=0,k=0,O=0,N=0;for(let r=0;r<d.length;++r)b[r]=m[w++]+(d[r]-p[k++])*f[O++]/Math.sqrt(h[N++]+l),w>=g&&(w=0),k>=v&&(k=0),O>=y&&(O=0),N>=x&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,b)}};function ao(t,e,n,a,s){const o=r.slice_util.isSliceContinous(a,e,n),i=r.util.sizeFromShape(n),c=r.util.computeStrides(a);if(o){const n=r.slice_util.computeFlatOffset(e,c);return"string"===s?t.slice(n,n+i):t.subarray(n,n+i)}const u="string"===s?r.backend_util.fromUint8ToStringArray(t):t,l=Object(r.buffer)(a,s,u),d=Object(r.buffer)(n,s);for(let r=0;r<d.size;++r){const t=d.indexToLoc(r),n=t.map((t,n)=>t+e[n]);d.set(l.get(...n),...t)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function ro(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,size:i}=a;Br(s,"slice");const[c,u]=r.slice_util.parseSliceParams(s,o,i);r.slice_util.assertParamsValid(s,c,u);const l=ao(n.data.get(s.dataId).values,c,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const so={kernelName:r.Slice,backendName:"cpu",kernelFunc:ro};const oo={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,crops:i}=a;Br([s],"batchToSpaceND");const c=o.reduce((t,e)=>t*e),u=r.backend_util.getReshaped(s.shape,o,c),l=r.backend_util.getPermuted(u.length,o.length),d=r.backend_util.getReshapedPermuted(s.shape,o,c),p=r.backend_util.getSliceBeginCoords(i,o.length),h=r.backend_util.getSliceSize(d,i,o.length),f=xs({inputs:{x:s},backend:n,attrs:{shape:u}}),m=_s({inputs:{x:f},backend:n,attrs:{perm:l}}),b=xs({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ro({inputs:{x:b},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}};function io(t,e,n,a,s){const o=r.util.sizeFromShape(a),i=r.util.makeZerosTypedArray(s,n);for(let r=0;r<t.length;r++){const n=t[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=o>0?e[r]:1)}return i}function co(t,e,n,a=!1){const s=t.shape[0],o=t.shape[1],i=Object(r.buffer)([s,n],e.dtype);for(let r=0;r<s;r++)for(let s=0;s<o;s++){const o=t.get(r,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,r,o):e.size>0?i.set(i.get(r,o)+e.get(r,s),r,o):i.set(i.get(r,o)+1,r,o))}return i}const uo={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o}=a,i=io(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}};function lo(t){return(e,n,a)=>{const s=r.util.getTypedArrayFromDType(n,e.length);for(let r=0;r<e.length;++r)s[r]=t(e[r],a);return s}}const po=lo(t=>Math.ceil(t)),ho=Gr(r.Ceil,po),fo={kernelName:r.Ceil,backendName:"cpu",kernelFunc:ho},mo=Ur(r.ClipByValue,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),bo={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:mo},go={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,a=new Float32Array(r.util.sizeFromShape(e.shape)),s=n.data.get(e.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,c=n.data.get(o.dataId).values,u=n.data.get(i.dataId).values;for(let r=0;r<c.length;r++){const t=c[r],e=u[r];a[r]=Math.hypot(t,e)}return n.makeOutput(a,e.shape,"float32")}};function yo(t,e,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(e));if(a&&"string"!==n){let e=0;t.forEach(t=>{const n=r.util.sizeFromShape(t.shape);s.set(t.vals,e),e+=n})}else{let a=0;t.forEach(t=>{const o="string"===n?r.backend_util.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const r=n*e[1]+a;for(let e=0;e<t.shape[1];++e)s[r+e]=o[i++]}a+=t.shape[1]})}return s}function xo(t){const{inputs:e,backend:n}=t,{input:a}=e,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const vo={kernelName:r.Imag,backendName:"cpu",kernelFunc:xo};function wo(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a,o=r.util.parseAxisParam(s,e[0].shape)[0];let i=r.backend_util.computeOutShape(e.map(t=>t.shape),o);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(t=>r.util.sizeFromShape(t.shape)>0);if(1===c.length)return Kr({inputs:{x:c[0]},backend:n});const u=c.map(t=>t.shape);if(r.backend_util.assertParamsConsistent(u,o),"complex64"===c[0].dtype){const t=c.map(t=>us({inputs:{input:t},backend:n})),e=c.map(t=>xo({inputs:{input:t},backend:n})),a=wo({inputs:t,backend:n,attrs:{axis:o}}),r=wo({inputs:e,backend:n,attrs:{axis:o}}),s=os({inputs:{real:a,imag:r},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}const l=c.map(t=>{const e=r.util.sizeFromShape(t.shape.slice(o));return xs({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),d=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));i=r.backend_util.computeOutShape(l.map(t=>t.shape),1);const p=1===l[0].shape[0],h=yo(d,i,e[0].dtype,p),f=r.backend_util.computeOutShape(c.map(t=>t.shape),o),m=n.makeTensorInfo(f,e[0].dtype,h);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}const ko={kernelName:r.Concat,backendName:"cpu",kernelFunc:wo};function Oo(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=a;Br([s,o],"conv2d");const p=r.backend_util.convertConv2DDataFormat(u),h=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,l,c,d,!1,p),f=h.filterHeight,m=h.filterWidth,b=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,x=h.padInfo.top,v="channelsLast"===h.dataFormat,w=new r.TensorBuffer(h.outShape,s.dtype),k=r.util.computeStrides(s.shape),O=r.util.computeStrides(o.shape),N=k[0],I=v?k[1]:k[2],S=v?k[2]:1,T=v?1:k[1],j=w.strides[0],C=v?w.strides[1]:w.strides[2],E=v?w.strides[2]:1,A=v?1:w.strides[1],_=n.data.get(s.dataId).values,R=n.data.get(o.dataId).values,D=w.values;for(let r=0;r<h.batchSize;++r){const t=r*N,e=r*j;for(let n=0;n<h.outHeight;++n){const a=e+n*C,r=n*h.strideHeight-x;for(let e=0;e<f;++e){const n=r+e*b;if(n<0||n>=h.inHeight)continue;const s=e*O[0],o=t+n*I;for(let t=0;t<h.outWidth;++t){const e=a+t*E,n=t*h.strideWidth-y;for(let t=0;t<m;++t){const a=n+t*g;if(a<0||a>=h.inWidth)continue;const r=o+a*S;let i=s+t*O[1];for(let t=0;t<h.inChannels;++t){const n=_[r+t*T];for(let t=0;t<h.outChannels;++t)D[e+t*A]+=n*R[i+t];i+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const No={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:Oo};const Io={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=a;Br([s,o],"conv2dBackpropFilter");const p=r.backend_util.convertConv2DDataFormat(u),h=r.backend_util.computeConv2DInfo(s.shape,d,i,1,c,l,!1,p),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=h,y="channelsLast"===h.dataFormat,x=new r.TensorBuffer(h.filterShape,"float32"),v=h.padInfo.left,w=h.padInfo.top,k=n.data.get(s.dataId).values,O=n.data.get(o.dataId).values,N=new r.TensorBuffer(s.shape,s.dtype,k),I=new r.TensorBuffer(o.shape,o.dtype,O);for(let r=0;r<b;++r){const t=Math.max(0,Math.ceil((w-r)/f)),e=Math.min(h.outHeight,(h.inHeight+w-r)/f);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((v-n)/m)),s=Math.min(h.outWidth,(h.inWidth+v-n)/m);for(let o=0;o<h.inChannels;++o)for(let i=0;i<h.outChannels;++i){let c=0;for(let u=0;u<h.batchSize;++u)for(let l=t;l<e;++l){const t=r+l*f-w;for(let e=a;e<s;++e){const a=n+e*m-v;c+=y?N.get(u,t,a,o)*I.get(u,l,e,i):N.get(u,o,t,a)*I.get(u,i,l,e)}}x.set(c,r,n,o,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const So={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=a;Br([s,o],"conv2dBackpropInput");const p=r.util.computeStrides(o.shape),h=r.util.computeStrides(s.shape);let f=r.backend_util.convertConv2DDataFormat(l);const m=r.backend_util.computeConv2DInfo(i,o.shape,c,1,u,d,!1,f),b=new r.TensorBuffer(m.inShape,"float32"),g=b.values,y=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,[v,w,k]=p,{batchSize:O,filterHeight:N,filterWidth:I,inChannels:S,inHeight:T,inWidth:j,outChannels:C,outHeight:E,outWidth:A,strideHeight:_,strideWidth:R}=m;f=m.dataFormat;const D=N-1-m.padInfo.top,F=I-1-m.padInfo.left,M="channelsLast"===f,z=b.strides[0],L=M?b.strides[1]:b.strides[2],P=M?b.strides[2]:1,B=M?1:b.strides[1],W=h[0],V=M?h[1]:h[2],U=M?h[2]:1,G=M?1:h[1];for(let r=0;r<O;++r)for(let t=0;t<S;++t)for(let e=0;e<T;++e){const n=e-D,a=Math.max(0,Math.ceil(n/_)),s=Math.min(E,(N+n)/_);for(let o=0;o<j;++o){const i=o-F,c=Math.max(0,Math.ceil(i/R)),u=Math.min(A,(I+i)/R);let l=0;for(let e=a;e<s;++e){const a=e*_-n;for(let n=c;n<u;++n){const s=W*r+V*e+U*n,o=v*(N-1-a)+w*(I-1-(n*R-i))+k*t;for(let t=0;t<C;++t){l+=y[s+G*t]*x[o+t]}}}g[z*r+L*e+P*o+B*t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const To={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dilations:u}=a;Br([s,o],"conv3d");const l=r.backend_util.computeConv3DInfo(s.shape,o.shape,i,u,c),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=l,y=g.front,x=g.left,v=g.top,w=new r.TensorBuffer(l.outShape,s.dtype),k=n.data.get(s.dataId).values,O=n.data.get(o.dataId).values,N=w.values,I=r.util.computeStrides(s.shape),S=r.util.computeStrides(o.shape);for(let r=0;r<l.batchSize;++r){const t=r*I[0],e=r*w.strides[0];for(let n=0;n<l.outDepth;++n){const a=e+n*w.strides[1],r=n*l.strideDepth-y;for(let e=0;e<d;++e){const n=r+e*f;if(n<0||n>=l.inDepth)continue;const s=e*S[0],o=t+n*I[1];for(let t=0;t<l.outHeight;++t){const e=a+t*w.strides[2],n=t*l.strideHeight-v;for(let t=0;t<p;++t){const a=n+t*m;if(a<0||a>=l.inHeight)continue;const r=s+t*S[1],i=o+a*I[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,a=t*l.strideWidth-x;for(let t=0;t<h;++t){const e=a+t*b;if(e<0||e>=l.inWidth)continue;const s=r+t*S[2],o=i+e*l.inChannels;let c=s;for(let t=0;t<l.inChannels;++t){const e=k[o+t];for(let t=0;t<l.outChannels;++t)N[n+t]+=e*O[c+t];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const jo={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:i,pad:c,filterShape:u}=a;Br([s,o],"conv3dBackpropFilterV2");const l=r.util.computeStrides(s.shape),d=r.util.computeStrides(o.shape),p=r.backend_util.computeConv3DInfo(s.shape,u,i,1,c),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new r.TensorBuffer(p.filterShape,"float32"),v=x.values,[w,k,O,N]=x.strides,I=n.data.get(o.dataId).values,[S,T,j,C]=d,E=n.data.get(s.dataId).values,[A,_,R,D]=l,F=p.padInfo.front,M=p.padInfo.left,z=p.padInfo.top;for(let r=0;r<b;++r){const t=Math.max(0,Math.ceil((F-r)/h)),e=Math.min(p.outDepth,(p.inDepth+F-r)/h),n=r*w;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((z-a)/f)),o=Math.min(p.outHeight,(p.inHeight+z-a)/f),i=a*k+n;for(let n=0;n<y;++n){const c=Math.max(0,Math.ceil((M-n)/m)),u=Math.min(p.outWidth,(p.inWidth+M-n)/m),l=n*O+i;for(let i=0;i<p.inChannels;++i){const d=i*N+l;for(let l=0;l<p.outChannels;++l){let b=0;for(let d=0;d<p.batchSize;++d){const p=d*A,g=d*S;for(let d=t;d<e;++d){const t=(r+d*h-F)*_+p,e=d*T+g;for(let r=s;r<o;++r){const s=(a+r*f-z)*R+t,o=r*j+e;for(let t=c;t<u;++t){const e=t*C+o;b+=E[(n+t*m-M)*D+s+i]*I[e+l]}}}}v[d+l]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Co={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{pad:i,strides:c,inputShape:u}=a;Br([s],"conv3dBackpropInputV2");const l=r.util.computeStrides(s.shape),d=r.util.computeStrides(o.shape),p=r.backend_util.computeConv3DInfo(u,o.shape,c,1,i),h=new r.TensorBuffer(p.inShape,"float32"),f=h.values,[m,b,g,y]=h.strides,x=n.data.get(s.dataId).values,[v,w,k,O]=l,N=n.data.get(o.dataId).values,[I,S,T,j]=d,{batchSize:C,filterDepth:E,filterHeight:A,filterWidth:_,inChannels:R,inDepth:D,inHeight:F,inWidth:M,outChannels:z,outDepth:L,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=p,G=E-1-p.padInfo.front,H=A-1-p.padInfo.top,q=_-1-p.padInfo.left;for(let r=0;r<C;++r)for(let t=0;t<R;++t)for(let e=0;e<D;++e){const n=e-G,a=Math.max(0,Math.ceil(n/W)),s=Math.min(L,(E+n)/W);for(let o=0;o<F;++o){const i=o-H,c=Math.max(0,Math.ceil(i/V)),u=Math.min(P,(A+i)/V);for(let l=0;l<M;++l){const d=l-q,p=Math.max(0,Math.ceil(d/U)),h=Math.min(B,(_+d)/U);let C=0;for(let e=a;e<s;++e){const a=e*W-n;for(let n=c;n<u;++n){const s=n*V-i;for(let o=p;o<h;++o){const i=v*r+w*e+k*n+O*o,c=I*(E-1-a)+S*(A-1-s)+T*(_-1-(o*U-d))+j*t;for(let t=0;t<z;++t){C+=x[i+t]*N[c+t]}}}}f[m*r+b*e+g*o+y*l+t]=C}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Eo=Ur(r.Cos,t=>Math.cos(t)),Ao={kernelName:r.Cos,backendName:"cpu",kernelFunc:Eo},_o=Ur(r.Cosh,t=>Math.cosh(t)),Ro={kernelName:r.Cosh,backendName:"cpu",kernelFunc:_o};const Do={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s,boxes:o,boxInd:i}=e,{cropSize:c,method:u,extrapolationValue:l}=a,[d,p,h,f]=s.shape,m=o.shape[0],[b,g]=c,y=Object(r.buffer)([m,b,g,f],"float32"),x=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,k=r.util.computeStrides(s.shape),O=r.util.computeStrides(y.shape);for(let r=0;r<m;r++){const t=4*r,e=x[t],n=x[t+1],a=x[t+2],s=x[t+3],o=v[r];if(o>=d)continue;const i=b>1?(a-e)*(p-1)/(b-1):0,c=g>1?(s-n)*(h-1)/(g-1):0;for(let d=0;d<b;d++){const t=b>1?e*(p-1)+d*i:.5*(e+a)*(p-1);if(t<0||t>p-1)for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+r*O[0];y.values[n]=l}else if("bilinear"===u){const e=Math.floor(t),a=Math.ceil(t),i=t-e;for(let t=0;t<g;t++){const u=g>1?n*(h-1)+t*c:.5*(n+s)*(h-1);if(u<0||u>h-1){for(let e=0;e<f;e++){const n=e+t*O[2]+d*O[1]+r*O[0];y.values[n]=l}continue}const p=Math.floor(u),m=Math.ceil(u),b=u-p;for(let n=0;n<f;n++){let s=n+p*k[2]+e*k[1]+o*k[0];const c=w[s];s=n+m*k[2]+e*k[1]+o*k[0];const u=w[s];s=n+p*k[2]+a*k[1]+o*k[0];const l=w[s];s=n+m*k[2]+a*k[1]+o*k[0];const h=c+(u-c)*b,f=l+(w[s]-l)*b;s=n+t*O[2]+d*O[1]+r*O[0],y.values[s]=h+(f-h)*i}}}else for(let e=0;e<g;++e){const a=g>1?n*(h-1)+e*c:.5*(n+s)*(h-1);if(a<0||a>h-1){for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+r*O[0];y.values[n]=l}continue}const i=Math.round(a),u=Math.round(t);for(let t=0;t<f;t++){const n=t+i*k[2]+u*k[1]+o*k[0],a=t+e*O[2]+d*O[1]+r*O[0];y.values[a]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Fo={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,exclusive:i,reverse:c}=a;Br(s,"cumsum");const u=r.backend_util.getAxesPermutation([o],s.shape.length);let l=s;null!=u&&(l=_s({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=r.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const p=Object(r.upcastType)(l.dtype,"int32"),h=r.util.makeZerosTypedArray(r.util.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],b=c?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let r=0;r<f.length;r+=m)for(let t=0;t<m;t++){const e=b(r,t);if(0===t)h[e]=i?0:f[e];else{const n=b(r,t-1);h[e]=i?f[n]+h[n]:f[e]+h[n]}}const g=n.makeTensorInfo(l.shape,p,h);if(null!=u){const t=_s({inputs:{x:g},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const Mo={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const t=io(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,t)}if(2===r.shape.length){const t=co(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const zo={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockSize:o,dataFormat:i}=a;r.util.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i)),r.util.assert(o>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(o));const c=s.shape[0],u=s.shape[1],l=s.shape[2],d=s.shape[3],p=u*o,h=l*o,f=d/(o*o),m=n.data.get(s.dataId).values,b=new Float32Array(c*p*h*f);let g=0;for(let r=0;r<c;++r)for(let t=0;t<p;++t){const e=Math.floor(t/o),n=t%o;for(let t=0;t<h;++t){const a=Math.floor(t/o),s=(n*o+t%o)*f;for(let t=0;t<f;++t){const n=t+s+d*(a+l*(e+u*r));b[g++]=m[n]}}}return n.makeTensorInfo([c,p,h,f],s.dtype,b)}};function Lo(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=a;Br([s,o],"depthwiseConv2DNative");const d=r.util.computeStrides(s.shape),p=r.util.computeStrides(o.shape);let h=u;null==h&&(h=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,h),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(h,"'"));const f=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,h,c,l,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,O=new r.TensorBuffer(f.outShape,s.dtype),N=n.data.get(s.dataId).values,I=n.data.get(o.dataId).values,S=O.values;for(let r=0;r<f.batchSize;++r){const t=r*d[0],e=r*O.strides[0];for(let n=0;n<f.outHeight;++n){const a=e+n*O.strides[1],r=n*f.strideHeight-v;for(let e=0;e<m;++e){const n=r+e*g;if(n<0||n>=f.inHeight)continue;const s=e*p[0],o=t+n*d[1];for(let t=0;t<f.outWidth;++t){const e=a+t*O.strides[2],n=t*f.strideWidth-w;for(let t=0;t<b;++t){const a=n+t*y;if(a<0||a>=f.inWidth)continue;const r=s+t*p[1],i=o+a*f.inChannels;let c=e,u=r;for(let t=0;t<f.inChannels;++t){const e=N[i+t];for(let t=0;t<k;++t)S[c+t]+=e*I[u+t];c+=k,u+=k}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const Po={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Lo};const Bo={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=a;Br([s,o],"depthwiseConv2dNativeBackpropFilter");const p=r.backend_util.computeConv2DInfo(s.shape,d,i,c,u,l,!0),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:b}=p,g=new r.TensorBuffer(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,v=p.outChannels/p.inChannels,w=n.data.get(s.dataId).values,k=new r.TensorBuffer(s.shape,s.dtype,w),O=n.data.get(o.dataId).values,N=new r.TensorBuffer(o.shape,o.dtype,O);for(let r=0;r<m;++r){const t=Math.max(0,Math.ceil((x-r)/h)),e=Math.min(p.outHeight,(p.inHeight+x-r)/h);for(let n=0;n<b;++n){const a=Math.max(0,Math.ceil((y-n)/f)),s=Math.min(p.outWidth,(p.inWidth+y-n)/f);for(let o=0;o<p.outChannels;++o){const i=Math.trunc(o/v),c=o%v;let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<e;++c){const t=r+c*h-x;for(let e=a;e<s;++e){const a=n+e*f-y;u+=k.get(l,t,a,i)*N.get(l,c,e,o)}}g.set(u,r,n,i,c)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Wo={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=a;Br([s,o],"depthwiseConv2DNativeBackpropInput");const p=r.util.computeStrides(s.shape),h=r.util.computeStrides(o.shape),f=r.backend_util.computeConv2DInfo(d,o.shape,i,c,u,l,!0),m=new r.TensorBuffer(f.inShape,"float32"),b=m.values,[g,y,x]=m.strides,v=n.data.get(s.dataId).values,[w,k,O]=p,N=n.data.get(o.dataId).values,[I,S,T]=h,{batchSize:j,filterHeight:C,filterWidth:E,inChannels:A,inHeight:_,inWidth:R,outChannels:D,outHeight:F,outWidth:M,strideHeight:z,strideWidth:L}=f,P=C-1-f.padInfo.top,B=E-1-f.padInfo.left,W=D/A;for(let r=0;r<j;++r)for(let t=0;t<A;++t)for(let e=0;e<_;++e){const n=e-P,a=Math.max(0,Math.ceil(n/z)),s=Math.min(F,(C+n)/z);for(let o=0;o<R;++o){const i=o-B,c=Math.max(0,Math.ceil(i/L)),u=Math.min(M,(E+i)/L);let l=0;for(let e=a;e<s;++e){const a=e*z-n;for(let n=c;n<u;++n){const s=w*r+k*e+O*n,o=I*(C-1-a)+S*(E-1-(n*L-i))+T*t;for(let e=0;e<W;++e){l+=v[s+(t*W+e)]*N[o+e]}}}b[g*r+y*e+x*o+t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Vo={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=r.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=Object(r.buffer)([s,s],a.dtype),c=i.values;for(let r=0;r<o.length;r++)c[r*s+r]=o[r];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Uo={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,filter:s}=t,{strides:o,pad:i,dilations:c}=n,u=e,l=u.data.get(a.dataId).values,d=a.shape.length,p=u.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:O,filterWidth:N,dilationHeight:I,dilationWidth:S,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,i,"NHWC",c),j=r.util.sizeFromShape(T),C=T.length,E=r.util.getArrayFromDType(a.dtype,j);for(let A=0;A<f;++A)for(let t=0;t<y;++t){const e=t*w-v.top;for(let n=0;n<x;++n){const o=n*k-v.left;for(let i=0;i<g;++i){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<O;++t){const n=e+t*I;if(n>=0&&n<m)for(let e=0;e<N;++e){const u=o+e*S;if(u>=0&&u<b){const o=r.util.locToIndex([A,n,u,i],d,r.util.computeStrides(a.shape)),f=r.util.locToIndex([t,e,i],h,r.util.computeStrides(s.shape)),m=l[o]+p[f];m>c&&(c=m)}}}E[r.util.locToIndex([A,t,n,i],C,r.util.computeStrides(T))]=c}}}return{dataId:u.write(r.util.toTypedArray(E,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Go={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,filter:s,dy:o}=t,{strides:i,pad:c,dilations:u}=n,l=e,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:O,dilationHeight:N,dilationWidth:I,outShape:S}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,c,"NHWC",u);r.util.assert(o.rank===S.length,()=>"Error in ".concat(r.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank));const T=r.util.toNestedArray(S,l.data.get(o.dataId).values),j=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<h;++r)for(let t=0;t<g;++t){const e=t*v-x.top;for(let n=0;n<y;++n){const a=n*w-x.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<f)for(let e=0;e<O;++e){const u=a+e*I;if(u>=0&&u<m){const a=d[r][n][u][s]+p[t][e][s];a>o&&(o=a,i=t,c=e)}}}j[i][c][s]+=T[r][t][n][s]}}}return{dataId:l.write(r.util.toTypedArray(j,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ho={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,filter:s,dy:o}=t,{strides:i,pad:c,dilations:u}=n,l=e,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),p=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:O,dilationHeight:N,dilationWidth:I,outShape:S}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,c,"NHWC",u);r.util.assert(o.rank===S.length,()=>"Error in ".concat(r.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank));const T=r.util.toNestedArray(S,l.data.get(o.dataId).values),j=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<h;++r)for(let t=0;t<g;++t){const e=t*v-x.top;for(let n=0;n<y;++n){const a=n*w-x.left;for(let s=0;s<b;++s){let o=Number.MIN_SAFE_INTEGER,i=e<0?0:e,c=a<0?0:a;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<f)for(let e=0;e<O;++e){const u=a+e*I;if(u>=0&&u<m){const a=d[r][n][u][s]+p[t][e][s];a>o&&(o=a,i=n,c=u)}}}j[r][i][c][s]+=T[r][t][n][s]}}}return{dataId:l.write(r.util.toTypedArray(j,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};const qo={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:a,y:s}=e;Br([a,s],"eluGrad");const o=new Float32Array(r.util.sizeFromShape(s.shape)),i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values;for(let r=0;r<i.length;++r){const t=i[r];o[r]=t>=1?c[r]:c[r]*(t+1)}return n.makeTensorInfo(s.shape,"float32",o)}},Ko=Zr((t,e)=>t===e?1:0),Xo=hs(r.Equal,Ko,null,"bool"),Yo={kernelName:r.Equal,backendName:"cpu",kernelFunc:Xo},Qo=r.backend_util.ERF_P,Zo=r.backend_util.ERF_A1,Jo=r.backend_util.ERF_A2,$o=r.backend_util.ERF_A3,ti=r.backend_util.ERF_A4,ei=r.backend_util.ERF_A5,ni=Ur(r.Erf,t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+Qo*n);return e*(1-((((ei*a+ti)*a+$o)*a+Jo)*a+Zo)*a*Math.exp(-n*n))}),ai={kernelName:r.Erf,backendName:"cpu",kernelFunc:ni},ri=lo(t=>Math.exp(t)),si=Gr(r.Exp,ri),oi={kernelName:r.Exp,backendName:"cpu",kernelFunc:si};function ii(t){const{inputs:e,backend:n,attrs:a}=t,{input:s}=e,{dim:o}=a,i=s.shape.length,c=s.shape.slice();let u=o;return o<0&&(r.util.assert(-(i+1)<=o,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+o+1),c.splice(u,0,1),xs({inputs:{x:s},backend:n,attrs:{shape:c}})}const ci={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:ii},ui=lo(t=>Math.expm1(t)),li=Gr(r.Expm1,ui),di={kernelName:r.Expm1,backendName:"cpu",kernelFunc:li},pi=Zr((t,e)=>t*e),hi=fs((t,e,n,a)=>({real:t*n-e*a,imag:t*a+e*n})),fi=hs(r.Multiply,pi,hi),mi={kernelName:r.Multiply,backendName:"cpu",kernelFunc:fi},bi=Zr((t,e)=>t/e),gi=hs(r.RealDiv,bi),yi={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:gi},xi=Zr((t,e)=>t-e),vi=fs((t,e,n,a)=>({real:t-n,imag:e-a})),wi=hs(r.Sub,xi,vi),ki={kernelName:r.Sub,backendName:"cpu",kernelFunc:wi};function Oi(t,e,n){const a=t.shape,s=a[0],o=a[1],i=n.data.get(t.dataId),c=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,o],d=r.util.sizeFromShape(l),p=r.util.getTypedArrayFromDType("float32",d),h=r.util.getTypedArrayFromDType("float32",d);for(let g=0;g<s;g++){const t=ro({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,o]}}),a=ro({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,o]}}),s=os({inputs:{real:t,imag:a},backend:n}),{real:i,imag:l}=Ni(s,e,n),d=r.backend_util.mergeRealAndImagArrays(i,l);for(let e=0;e<o;e++){const t=r.backend_util.getComplexWithIndex(d,e);p[g*o+e]=t.real,h[g*o+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),b=os({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function Ni(t,e,n){const a=r.util.sizeFromShape(t.shape),s=n.data.get(t.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((c=a)&c-1)){const s=function t(e,n,a,s,o){if(1===a)return{real:e,imag:n};const i=r.backend_util.mergeRealAndImagArrays(e,n),c=a/2,u=r.backend_util.complexWithEvenIndex(i),l=u.real,d=u.imag,p=[l.length],h=o.makeTensorInfo(p,"float32",l),f=o.makeTensorInfo(p,"float32",d),m=os({inputs:{real:h,imag:f},backend:o}),b=r.backend_util.complexWithOddIndex(i),g=b.real,y=b.imag,x=[g.length],v=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",y),k=os({inputs:{real:v,imag:w},backend:o}),O=t(l,d,c,s,o),N=O.real,I=O.imag,S=[N.length],T=o.makeTensorInfo(S,"float32",N),j=o.makeTensorInfo(S,"float32",I),C=os({inputs:{real:T,imag:j},backend:o}),E=t(g,y,c,s,o),A=E.real,_=E.imag,R=[A.length],D=o.makeTensorInfo(R,"float32",A),F=o.makeTensorInfo(R,"float32",_),M=os({inputs:{real:D,imag:F},backend:o}),z=r.backend_util.exponents(a,s),L=[z.real.length],P=o.makeTensorInfo(L,"float32",z.real),B=o.makeTensorInfo(L,"float32",z.imag),W=os({inputs:{real:P,imag:B},backend:o}),V=fi({inputs:{a:W,b:M},backend:o}),U=gs({inputs:{a:C,b:V},backend:o}),G=wi({inputs:{a:C,b:V},backend:o}),H=us({inputs:{input:U},backend:o}),q=us({inputs:{input:G},backend:o}),K=xo({inputs:{input:U},backend:o}),X=xo({inputs:{input:G},backend:o}),Y=wo({inputs:[H,q],backend:o,attrs:{axis:0}}),Q=wo({inputs:[K,X],backend:o,attrs:{axis:0}}),Z=o.data.get(Y.dataId).values,J=o.data.get(Q.dataId).values;return o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(k),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(C),o.disposeIntermediateTensorInfo(D),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(W),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(Q),{real:Z,imag:J}}(o,i,a,e,n),c=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(c,"float32",s.real),e=n.makeTensorInfo(c,"float32",s.imag),o=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),i=Kr({inputs:{x:o},backend:n}),u=yi.kernelFunc({inputs:{a:t,b:o},backend:n}),l=yi.kernelFunc({inputs:{a:e,b:i},backend:n}),d=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:d,imag:p}}return s}{const t=function(t,e,n){const a=new Float32Array(2*e);for(let s=0;s<e;s++){let o=0,i=0;for(let a=0;a<e;a++){const c=r.backend_util.exponent(s*a,e,n),u=r.backend_util.getComplexWithIndex(t,a);o+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(o/=e,i/=e),r.backend_util.assignToTypedArray(a,o,i,s)}return a}(r.backend_util.mergeRealAndImagArrays(o,i),a,e);return r.backend_util.splitRealAndImagArrays(t)}var c}const Ii={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=xs({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),c=Oi(i,!1,n),u=xs({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}};function Si(t){const{backend:e,attrs:n}=t,{shape:a,value:s,dtype:o}=n,i=o||r.util.inferDtype(s),c=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return function(t,e,n){t.fill(e)}(c,s),e.makeTensorInfo(a,i,c)}const Ti={kernelName:r.Fill,backendName:"cpu",kernelFunc:Si};const ji={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:a}=t,s=n,o=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[i,c,u,l]=a.shape,d=s.data.get(a.dataId).values;for(let r=0;r<i;r++){const t=r*u*c*l;for(let e=0;e<c;e++){const n=e*(u*l);for(let a=0;a<u;a++){const r=a*l;for(let s=0;s<l;s++){const c=[i,e,a,s][2],p=Math.round(u-c),h=t+n+r+s;let f=d[h];if(p>=0&&p<u){f=d[t+n+p*l+s]}o[h]=f}}}}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Ci=lo(t=>Math.floor(t)),Ei=Gr(r.Floor,Ci),Ai={kernelName:r.Floor,backendName:"cpu",kernelFunc:Ei},_i=Zr((t,e)=>Math.floor(t/e)),Ri=hs(r.FloorDiv,_i,null,"int32"),Di={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:Ri};const Fi={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=Oo({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const t=m;m=gs({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(h){const t=m;m=ss(n,m,h,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Mi={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=Lo({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){const t=m;m=gs({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(h){const t=m;m=ss(n,m,h,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const zi={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:s}=e,o=r.util.sizeFromShape(a.shape),i=s.shape,c=i[i.length-1],[u,l,d,p]=r.backend_util.prepareAndValidate(a,s);if(0===l)return n.makeTensorInfo(u,a.dtype,[]);const h=Object(r.buffer)([l,d],a.dtype),f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values;for(let r=0;r<l;r++){const t=[];let e=0;for(let n=0;n<c;n++){const a=f[r*c+n];e+=a*p[n],t.push(a)}if(e<0||e>=o/d)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(a.shape));for(let n=0;n<d;n++)h.values[r*d+n]=m[e*d+n]}return n.makeTensorInfo(u,h.dtype,h.values)}};function Li(t,e,n){const a=Object(r.buffer)(n,t.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=e.locToIndex([s,o]);n[2]=e.values[i];const c=t.locToIndex(n);a.values[r]=t.values[c]}return a}const Pi={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,indices:o}=e,{axis:i,batchDims:c}=a;Br([s,o],"gatherV2");let u=c;null==c&&(u=0);const l=r.util.sizeFromShape(o.shape),d=r.util.parseAxisParam(i,s.shape)[0],p=r.backend_util.segment_util.collectGatherOpShapeInfo(s,o,d,u),h=xs({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=xs({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}}),m=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize],b=n.bufferSync(f),g=Li(n.bufferSync(h),b,m);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,g.dtype,g.values)}},Bi=Zr((t,e)=>t>e?1:0),Wi=hs(r.Greater,Bi,null,"bool"),Vi={kernelName:r.Greater,backendName:"cpu",kernelFunc:Wi},Ui=Zr((t,e)=>t>=e?1:0),Gi=hs(r.GreaterEqual,Ui,null,"bool"),Hi={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:Gi};const qi={kernelName:r.IFFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=xs({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),c=Oi(i,!0,n),u=xs({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}},Ki=Ur(r.IsFinite,t=>Number.isFinite(t)?1:0,"bool"),Xi={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Ki},Yi=Ur(r.IsInf,t=>Math.abs(t)===1/0?1:0,"bool"),Qi={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Yi},Zi=Ur(r.IsNan,t=>Number.isNaN(t)?1:0,"bool"),Ji={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Zi},$i=Zr((t,e)=>t<e?1:0),tc=hs(r.Less,$i,null,"bool"),ec={kernelName:r.Less,backendName:"cpu",kernelFunc:tc},nc=Zr((t,e)=>t<=e?1:0),ac=hs(r.LessEqual,nc,null,"bool"),rc={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:ac};function sc(t,e,n){const a=(e-t)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=t;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}const oc={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,num:s}=n,o=sc(a,r,s);return e.makeTensorInfo([o.length],"float32",o)}},ic=lo(t=>Math.log(t)),cc=Gr(r.Log,ic),uc={kernelName:r.Log,backendName:"cpu",kernelFunc:cc},lc=Ur(r.Log1p,t=>Math.log1p(t)),dc={kernelName:r.Log1p,backendName:"cpu",kernelFunc:lc},pc=Zr((t,e)=>t&&e),hc=hs(r.LogicalAnd,pc,null,"bool"),fc={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:hc},mc=Ur(r.LogicalNot,t=>t?0:1,"bool"),bc={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:mc},gc=Zr((t,e)=>t||e),yc=hs(r.LogicalOr,gc,null,"bool"),xc={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:yc};const vc={kernelName:r.LRN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{depthRadius:o,bias:i,alpha:c,beta:u}=a;Br(s,"LRN");const l=s.shape[3],d=l-1,p=n.data.get(s.dataId).values,h=r.util.sizeFromShape(s.shape),f=new Float32Array(h);function m(t){const e=t%l;let n=t-e+Math.max(0,e-o);const a=t-e+Math.min(e+o,d);let r=0;for(;n<=a;n++){const t=p[n];r+=t*t}return r}for(let r=0;r<h;r++){const t=m(r),e=p[r]*Math.pow(i+c*t,-u);f[r]=e}return n.makeTensorInfo(s.shape,s.dtype,f)}};const wc={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,y:o,dy:i}=e,{depthRadius:c,bias:u,alpha:l,beta:d}=a;Br(i,"LRNGrad");const p=r.util.sizeFromShape(i.shape),h=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,b=n.data.get(o.dataId).values,g=new Float32Array(p),y=p;for(let r=0;r<y;r++){const t=r%h,e=r-t+Math.max(0,t-c),n=r-t+Math.min(h,t+c+1);let a=0;for(let r=e;r<n;r++)a+=Math.pow(m[r],2);a=l*a+u;for(let s=e;s<n;s++){let t=-2*l*d*m[s]*b[r]/a;r===s&&(t+=Math.pow(a,-d)),t*=f[r],g[s]+=t}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function kc(t,e,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*e;let a=t[n];for(let r=0;r<e;++r){const e=t[n+r];e>a&&(a=e)}s[r]=a}return s}function Oc(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reductionIndices:o,keepDims:i}=a,c=n;let u=s.shape;const l=u.length,d=r.util.parseAxisParam(o,u);let p=d;const h=r.backend_util.getAxesPermutation(p,l);let f=c.data.get(s.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=u[h[e]];f=As(f,u,s.dtype,h,t),p=r.backend_util.getInnerMostAxes(p.length,l),u=t}Br(s,"max"),r.backend_util.assertAxesAreInnerMostDims("max",p,l);const[m,b]=r.backend_util.computeOutAndReduceShapes(u,p),g=kc(f,r.util.sizeFromShape(b),m,s.dtype),y=c.write(g,m,s.dtype);let x=m;if(i){x=r.backend_util.expandShapeToKeepDim(m,d)}return{dataId:y,shape:x,dtype:s.dtype}}const Nc={kernelName:r.Max,backendName:"cpu",kernelFunc:Oc},Ic=Zr((t,e)=>Math.max(t,e)),Sc=hs(r.Maximum,Ic),Tc={kernelName:r.Maximum,backendName:"cpu",kernelFunc:Sc};const jc={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;Br(s,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))d=Kr({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=r.util.computeStrides(s.shape),a=Ys(t,s.shape,s.dtype,e,l,"max");d=n.makeTensorInfo(l.outShape,s.dtype,a.values)}return d}};const Cc={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l,dilations:d}=a;Br(s,"maxPool3d");let p=d;null==p&&(p=[1,1,1]);const h=r.backend_util.computePool3DInfo(s.shape,o,i,p,c,u,l),f=Zs(n.data.get(s.dataId).values,s.shape,s.dtype,r.util.computeStrides(s.shape),h,"max");return n.makeTensorInfo(f.shape,"float32",f.values)}};const Ec={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,{filterSize:i,strides:c,pad:u,dilations:l,dimRoundingMode:d}=a;Br([s,o],"maxPool3DGrad");const p=r.backend_util.computePool3DInfo(o.shape,i,c,l,u,d),h=function(t,e){const n=Object(r.buffer)(e.outShape,"int32"),a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let r=0;r<e.batchSize;++r)for(let b=0;b<e.inChannels;++b)for(let g=0;g<e.outDepth;++g){const y=g*a-h;let x=y;for(;x<0;)x+=i;const v=Math.min(e.inDepth,l+y);for(let a=0;a<e.outHeight;++a){const l=a*s-f;let h=l;for(;h<0;)h+=c;const w=Math.min(e.inHeight,d+l);for(let s=0;s<e.outWidth;++s){const f=s*o-m;let k=f;for(;k<0;)k+=u;const O=Math.min(e.inWidth,p+f);let N=Number.NEGATIVE_INFINITY,I=-1;for(let e=x;e<v;e+=i){const n=e-y;for(let a=h;a<w;a+=c){const s=a-l;for(let o=k;o<O;o+=u){const i=o-f,c=t.get(r,e,a,o,b);c>=N&&(N=c,I=n*d*p+s*d+i)}}}n.set(I,r,g,a,s,b)}}}return n}(n.bufferSync(o),p),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,w=p.effectiveFilterHeight,k=p.effectiveFilterWidth,O=v-1-p.padInfo.front,N=k-1-p.padInfo.left,I=w-1-p.padInfo.top,S=Object(r.buffer)(o.shape,"float32"),T=n.bufferSync(s);for(let r=0;r<p.batchSize;++r)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inDepth;++e)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=e-O,o=n-I,i=a-N;let c=0;for(let e=0;e<v;e+=g){const n=(s+e)/f;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let a=0;a<w;a+=y){const s=(o+a)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let o=0;o<k;o+=x){const u=(i+o)/b;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;const l=v*w*k-1-h.get(r,n,s,u,t)===e*w*k+a*k+o?1:0;if(0===l)continue;c+=T.get(r,n,s,u,t)*l}}}S.set(c,r,e,n,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Ac={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o,output:i}=e,c=o;Br([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:p}=a,h=r.backend_util.computePool2DInfo(c.shape,u,l,1,d,p),f=n.data.get(c.dataId).values,m=Object(r.buffer)(h.outShape,c.dtype,Qs(f,c.shape,c.dtype,h).values),b=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=w-1-h.padInfo.left,O=v-1-h.padInfo.top,N=Object(r.buffer)(c.shape,"float32"),I=n.data.get(s.dataId).values,S=Object(r.buffer)(s.shape,"float32",I);for(let r=0;r<h.batchSize;++r)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inHeight;++e)for(let n=0;n<h.inWidth;++n){const a=e-O,s=n-k;let o=0;for(let e=0;e<v;e+=y){const n=(a+e)/b;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=x){const i=(s+a)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const c=v*w-1-m.get(r,n,i,t)===e*w+a?1:0;if(0===c)continue;o+=S.get(r,n,i,t)*c}}N.set(o,r,e,n,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const _c={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:a}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=e,u=n;Br(a,"MaxPoolWithArgmax");const l=u.data.get(a.dataId).values,d=r.backend_util.computePool2DInfo(a.shape,s,o,[1,1],i),[p,h]=function(t,e,n,a,s){const o=Ys(t,0,n,r.util.computeStrides(e),s,"max"),i=Qs(t,e,n,s,!0,a);return[o.values,i.values]}(l,a.shape,a.dtype,c,d),f=u.write(p,d.outShape,a.dtype),m=u.write(h,d.outShape,a.dtype);return[{dataId:f,shape:d.outShape,dtype:a.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};function Rc(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a;let c;Br(s,"sum"),c="bool"===s.dtype?ds({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Kr({inputs:{x:s},backend:n});const u=c.shape.length,l=r.util.parseAxisParam(o,c.shape),d=r.backend_util.getAxesPermutation(l,u);let p=l,h=c;null!=d&&(h=_s({inputs:{x:c},backend:n,attrs:{perm:d}}),p=r.backend_util.getInnerMostAxes(p.length,u)),r.backend_util.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[f,m]=r.backend_util.computeOutAndReduceShapes(h.shape,p);let b=cs(n,f,r.backend_util.upcastType(h.dtype,"int32"));const g=r.util.sizeFromShape(m),y=n.data.get(b.dataId).values,x=n.data.get(h.dataId).values;for(let r=0;r<y.length;++r){const t=r*g;let e=0;for(let n=0;n<g;++n)e+=x[t+n];y[r]=e}if(i){const t=b;b=xs({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(b.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(h),b}const Dc={kernelName:r.Sum,backendName:"cpu",kernelFunc:Rc};const Fc={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a,c=r.util.parseAxisParam(o,s.shape),u=r.backend_util.computeOutAndReduceShapes(s.shape,c)[1],l=r.util.sizeFromShape(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=ds({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=gi({inputs:{a:h,b:p},backend:n});d.push(f);const m=Rc({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}};const Mc={kernelName:r.Min,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a;Br(s,"min");const c=r.util.parseAxisParam(o,s.shape);let u=c;const l=r.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=l&&(d=_s({inputs:{x:s},backend:n,attrs:{perm:l}}),u=r.backend_util.getInnerMostAxes(u.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",u,d.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),d.dtype),b=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const t=r*f;let e=b[t];for(let n=0;n<f;++n){const a=b[t+n];a<e&&(e=a)}m[r]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(p,d.dtype,m);if(i){const t=xs({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}},zc=Zr((t,e)=>Math.min(t,e)),Lc=hs(r.Minimum,zc),Pc={kernelName:r.Minimum,backendName:"cpu",kernelFunc:Lc};const Bc={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{paddings:o,mode:i}=a;Br(s,"mirrorPad");const c=o.map((t,e)=>t[0]+s.shape[e]+t[1]),u=o.map(t=>t[0]),l=o.map((t,e)=>t[0]+s.shape[e]),d="reflect"===i?0:1,p=n.data.get(s.dataId).values,h=s.shape.length,f=r.util.computeStrides(s.shape),m=r.util.sizeFromShape(c),b=c.length,g=r.util.computeStrides(c),y=r.util.getTypedArrayFromDType(s.dtype,m);for(let x=0;x<m;x++){let t=r.util.indexToLoc(x,b,g);for(let n=0;n<b;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-d:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+d);t=t.map((t,e)=>t-u[e]);const e=r.util.locToIndex(t,h,f);y[x]=p[e]}return{dataId:n.write(y,c,s.dtype),shape:c,dtype:s.dtype}}},Wc=Zr((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),Vc=hs(r.Mod,Wc),Uc={kernelName:r.Mod,backendName:"cpu",kernelFunc:Vc};function Gc(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{dim:o}=a,i=s.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const u=r.util.parseAxisParam([c],s.shape),l=Oc({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,u),p=xs({inputs:{x:l},backend:n,attrs:{shape:d}}),h=wi({inputs:{a:s,b:p},backend:n}),f=si({inputs:{x:h},backend:n}),m=Rc({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),b=xs({inputs:{x:m},backend:n,attrs:{shape:d}}),g=gi({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Hc={kernelName:r.Softmax,backendName:"cpu",kernelFunc:Gc};const qc={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{numSamples:o,seed:i,normalized:c}=a;Br(s,"multinomial");const u=c?s:Gc({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],d=u.shape[1],p=n.data.get(u.dataId).values,h=[l,o],f=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),"int32");for(let r=0;r<l;++r){const t=r*d,e=new Float32Array(d-1);e[0]=p[t];for(let r=1;r<e.length;++r)e[r]=e[r-1]+p[t+r];const n=Rr.alea(i.toString()),a=r*o;for(let r=0;r<o;++r){const t=n();f[a+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[a+r]=n;break}}}return c||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",f)}};function Kc(t,e,n){const a=r.util.createScalarValue(-1,n);return pi([],e,a,t,n)}const Xc={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;Br(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=Kc(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},Yc=r.kernel_impls.nonMaxSuppressionV3Impl;const Qc={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;Br(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=Yc(u,l,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Zc=r.kernel_impls.nonMaxSuppressionV4Impl;const Jc={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=a;Br(r,"NonMaxSuppressionPadded");const l=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=Zc(l,d,o,i,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},$c=r.kernel_impls.nonMaxSuppressionV5Impl;const tu={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=a;Br(r,"NonMaxSuppressionWithScore");const l=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,p=o,h=i,f=c,m=u,{selectedIndices:b,selectedScores:g}=$c(l,d,p,h,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},eu=Zr((t,e)=>t!==e?1:0),nu=hs(r.NotEqual,eu,null,"bool"),au={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:nu};const ru={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:s}=e,{depth:o,onValue:i,offValue:c}=a;Br(s,"oneHot");const u=r.util.sizeFromShape(s.shape),l=new Float32Array(u*o);l.fill(c);const d=n.data.get(s.dataId).values;for(let r=0;r<u;++r)d[r]>=0&&d[r]<o&&(l[r*o+d[r]]=i);return n.makeTensorInfo([...s.shape,o],"int32",l)}};function su(t){const{inputs:e,backend:n}=t,{x:a}=e;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const t=us({inputs:{input:a},backend:n}),e=su({inputs:{x:t},backend:n}),r=xo({inputs:{input:a},backend:n}),s=su({inputs:{x:r},backend:n}),o=os({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return Si({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const ou={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:su};const iu={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=us({inputs:{input:r},backend:a}),n=t({inputs:{x:e},backend:a}),s=xo({inputs:{input:r},backend:a}),o=su({inputs:{x:s},backend:a}),i=os({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return Si({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function cu(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a;if(1===e.length)return ii({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,i=e[0].dtype;e.forEach(t=>{r.util.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=wo({inputs:e.map(t=>{const e=ii({inputs:{input:t},backend:n,attrs:{dim:s}});return c.push(e),e}),backend:n,attrs:{axis:s}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}const uu={kernelName:r.Pack,backendName:"cpu",kernelFunc:cu};const lu={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{paddings:o,constantValue:i}=a;Br(s,"pad");const c=o.map((t,e)=>t[0]+s.shape[e]+t[1]),u=o.map(t=>t[0]),l=n.data.get(s.dataId).values,d=r.util.sizeFromShape(s.shape),p=s.shape.length,h=r.util.computeStrides(s.shape),f=r.util.sizeFromShape(c),m=c.length,b=r.util.computeStrides(c),g=r.util.getTypedArrayFromDType(s.dtype,f);0!==i&&g.fill(i);for(let y=0;y<d;y++){const t=r.util.indexToLoc(y,p,h).map((t,e)=>t+u[e]);g[r.util.locToIndex(t,m,b)]=l[y]}return{dataId:n.write(g,c,s.dtype),shape:c,dtype:s.dtype}}},du=Zr((t,e)=>Math.pow(t,e)),pu=hs(r.Pow,du),hu={kernelName:r.Pow,backendName:"cpu",kernelFunc:pu};function fu(t,e,n,a){const[s,o]=r.backend_util.computeOutAndReduceShapes(t,a),i=Object(r.upcastType)(e,"int32"),c=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),i),u=r.util.sizeFromShape(o);for(let r=0;r<c.length;++r){const t=r*u;let e=1;for(let a=0;a<u;++a)e*=n[t+a];c[r]=e}return{outVals:c,outShape:s,outDtype:i}}const mu={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a;Br(s,"prod");const c=s.shape.length,u=r.util.parseAxisParam(o,s.shape),l=r.backend_util.getAxesPermutation(u,c);let d=u,p=s;const h=[];null!=l&&(p=_s({inputs:{x:s},backend:n,attrs:{perm:l}}),h.push(p),d=r.backend_util.getInnerMostAxes(d.length,c));const f=n.data.get(p.dataId).values,{outVals:m,outShape:b,outDtype:g}=fu(p.shape,p.dtype,f,d);let y=b;return i&&(y=r.backend_util.expandShapeToKeepDim(b,u)),h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,g,m)}};function bu(t,e,n,a){if(t===e||t<e&&n<0||e<t&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((e-t)/n)),o=r.util.makeZerosTypedArray(s,a);e<t&&1===n&&(n=-1),o[0]=t;for(let r=1;r<o.length;r++)o[r]=o[r-1]+n;return o}const gu={kernelName:r.Range,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,dtype:s,step:o}=n,i=bu(a,r,o,s);return e.makeTensorInfo([i.length],s,i)}},yu=Ur(r.Reciprocal,t=>1/t),xu={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:yu};const vu={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a;Br(s,"resizeBilinear");const u=r.util.computeStrides(s.shape),[l,d]=c,[p,h,f,m]=s.shape,b=n.data.get(s.dataId).values,g=new Float32Array(r.util.sizeFromShape([p,l,d,m])),y=[o&&l>1?h-1:h,o&&d>1?f-1:f],x=[o&&l>1?l-1:l,o&&d>1?d-1:d];let v=0;const w=y[0]/x[0],k=y[1]/x[1];for(let r=0;r<p;r++)for(let t=0;t<l;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),a=e-n,s=Math.min(h-1,Math.ceil(e)),o=r*u[0]+n*u[1],c=r*u[0]+s*u[1];for(let t=0;t<d;t++){let e;e=i?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(f-1,Math.ceil(e)),l=o+n*u[2],d=c+n*u[2],p=o+s*u[2],h=c+s*u[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[d+t],s=e+(b[p+t]-e)*r,o=s+(n+(b[h+t]-n)*r-s)*a;g[v++]=o}}}return n.makeTensorInfo([p,l,d,m],"float32",g)}};const wu={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:o}=e,{alignCorners:i}=a;Br([o,s],"resizeBilinearGrad");const c=r.util.computeStrides(s.shape),[u,l,d,p]=s.shape,[,h,f]=o.shape,m=new Float32Array(u*l*d*p),b=[i&&h>1?l-1:l,i&&f>1?d-1:d],g=[i&&h>1?h-1:h,i&&f>1?f-1:f],y=b[0]/g[0],x=b[1]/g[1],v=n.data.get(o.dataId).values;let w=0;for(let r=0;r<u;r++){const t=r*c[0];for(let e=0;e<h;e++){const n=e*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=t+a*c[1],o=t+r*c[1],i=n-a,u=1-i;for(let t=0;t<f;t++){const e=t*x,n=Math.floor(e),a=Math.min(Math.ceil(e),d-1),r=e-n,l=1-r,h=s+n*c[2],f=s+a*c[2],b=o+n*c[2],g=o+a*c[2],y=u*l,k=u*r,O=i*l,N=i*r;for(let t=0;t<p;t++){const e=v[w++];m[h+t]+=e*y,m[f+t]+=e*k,m[b+t]+=e*O,m[g+t]+=e*N}}}}return n.makeTensorInfo([u,d,l,p],"float32",m)}};const ku={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a;Br(s,"resizeNearestNeighbor");const u=r.util.computeStrides(s.shape),[l,d]=c,[p,h,f,m]=s.shape,b=n.data.get(s.dataId).values,g=new Float32Array(p*l*d*m),y=[o&&l>1?h-1:h,o&&d>1?f-1:f],x=[o&&l>1?l-1:l,o&&d>1?d-1:d],v=y[0]/x[0],w=y[1]/x[1];let k=0;for(let r=0;r<p;r++){const t=r*u[0];for(let e=0;e<l;e++){const n=i?v*(e+.5):v*e;let a=Math.min(h-1,o?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=t+a*u[1];for(let t=0;t<d;t++){const e=i?w*(t+.5):w*t;let n=Math.min(f-1,o?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const a=r+n*u[2];for(let t=0;t<m;t++){const e=b[a+t];g[k++]=e}}}}return n.makeTensorInfo([p,l,d,m],s.dtype,g)}};const Ou={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:o}=e,{alignCorners:i}=a;Br([o,s],"resizeNearestNeighborGrad");const c=r.util.computeStrides(s.shape),u=r.util.computeStrides(o.shape),[l,d,p,h]=s.shape,[,f,m]=o.shape,b=new Float32Array(l*d*p*h),g=n.data.get(o.dataId).values,y=[i&&f>1?d-1:d,i&&m>1?p-1:p],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=y[0]/x[0],w=y[1]/x[1],k=1/v,O=1/w,N=2*Math.ceil(k)+2,I=2*Math.ceil(O)+2;for(let r=0;r<l;r++){const t=r*c[0];for(let e=0;e<d;e++){const n=t+e*c[1],a=Math.floor(e*k),r=Math.floor(a-N/2);for(let s=0;s<p;s++){const a=n+s*c[2],o=Math.floor(s*O),l=Math.floor(o-I/2);for(let n=0;n<h;n++){let o=0;for(let a=0;a<N;a++){const c=a+r;if(c<0||c>=f)continue;const h=t+c*u[1],b=c*v;if(e===Math.min(d-1,i?Math.round(b):Math.floor(b)))for(let t=0;t<I;t++){const e=t+l;if(e<0||e>=m)continue;const a=h+e*u[2],r=e*w;s===Math.min(p-1,i?Math.round(r):Math.floor(r))&&(o+=g[a+n])}}b[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,b)}};const Nu={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{dims:o}=a;Br(s,"reverse");const i=s.shape.length,c=r.util.parseAxisParam(o,s.shape);if(0===i)return Kr({inputs:{x:s},backend:n});const u=new r.TensorBuffer(s.shape,s.dtype),l=n.bufferSync(s);for(let r=0;r<u.size;r++){const t=u.indexToLoc(r),e=t.slice();c.forEach(t=>e[t]=s.shape[t]-1-e[t]),u.set(l.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Iu={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:a}=t,{radians:s,fillValue:o,center:i}=e,c=n,u=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,p,h]=a.shape,[f,m]=r.backend_util.getImageCenter(i,d,p),b=Math.sin(s),g=Math.cos(s),y=c.data.get(a.dataId).values;for(let r=0;r<l;r++){const t=r*p*d*h;for(let e=0;e<d;e++){const n=e*(p*h);for(let a=0;a<p;a++){const r=a*h;for(let s=0;s<h;s++){const i=[l,e,a,s],c=i[2],x=i[1];let v=(c-f)*g-(x-m)*b,w=(c-f)*b+(x-m)*g;v=Math.round(v+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),v>=0&&v<p&&w>=0&&w<d){k=y[t+w*(p*h)+v*h+s]}u[t+n+r+s]=k}}}}return{dataId:c.write(u,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Su=Ur(r.Round,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),Tu={kernelName:r.Round,backendName:"cpu",kernelFunc:Su},ju=lo(t=>1/Math.sqrt(t)),Cu=Gr(r.Rsqrt,ju),Eu={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:Cu};function Au(t,e,n,a,s,o,i,c,u,l){const d=[a/s,s],p=t.values,h=e.values;if(0===a)return Object(r.buffer)(n,e.dtype);const f=Object(r.buffer)(d,e.dtype);f.values.fill(u);for(let r=0;r<o;r++){const t=[];let o=0;for(let e=0;e<i;e++){const n=p[r*i+e];t.push(n),o+=n*c[e]}if(o<0||o>=a/s)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<s;n++)l?f.values[o*s+n]+=h[r*s+n]:f.values[o*s+n]=0===e.rank?h[0]:h[r*s+n]}return f}const _u={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:s,updates:o}=e,{shape:i}=a,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,i),h=Au(n.bufferSync(s),n.bufferSync(o),i,p,l,u,c,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};const Ru={kernelName:r.Select,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:s,e:o}=e;Br([a,s,o],"select");const i=a.shape.length,c=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,d=Object(r.upcastType)(s.dtype,o.dtype),p=r.util.makeZerosTypedArray(r.util.sizeFromShape(s.shape),d);let h=0;const f=0===i||i>1||1===s.shape.length?1:r.util.sizeFromShape(s.shape.slice(1));for(let r=0;r<c.length;r++)for(let t=0;t<f;t++)1===c[r]?p[h++]=u[r]:p[h++]=l[r];return n.makeTensorInfo(s.shape,d,p)}},Du=r.backend_util.SELU_SCALEALPHA,Fu=r.backend_util.SELU_SCALE,Mu=Ur(r.Selu,t=>t>=0?Fu*t:Du*(Math.exp(t)-1)),zu={kernelName:r.Selu,backendName:"cpu",kernelFunc:Mu},Lu=Ur(r.Sigmoid,t=>1/(1+Math.exp(-t))),Pu={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:Lu},Bu=Ur(r.Sign,t=>t<0?-1:t>0?1:0),Wu={kernelName:r.Sign,backendName:"cpu",kernelFunc:Bu},Vu=Ur(r.Sin,t=>Math.sin(t)),Uu={kernelName:r.Sin,backendName:"cpu",kernelFunc:Vu},Gu=Ur(r.Sinh,t=>Math.sinh(t)),Hu={kernelName:r.Sinh,backendName:"cpu",kernelFunc:Gu},qu=Math.log(1.1920928955078125e-7)+2,Ku=Ur(r.Softplus,t=>{const e=t>-qu,n=t<qu,a=Math.exp(t);let r;return r=n?a:e?t:Math.log(1+a),r}),Xu={kernelName:r.Softplus,backendName:"cpu",kernelFunc:Ku};const Yu={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,paddings:i}=a;Br([s],"spaceToBatchND");const c=r.util.sizeFromShape(o),u=[[0,0]];u.push(...i);for(let r=1+o.length;r<s.shape.length;++r)u.push([0,0]);const l=lu.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=r.backend_util.getReshaped(l.shape,o,c,!1),p=r.backend_util.getPermuted(d.length,o.length,!1),h=r.backend_util.getReshapedPermuted(l.shape,o,c,!1),f=xs({inputs:{x:l},backend:n,attrs:{shape:d}}),m=_s({inputs:{x:f},backend:n,attrs:{perm:p}}),b=xs({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};const Qu={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:s,sparseValues:o,defaultValue:i}=e,{outputShape:c}=a,{sliceRank:u,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(o,s,c),f=Au(n.bufferSync(s),n.bufferSync(o),c,h,d,l,u,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(c,f.dtype,f.values)}};const Zu={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{numOrSizeSplits:o,axis:i}=a,c=r.util.parseAxisParam(i,s.shape)[0],u=r.backend_util.prepareSplitSize(s,o,c),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return u.map(t=>{const e=[...d];e[c]=t;const a=ro({inputs:{x:s},backend:n,attrs:{begin:l,size:e}});return l[c]+=t,a})}},Ju=Ur(r.Sqrt,t=>Math.sqrt(t)),$u={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:Ju},tl={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,a=e;Br(n,"square");const r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let o=0;o<r.length;++o){const t=r[o];s[o]=t*t}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},el=Zr((t,e)=>{const n=t-e;return n*n}),nl=hs(r.SquaredDifference,el),al={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:nl},rl=Ur(r.Step,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),sl={kernelName:r.Step,backendName:"cpu",kernelFunc:rl};function ol(t,e,n,a){const s=Object(r.buffer)(t,e.dtype);for(let r=0;r<s.size;r++){const t=s.indexToLoc(r),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+a[e];s.set(e.get(...o),...t)}return s}const il={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a;Br(s,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=r.slice_util.sliceInfo(s.shape,o,i,c,u,l,d,p,h),v=xs({inputs:{x:s},backend:n,attrs:{shape:y}});let w;if(f){const t=ro({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=xs({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some(t=>0===t))w=n.makeTensorInfo(x,s.dtype,[]);else{const t=ol(x,n.bufferSync(v),b,m);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=xs({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},cl=Ur(r.Tan,t=>Math.tan(t)),ul={kernelName:r.Tan,backendName:"cpu",kernelFunc:cl},ll=Ur(r.Tanh,t=>Math.tanh(t)),dl={kernelName:r.Tanh,backendName:"cpu",kernelFunc:ll};function pl(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const a=Object(r.buffer)(n,t.dtype);for(let r=0;r<a.values.length;++r){const e=a.indexToLoc(r),n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=e[a]%t.shape[a];const s=t.locToIndex(n);a.values[r]=t.values[s]}return a}const hl={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:s}=a;Br(r,"tile");const o=pl(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function fl(t,e,n,a,s){const o=e[e.length-1],[i,c]=[t.length/o,o],u=r.util.getTypedArrayFromDType(n,i*a),l=r.util.getTypedArrayFromDType("int32",i*a);for(let r=0;r<i;r++){const e=r*c,n=t.subarray(e,e+c),s=[];for(let t=0;t<n.length;t++)s.push({value:n[t],index:t});s.sort((t,e)=>e.value-t.value);const o=r*a,i=u.subarray(o,o+a),d=l.subarray(o,o+a);for(let t=0;t<a;t++)i[t]=s[t].value,d[t]=s[t].index}const d=e.slice();return d[d.length-1]=a,[Object(r.buffer)(d,n,u),Object(r.buffer)(d,"int32",l)]}const ml={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:s,sorted:o}=a;Br(r,"topk");const i=n.data.get(r.dataId).values,[c,u]=fl(i,r.shape,r.dtype,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};function bl(t,e,n,a){const s=r.util.parseAxisParam(e,n)[0],o=[1,n[0],1];for(let r=0;r<s;r++)o[0]*=n[r];o[1]=n[s];for(let r=s+1;r<n.length;r++)o[2]*=n[r];const i={},c=new Int32Array(n[s]),u=new r.TensorBuffer(o,a,t),l=[],d=1===o[0]&&1===o[2];for(let r=0;r<n[s];r++){let e;if(d)e=t[r].toString();else{const t=[];for(let e=0;e<o[0];e++)for(let n=0;n<o[2];n++)t.push(u.get(e,r,n));e=t.join(",")}if(void 0!==i[e])c[r]=i[e];else{const t=Object.keys(i).length;i[e]=t,c[r]=t,l.push(r)}}const p=o.slice();p[1]=Object.keys(i).length;const h=new r.TensorBuffer(p,a);l.forEach((t,e)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)h.set(u.get(n,t,a),n,e,a)});const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:c}}const gl={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:r}=n,{x:s}=e;Br(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:u}=bl(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([u.length],"int32",u)]}};const yl={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:r}=e;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let u=0;for(let h=0;h<o;h++)h!==s&&(c[u++]=r.shape[h]);const l=new Array(o).fill(0),d=r.shape.slice();d[s]=1;const p=new Array(i);for(let h=0;h<p.length;h++){l[s]=h;const t=ro({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});p[h]=xs({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return p}};const xl={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,segmentIds:o}=e,{numSegments:i}=a;Br(s,"unsortedSegmentSum");const c=[],u=[],l=s.shape.length-o.shape.length;let d=o;for(let r=0;r<l;++r){const t=ii({inputs:{input:d},backend:n,attrs:{dim:r+1}});d=t,u.push(t)}for(let h=0;h<i;++h){const t=r.util.createScalarValue(h,"int32"),e=n.makeTensorInfo([],"int32",t),a=Xo({inputs:{a:e,b:d},backend:n}),o=ds({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),i=fi({inputs:{a:o,b:s},backend:n}),l=Rc({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(l),u.push(e),u.push(a),u.push(o),u.push(i),u.push(l)}const p=cu({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}},vl=[Os,Is,Ts,Cs,ys,Es,Ds,Fs,Ms,zs,Ps,Ws,Us,qs,Xs,Js,$s,to,eo,ks,no,oo,uo,ps,fo,bo,is,go,ko,Io,So,No,jo,Co,To,Ao,Ro,Do,Fo,Mo,zo,Po,Bo,Wo,Vo,Uo,Ho,Go,yi,qr,qo,Yo,ai,oi,ci,di,Ii,Ti,ji,Ai,Di,Fi,Mi,zi,Pi,Vi,Hi,Xr,qi,vo,Xi,Qi,Ji,Qr,ec,rc,oc,uc,dc,fc,bc,xc,vc,wc,Tc,jc,Cc,Ec,Ac,_c,Nc,Fc,Mc,Pc,Bc,Uc,qc,mi,Xc,Qc,Jc,tu,au,ru,iu,uu,lu,hu,ts,mu,gu,ls,xu,ns,rs,vs,vu,wu,ku,Ou,Nu,Iu,Tu,Eu,_u,Ru,zu,Pu,Wu,Uu,Hu,so,Hc,Xu,Yu,Qu,Zu,$u,tl,al,sl,il,ki,Dc,ul,dl,hl,ml,Rs,gl,yl,xl,ou];for(const My of vl)Object(r.registerKernel)(My);const wl={},kl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ol(t){if(!(t in wl)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete wl[t]},!1),1===t)return e.getContext("webgl",kl)||e.getContext("experimental-webgl",kl);return e.getContext("webgl2",kl)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;wl[t]=e}const e=wl[t];return e.isContextLost()?(delete wl[t],Ol(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),wl[t])}var Nl,Il,Sl;function Tl(t,e){return[e,t]}function jl(t){const e=r.util.sizeFromShape(t),n=Math.ceil(e/4);return r.util.sizeToSquarishShape(n)}function Cl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function El(t,e){const n=t;let a,s,o,i,c,u,l,d,p,h;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(a=t.RGBA,s=t.RGBA,o=t.RGBA,i=n.RGBA,c=t.RGBA,l=4,d=4,p=null!=e?e.HALF_FLOAT_OES:null,h=t.FLOAT),u=t.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function Al(t,e){const n=e();return Object(r.env)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Nl||(Nl={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Il||(Il={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Sl||(Sl={}));function _l(t){return!!(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Rl(t,e){return Vl(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Dl(t,e){const n=Vl(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Al(t,()=>t.shaderSource(n,e)),Al(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Fl.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const a=+n[1],s=t.split("\n"),o=s.length.toString().length+2,i=s.map((t,e)=>r.util.rightPad((e+1).toString(),o)+t);let c=0;for(let r=0;r<i.length;r++)c=Math.max(i[r].length,c);const u=i.slice(0,a-1),l=i.slice(a-1,a),d=i.slice(a);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(r.util.rightPad(l[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Fl=/ERROR: [0-9]+:([0-9]+):/g;function Ml(t,e){if(Al(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function zl(t,e,n,a,r,s,o){const i=t.getAttribLocation(e,n);return-1!==i&&(Al(t,()=>t.bindBuffer(t.ARRAY_BUFFER,a)),Al(t,()=>t.vertexAttribPointer(i,r,t.FLOAT,!1,s,o)),Al(t,()=>t.enableVertexAttribArray(i)),!0)}function Ll(t,e,n,a){Al(t,()=>function(t,e,n){Ul(t,n),Al(t,()=>t.activeTexture(t.TEXTURE0+n)),Al(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,a)),Al(t,()=>t.uniform1i(n,a))}function Pl(t,e,n){Al(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Al(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Bl(t,e){Al(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Al(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Wl(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function Vl(t,e,n){const a=Al(t,()=>e());if(null==a)throw new Error(n);return a}function Ul(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=e+t.TEXTURE0;if(a<t.TEXTURE0||a>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function Gl(t,e=2){return r.util.sizeFromShape(t.slice(0,t.length-e))}function Hl(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function ql(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Gl(t),...Hl(t)]),e}function Kl(t){return t%2===0}function Xl(t,e){if(t=t.slice(-2),e=e.slice(-2),r.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],a=e.slice(-1)[0];if(n===a)return!0;if(Kl(n)&&Kl(a)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Kl(t[0])&&Kl(e[0])}let Yl,Ql;function Zl(t,e){return null!=t.getExtension(e)}function Jl(t){try{if(null!=Ol(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function $l(t){if(0===t)return!1;const e=Ol(t);if(1!==t){if(Zl(e,"EXT_color_buffer_float"))return td(e);const t="EXT_color_buffer_half_float";if(Zl(e,t)){const n=e.getExtension(t);return function(t,e){const n=El(t,e),a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(a),t.deleteFramebuffer(r),s}(e,n)}return!1}if(!Zl(e,"OES_texture_float"))return!1;if(!Zl(e,"WEBGL_color_buffer_float"))return!1;return td(e)}function td(t){const e=El(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),r}function ed(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&r.util.assert("complex64"!==t.dtype,()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend.")})}const nd=Object(r.env)();function ad(){let t,e,n,a,s,o,i,c,u,l;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",a="in",s="texture",o="outputColor",i="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",a="varying",s="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:a,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:u,defineRound:l}}function rd(t,e,n="index"){const a=r.util.computeStrides(e);return a.map((e,r)=>{const s="int ".concat(t[r]," = ").concat(n," / ").concat(e),o=r===a.length-1?"int ".concat(t[r+1]," = ").concat(n," - ").concat(t[r]," * ").concat(e):"index -= ".concat(t[r]," * ").concat(e);return"".concat(s,"; ").concat(o,";")}).join("")}function sd(t){const e=r.util.computeStrides(t).map(t=>t.toString());return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}nd.registerFlag("HAS_WEBGL",()=>nd.getNumber("WEBGL_VERSION")>0),nd.registerFlag("WEBGL_VERSION",()=>Jl(2)?2:Jl(1)?1:0),nd.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),nd.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===nd.get("WEBGL_VERSION")),nd.registerFlag("WEBGL_CPU_FORWARD",()=>!0),nd.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),nd.registerFlag("WEBGL_PACK",()=>nd.getBool("HAS_WEBGL")),nd.registerFlag("WEBGL_PACK_NORMALIZATION",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_PACK_CLIP",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),nd.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_PACK_REDUCE",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_LAZILY_UNPACK",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_CONV_IM2COL",()=>nd.getBool("WEBGL_PACK")),nd.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==Yl){const e=Ol(t);Yl=e.getParameter(e.MAX_TEXTURE_SIZE)}return Yl}(nd.getNumber("WEBGL_VERSION"))),nd.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==Ql){const e=Ol(t);Ql=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ql)}(nd.getNumber("WEBGL_VERSION"))),nd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=nd.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Ol(t);return e=Zl(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Zl(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),nd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>nd.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile()),nd.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=Ol(t);if(1===t){if(!Zl(e,"OES_texture_float"))return!1}else if(!Zl(e,"EXT_color_buffer_float"))return!1;return td(e)}(nd.getNumber("WEBGL_VERSION"))),nd.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!nd.getBool("WEBGL_FORCE_F16_TEXTURES")&&nd.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),nd.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>$l(nd.getNumber("WEBGL_VERSION"))),nd.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=nd.getNumber("WEBGL_VERSION"))&&null!=Ol(t).fenceSync;var t}),nd.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>nd.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),nd.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))});const od="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class id{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Nl.DENSE;const e=jl(t),n=ad();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(rd(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class cd{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Nl.DENSE;const e=jl(t),n=ad();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(rd(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class ud{constructor(t){this.variableNames=["A"],this.outTexUsage=Il.DOWNLOAD;const e=ad();this.outputShape=t,this.userCode="\n      ".concat(od,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class ld{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Il.DOWNLOAD;const e=ad();this.outputShape=t,this.userCode="\n      ".concat(od,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class dd{constructor(t,e,n=!1){this.variableNames=["A"];const a=ad(),[r,s]=e;this.outputShape=t;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode="\n      ".concat(sd(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ").concat(s,";\n        int c = imod(flatIndex, ").concat(s,");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(").concat(s,".0, ").concat(r,".0);\n        vec4 values = ").concat(a.texture2D,"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ").concat(a.output," = vec4(").concat(o,", 0., 0., 0.);\n      }\n    ")}}class pd{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const a=ad(),[r,s]=e;this.outputShape=t;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let e=0;e<=1;e++){const n=2*c+e;o+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(t[2],") {\n            localCoords[2] += ").concat(e,";\n            if(localCoords[1] + ").concat(c," < ").concat(t[1],") {\n              localCoords[1] += ").concat(c,";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ").concat(s,";\n              c = imod(flatIndex, ").concat(s,");\n              uv = (vec2(c, r) + halfCR) / vec2(").concat(s,".0, ").concat(r,".0);\n              values = ").concat(a.texture2D,"(A, uv);\n\n              if(offset == 0) {\n                result[").concat(n,"] = values[0];\n              } else if(offset == 1) {\n                result[").concat(n,"] = values[1];\n              } else if(offset == 2) {\n                result[").concat(n,"] = values[2];\n              } else {\n                result[").concat(n,"] = values[3];\n              }\n            }\n          }\n        ")}this.userCode="\n      ".concat(sd(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ").concat(o,"\n\n        ").concat(a.output," = ").concat(i,";\n      }\n    ")}}function hd(t){const e=ad();return function(t,e){const n=Vl(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Al(t,()=>t.shaderSource(n,e)),Al(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function fd(t){return function(t,e){const n=Vl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Al(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Al(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function md(t){return function(t,e){const n=Vl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Al(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Al(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function bd(t,e,n,a,s,o){!function(t,e){const n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const a="[".concat(t,"x").concat(e,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(e,n);const i=function(t){return Vl(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),c=t.TEXTURE_2D;return Al(t,()=>t.bindTexture(c,i)),Al(t,()=>t.texParameteri(c,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Al(t,()=>t.texParameteri(c,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Al(t,()=>t.texParameteri(c,t.TEXTURE_MIN_FILTER,t.NEAREST)),Al(t,()=>t.texParameteri(c,t.TEXTURE_MAG_FILTER,t.NEAREST)),Al(t,()=>t.texImage2D(c,0,a,e,n,0,s,o,null)),Al(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function gd(t){return t.internalFormatFloat}function yd(t){return t.internalFormatHalfFloat}function xd(t){return t.downloadTextureFormat}function vd(t){return t.internalFormatPackedFloat}function wd(t){return t.internalFormatPackedHalfFloat}function kd(t,e,n,a,r,s,o,i){const c=t,u=new Float32Array(function(t,e){const[n,a]=Cl(t,e);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}class Od{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(r.env)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){wl[t]=e}(e,t)):this.gl=Ol(e);let n="WEBGL_color_buffer_float";if(1===Object(r.env)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Rl(this.gl,t),Zl(this.gl,e))this.textureHalfFloatExtension=Rl(this.gl,e);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Zl(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=Rl(this.gl,"EXT_color_buffer_half_float");else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Zl(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Zl(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=fd(this.gl),this.indexBuffer=md(this.gl),this.framebuffer=function(t){return Vl(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=El(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Al(t,()=>t.finish()),Al(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Al(t,()=>t.deleteFramebuffer(this.framebuffer)),Al(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Al(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Al(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=Tl(e,n);return bd(t,r,s,gd(a),a.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=Tl(e,n);return bd(t,r,s,yd(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=Tl(e,n);return bd(t,r,s,xd(a),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Al(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?Al(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):Al(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Al(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,a){this.throwIfDisposed(),function(t,e,n,a,r,s){let o,i,c;Al(t,()=>t.bindTexture(t.TEXTURE_2D,e)),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=t.UNSIGNED_BYTE,c=t.RGBA):(o=new Float32Array(n*a*4),i=t.FLOAT,c=s.internalFormatPackedFloat),o.set(r),Al(t,()=>t.texImage2D(t.TEXTURE_2D,0,c,n,a,0,t.RGBA,i,o)),Al(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=Cl(e,n);return bd(t,r,s,wd(a),t.RGBA,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=Cl(e,n);return bd(t,r,s,vd(a),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Bl(this.gl,this.framebuffer),this.outputTexture=null),Al(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,a){const[r,s]=Tl(e,n),o=new Uint8Array(e*n*4);return Al(t,()=>t.readPixels(0,0,r,s,a.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,a,r,s){return kd(this.gl,t,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const a=t,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const a=function(t,e,n,a){const r=t.createBuffer();Al(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const s=16*e*n;return Al(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),Al(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Al(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=a.clientWaitSync(r,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=r}else Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const a=new Float32Array(e*n*4);return Al(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,a)),a}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=Dl(e,t),a=hd(e),r=function(t){return Vl(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return Al(e,()=>e.attachShader(r,a)),Al(e,()=>e.attachShader(r,n)),function(t,e){if(Al(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&Ml(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return Al(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),zl(t,e,"clipSpacePos",n,3,20,0)&&zl(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Al(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Ml(this.gl,this.program),Al(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Vl(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Al(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Ll(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[a,r]=Cl(e,n);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,n,a){this.setOutputMatrixWriteRegionDriver(n,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Ml(this.gl,this.program),Wl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Al(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Al(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Rl(this.gl,2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await r.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||r.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Pl(this.gl,t,this.framebuffer),this.debug&&Wl(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Pl(this.gl,this.outputTexture,this.framebuffer),this.debug&&Wl(this.gl)):Bl(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const a=this.gl;Pl(a,t,this.framebuffer),this.debug&&Wl(a),this.outputTexture=t,Al(a,()=>a.viewport(0,0,e,n)),Al(a,()=>a.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,a){this.throwIfDisposed(),Al(this.gl,()=>this.gl.scissor(t,e,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Nd}=r.backend_util;function Id(t,e,n,a){const s=[];t.forEach(t=>{const e=r.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(s.push("uniform sampler2D ".concat(t.name,";")),s.push("uniform int offset".concat(t.name,";")))});const o=s.join("\n"),i=t.map(t=>function(t,e,n=!1){let a="";a+=n?Td(t):Sd(t);const s=t.shapeInfo.logicalShape,o=e.logicalShape;s.length<=o.length&&(a+=n?function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,c=Nd(t.shapeInfo.logicalShape,e.logicalShape),u=Dd(i),l=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map(t=>"coords.".concat(p[t+l]," = 0;")).join("\n");let h="";h=i<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords.".concat(p[e+l])).join(", ");let f="return outputValue;";const m=1===r.util.sizeFromShape(t.shapeInfo.logicalShape),b=1===r.util.sizeFromShape(e.logicalShape);if(1!==o||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const t=o-2,e=o-1;c.indexOf(t)>-1&&c.indexOf(e)>-1?f="return vec4(outputValue.x);":c.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(s,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(a,"(").concat(h,");\n      ").concat(f,"\n    }\n  ")}(t,e):function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=e.texShape,i=t.shapeInfo.texShape,c=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&c===u&&null==t.shapeInfo.flatOffset&&r.util.arraysEqual(i,o))return"\n      float ".concat(s,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=Dd(u),d=Nd(t.shapeInfo.logicalShape,e.logicalShape),p=u-c;let h;const f=["x","y","z","w","u","v"];h=0===c?"":u<2&&d.length>=1?"coords = 0;":d.map(t=>"coords.".concat(f[t+p]," = 0;")).join("\n");let m="";m=u<2&&c>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords.".concat(f[e+p])).join(", ");return"\n    float ".concat(s,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(h,"\n      return get").concat(a,"(").concat(m,");\n    }\n  ")}(t,e));return a}(t,e,a)).join("\n"),c=e.texShape,u=ad(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(u);let d,p,h=function(t){return"".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(jd,"\n    ").concat(Cd,"\n    ").concat(Ed,"\n  ")}(u);e.isPacked?(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(n[1],".0);\n      }\n    ");if(1===n[1])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(n[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      return 2 * (resTexRC.x * ").concat(n[1]," + resTexRC.y);\n    }\n  ")}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(r.util.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(n[0],", ").concat(n[1],"));\n      }\n    ");const a=Math.ceil(t[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[2]/2),r=a*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[t.length-1]/2),r=a*Math.ceil(t[t.length-2]/2);let s=r,o="",i="b, r, c";for(let c=2;c<t.length-1;c++)s*=t[t.length-c-1],o="\n      int b".concat(c," = index / ").concat(s,";\n      index -= b").concat(c," * ").concat(s,";\n    ")+o,i="b".concat(c,", ")+i;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      ").concat(o,"\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec").concat(t.length,"(").concat(i,");\n    }\n  ")}(t,e)}}(e.logicalShape,c),p=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(u)):(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){if(1===e[0])return"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e);case 2:return function(t,e){if(r.util.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=rd(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e);case 4:return function(t,e){const n=rd(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e);case 5:return function(t,e){const n=rd(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=rd(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,c),p=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(u)),a&&(h+=Ad);return[h,l,p,o,d,i,n].join("\n")}function Sd(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(n,"() {return ").concat(e,";}");const[a,r]=t.shapeInfo.texShape;if(1===a&&1===r)return"\n      float ".concat(n,"() {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const[s,o]=t.shapeInfo.texShape,i=_d(e);return"\n    float ".concat(n,"() {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", ").concat(i,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int index) {\n        ").concat(Rd(t),"\n      }\n    ");const a=t.shapeInfo.texShape,r=a[0],s=a[1];if(1===s&&1===r)return"\n      float ".concat(n,"(int index) {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const o=_d(e);if(1===s)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(o,") + 0.5) / ").concat(r,".0);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");if(1===r)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(o,") + 0.5) / ").concat(s,".0, 0.5);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");return"\n    float ".concat(n,"(int index) {\n      vec2 uv = uvFromFlat(").concat(r,", ").concat(s,", index + ").concat(o,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&r.util.arraysEqual(e,s)){const t=s[0],e=s[1];return"\n    float ".concat(a,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(e,".0, ").concat(t,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=r.util.squeezeShape(e),c=o;if(c.length<e.length){const e=Fd(t,c),n=["row","col"];return"\n      ".concat(Sd(e),"\n      float ").concat(a,"(int row, int col) {\n        return ").concat(a,"(").concat(Md(n,i),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(e[1],", 1)));\n        ").concat(Rd(t),"\n      }\n    ");const u=s[0],l=s[1],d=_d(n);if(1===l)return"\n    float ".concat(a,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");if(1===u)return"\n    float ".concat(a,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n  float ".concat(a,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(e[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(l,", index);\n    return sampleTexture(").concat(n,", uv);\n  }\n")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],o=e[2],{newShape:i,keptDims:c}=r.util.squeezeShape(e),u=i;if(u.length<e.length){const e=Fd(t,u),n=["row","col","depth"];return"\n        ".concat(Sd(e),"\n        float ").concat(a,"(int row, int col, int depth) {\n          return ").concat(a,"(").concat(Md(n,c),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(Rd(t),"\n      }\n    ");const l=t.shapeInfo.texShape,d=l[0],p=l[1],h=t.shapeInfo.flatOffset;if(p===s&&null==h)return"\n        float ".concat(a,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(d,".0);\n          return sampleTexture(").concat(n,", uv);\n        }\n      ");if(p===o&&null==h)return"\n    float ".concat(a,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(e[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(d,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const f=_d(n);return"\n      float ".concat(a,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n        return sampleTexture(").concat(n,", uv);\n      }\n  ")}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],o=e[2]*s,i=e[1]*o,{newShape:c,keptDims:u}=r.util.squeezeShape(e);if(c.length<e.length){const e=Fd(t,c),n=["row","col","depth","depth2"];return"\n      ".concat(Sd(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2) {\n        return ").concat(a,"(").concat(Md(n,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(Rd(t),"\n      }\n    ");const l=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(h===s&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(e[1]*e[2],", ").concat(e[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=_d(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(h,", index + ").concat(f,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],o=e[3]*s,i=e[2]*o,c=e[1]*i,{newShape:u,keptDims:l}=r.util.squeezeShape(e);if(u.length<e.length){const e=Fd(t,u),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Sd(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(Md(n,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(o,", ").concat(s,")) +\n          depth3;\n        ").concat(Rd(t),"\n      }\n    ");const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,h=p[0],f=p[1];if(f===c&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===s&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=_d(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(o," +\n          depth2 * ").concat(s," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=r.util.squeezeShape(e);if(s.length<e.length){const e=Fd(t,s),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Sd(e),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(Md(n,o),");\n      }\n    ")}const i=e[5],c=e[4]*i,u=e[3]*c,l=e[2]*u,d=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(l,", ").concat(u,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Rd(t),"\n      }\n    ");const p=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(u,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==p)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const b=_d(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(l," + depth * ").concat(u," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(b,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(e.length,"-D input sampling")+" is not yet supported")}}function Td(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=ad();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=t.shapeInfo.texShape,r=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=ad();return"\n    vec4 ".concat(n,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(r[0],", ").concat(r[1],", index);\n      return ").concat(s.texture2D,"(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,o=s[0],i=s[1],c=ad();if(null!=s&&r.util.arraysEqual(e,s))return"\n      vec4 ".concat(a,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(n,", uv);\n      }\n    ");const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(e[1]/2);return"\n    vec4 ".concat(a,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=e.slice(1),r=[1,2],s=Fd(t,n),o=["b","row","col"];return"\n        ".concat(Td(s),"\n        vec4 ").concat(a,"(int b, int row, int col) {\n          return ").concat(a,"(").concat(Md(o,r),");\n        }\n      ")}const o=s[0],i=s[1],c=Math.ceil(e[2]/2),u=c*Math.ceil(e[1]/2),l=ad();return"\n    vec4 ".concat(a,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(o,", ").concat(i,", ").concat(u,", ").concat(c,", b, row, col);\n      return ").concat(l.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=o[0],c=o[1],u=Math.ceil(e[n-1]/2);let l=u*Math.ceil(e[n-2]/2),d="int b, int row, int col",p="b * ".concat(l," + (row / 2) * ").concat(u," + (col / 2)");for(let f=2;f<n-1;f++)d="int b".concat(f,", ")+d,l*=e[n-f-1],p="b".concat(f," * ").concat(l," + ")+p;const h=ad();return"\n    vec4 ".concat(r,"(").concat(d,") {\n      int index = ").concat(p,";\n      int texR = index / ").concat(c,";\n      int texC = index - texR * ").concat(c,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(c,", ").concat(i,");\n      return ").concat(h.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t)}}const jd="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Cd="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ed="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ad="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function _d(t){return"offset".concat(t)}function Rd(t){const e=t.name,n=r.util.sizeFromShape(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function Dd(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function Fd(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Md(t,e){return e.map(e=>t[e]).join(", ")}function zd(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach((t,n)=>{const a=t.logicalShape,s=e[n],o=s.shape;if(!r.util.arraysEqual(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(t.isUniform&&s.isUniform)return;const i=t.texShape,c=s.isUniform?null:s.texData.texShape;if(!r.util.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))})}const{addImpl:Ld,bincountImpl:Pd,bincountReduceImpl:Bd,ceilImpl:Wd,concatImpl:Vd,expImpl:Ud,expm1Impl:Gd,floorImpl:Hd,gatherV2Impl:qd,greaterImpl:Kd,lessImpl:Xd,linSpaceImpl:Yd,logImpl:Qd,maxImpl:Zd,maximumImpl:Jd,minimumImpl:$d,multiplyImpl:tp,negImpl:ep,prodImpl:np,rangeImpl:ap,rsqrtImpl:rp,simpleAbsImpl:sp,sliceImpl:op,stridedSliceImpl:ip,subImpl:cp,tileImpl:up,topKImpl:lp,transposeImpl:dp,uniqueImpl:pp}=a;function hp(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>"".concat(t,".").concat(e))}function fp(t,e){return 1===e?[t]:hp(t,e)}class mp{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=fp("rc",e),a=Dd(e),r=function(t,e,n){if(1===t)return"rc > ".concat(e[0]);let a="";for(let r=t-2;r<t;r++)a+="".concat(n[r]," >= ").concat(e[r]),r<t-1&&(a+="||");return a}(e,t,n),s=function(t,e,n,a){if(1===t)return"";const r=a.slice(-2);return"\n    int r = ".concat(r[0],";\n    int c = ").concat(r[1],";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ").concat(e,";\n    bool rEdge = rp1 >= ").concat(n,";\n  ")}(e,t[t.length-1],t[t.length-2],n),o=function(t,e){const n=t.length,a=function(t,e){const n=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let s="".concat(0===a?"r":"rp1",", ").concat(0===r?"c":"cp1");for(let n=2;n<t;n++)s="".concat(e[e.length-1-n],",")+s;n.push(s)}return n}(n,e);if(1===n)return"getA(rc),\n            rc + 1 >= ".concat(t[0]," ? 0. : getA(rc + 1),\n            0, 0");return"getA(".concat(a[0],"),\n          cEdge ? 0. : getA(").concat(a[1],"),\n          rEdge ? 0. : getA(").concat(a[2],"),\n          rEdge || cEdge ? 0. : getA(").concat(a[3],")")}(t,n);this.userCode="\n        void main() {\n          ".concat(a," rc = getOutputCoords();\n\n          if(").concat(r,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(s,"\n\n            setOutput(vec4(").concat(o,"));\n          }\n        }\n      ")}}}class bp{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t){const e=rd(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(e,"\n      return ivec3(r, c, d);\n    }\n  ")}(e),"\n      ").concat(sd(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(t[1],";\n        int cols = ").concat(t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class gp{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const a=xp(e,n),r=vp(t,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=yp(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let o;return a===Sl.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===Sl.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===Sl.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===Sl.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===Sl.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(t,e,n,a){if(null==this.freeTextures)return;const s=xp(n,a),o=vp(e,s,a);o in this.freeTextures||(this.freeTextures[o]=[]);const i=yp(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=Object(r.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[o],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yp(t,e,n,a,r){const s=function(t,e){switch(t){case Sl.PACKED_2X2_FLOAT32:return vd(e);case Sl.PACKED_2X2_FLOAT16:return wd(e);case Sl.UNPACKED_FLOAT32:return gd(e);case Sl.UNPACKED_FLOAT16:return yd(e);case Sl.PACKED_4X1_UNSIGNED_BYTE:return xd(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,a);let o;if(r){const[e,n]=Cl(t[0],t[1]);o=e*n}else{const[e,n]=Tl(t[0],t[1]);o=e*n}return o*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format ".concat(e))}(n,s)}function xp(t,e){if(t===Il.UPLOAD)return Sl.PACKED_2X2_FLOAT32;if(t===Il.RENDER||null==t)return function(t){return Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Sl.PACKED_2X2_FLOAT32:Sl.UNPACKED_FLOAT32:t?Sl.PACKED_2X2_FLOAT16:Sl.UNPACKED_FLOAT16}(e);if(t===Il.DOWNLOAD||t===Il.PIXELS)return Sl.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function vp(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class wp{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const kp="if (isnan(x)) return x;",Op="return abs(x);";const Np="return x;";class Ip{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Sp{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=fp("rc",e),a=Dd(e),r=function(t,e){if(1===t)return"rc";let n="";for(let a=0;a<t;a++)n+=e[a],a<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),o=e<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const Tp=r.kernel_impls.whereImpl,jp={};class Cp extends r.KernelBackend{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(r.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Ol(Object(r.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(r.env)().getNumber("WEBGL_VERSION"))in jp||(jp[e]={}),jp[e]),this.gpgpu=new Od(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new gp(this.gpgpu),this.numMBBeforeWarning=null==Object(r.env)().global.screen?1024:Object(r.env)().global.screen.height*Object(r.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.DataStorage(this,Object(r.engine)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(r.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(r.env)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={};return this.texData.set(a,{shape:e,dtype:n,values:t,usage:Il.UPLOAD,refCount:1,complexParentRefCount:0}),a}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}decComplexRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.complexParentRefCount>0&&e.refCount--}}move(t,e,n,a){if(Object(r.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:a,values:e,usage:Il.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:a,complexTensorInfos:s,slice:o,shape:i,isPacked:c}=e;if(null!=o){let e;e=c?new Ip(i,Np):new wp(i,Np);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===a)return n;const u=null!=this.activeTimers;let l,d;if(u&&(l=r.util.now()),"complex64"===a){const t=this.readSync(s.real.dataId),e=this.readSync(s.imag.dataId);d=r.backend_util.mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=r.util.now()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:a,slice:s,dtype:o,complexTensorInfos:i,isPacked:c}=e;if(null!=s){let e;e=c?new Ip(a,Np):new wp(a,Np);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(r.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,d=null;if("complex64"!==o&&Object(r.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,...jl(a))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];l=r.backend_util.mergeRealAndImagArrays(e,n)}else if(null==d)l=this.getValuesFromTexture(t);else{const t=r.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(t,l),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach(t=>t(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),p}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>r.util.decodeString(t))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!_l(n)){if(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:a}=this.texData.get(t),s=r.util.sizeFromShape(e);if(Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),a=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(a.texture,...jl(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),r}const o=Object(r.env)().getBool("WEBGL_PACK")&&!0===a,i=o?ql(e):e,c=o?new ld(i):new ud(i),u=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),d}async time(t){const e=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=r.util.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),o=r.util.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=r.util.sum(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:o[e],ms:t})).map(t=>"".concat(t.name,": ").concat(t.ms)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.util.now(),endMs:null}}endTimer(t){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=r.util.now(),t)}async getQueryTime(t){if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(t),i=o&&o.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(e,a,r,s)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(r.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(r.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return Object(r.env)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&r.util.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Tp(t.shape,e)}packedUnaryOp(t,e,n){const a=new Ip(t.shape,e);return this.compileAndRun(a,[t],n)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=sp(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Op,t.dtype);const e=new wp(t.shape,Op);return this.compileAndRun(e,[t])}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map(t=>r.util.encodeString(t));a=this.write(s,t,e)}else a=this.write(n,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:a}=this.makeTensorInfo(t,e,n);return Object(r.engine)().makeTensorFromDataId(a,t,e,this)}unpackTensor(t){const e=new Sp(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new mp(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Gl(t.shape),...Hl(t.shape)],a={dtype:t.dtype,shape:n,dataId:t.dataId},r=[Gl(e),...Hl(e)],s=new bp(r,n),o=this.runWebGLProgram(s,[a],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:a,dtype:r}=e,s=ql(a);let o;o=n?new cd(s):new id(s);return{dtype:r,shape:a,dataId:this.runWebGLProgram(o,[{shape:s,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,a,s=!1){const o=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(o.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Nl.DENSE){const e=jl(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===r.util.sizeFromShape(o.shape))return i.values=r.util.getTypedArrayFromDType(o.dtype,0),o;const c=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&r.util.sizeFromShape(e.shape)<=Object(r.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),c.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Xl(n.shape,e.shape)){const t=e,a=e.shape;e.shape=n.shape,e=this.packedReshape(e,a),c.push(e),n=this.texData.get(e.dataId),t.shape=a}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:i,isUniform:!1},d=function(t,e,n){let a="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(n,"_").concat(e)});const r=t.userCode;let s=t.constructor.name;return s+="_"+a+"_"+r,s}(t,u,l),p=this.getAndSaveBinary(d,()=>function(t,e,n,a){const s=e.userCode,o=n.map((t,n)=>{const a={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(a.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:a}}),i=o.map(t=>t.shapeInfo),c={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},u=Id(o,c,s,e.packedInputs),l=t.createProgram(u);let d=null;const p=t.getUniformLocation(l,"NAN",!1);1===Object(r.env)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(l,"INFINITY",!1));const h={};for(let r=0;r<e.variableNames.length;r++){const n=e.variableNames[r],a=!1;h[n]=t.getUniformLocation(l,n,a),h["offset".concat(n)]=t.getUniformLocation(l,"offset".concat(n),a)}return{program:e,source:u,webGLProgram:l,uniformLocations:h,inShapeInfos:i,outShapeInfo:c,infLoc:d,nanLoc:p}}(this.gpgpu,t,u,l)),h=null!=this.activeTimers;let f;if(h&&(f=this.startTimer()),function(t,e,n,a,s){zd(e.inShapeInfos,n),zd([e.outShapeInfo],[a]);const o=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?t.setOutputPackedMatrixTexture(o,i[0],i[1]):t.setOutputMatrixTexture(o,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(r.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,a)=>{const s=e.program.variableNames[a],o=e.uniformLocations[s],i=e.uniformLocations["offset".concat(s)];if(null!=o)if(n.isUniform)if(r.util.sizeFromShape(n.shape)<2)t.gl.uniform1f(o,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(o,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,o,a)}),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,p,u,l,a),c.forEach(t=>this.disposeIntermediateTensorInfo(t)),h&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),t}return o}compileAndRun(t,e,n,a,s=!1){n=n||e[0].dtype;const o=this.runWebGLProgram(t,e,n,a,s);return Object(r.engine)().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(r.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(r.tidy)(()=>{if(!Object(r.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(r.env)().getBool("DEBUG");Object(r.env)().set("DEBUG",!1);const e=this.abs(Object(r.scalar)(1e-8)).dataSync()[0];if(Object(r.env)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:a,values:s,texture:o,usage:i,isPacked:c}=e;if(null!=o)return;const u=null!=this.activeTimers;let l;u&&(l=r.util.now());let d=e.texShape;if(null==d&&(d=function(t,e=!1){let n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?r.util.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=r.util.squeezeShape(t);t=e.newShape}let a=r.util.sizeFromShape(t);if(t.length<=1&&a<=n)return[1,a];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Gl(t);let n=2,s=2;return t.length&&([n,s]=Hl(t)),a=e*(n/2)*(s/2),r.util.sizeToSquarishShape(a).map(t=>2*t)}return r.util.sizeToSquarishShape(a)}(n,c),e.texShape=d),null!=s){const t=ql(n);let o,i=d[1],p=d[0];const h=s instanceof Uint8Array;c?([i,p]=Cl(d[0],d[1]),o=new pd(t,[p,i],h)):o=new dd(t,[p,i],h);const f=this.makeTensorInfo([p,i],a);this.texData.get(f.dataId).usage=h?Il.PIXELS:Il.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,s);const m=!0,b=this.runWebGLProgram(o,[f],a,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,u&&(this.uploadWaitMs+=r.util.now()-l)}else{const t=this.acquireTexture(d,i,a,c);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:a}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,a)),n.values}acquireTexture(t,e,n,a){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*r.util.bytesPerElement(e)}}r.device_util.isBrowser()&&Object(r.registerBackend)("webgl",()=>new Cp,2);class Ep{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}class Ap{constructor(t,e,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(e,n);const s=this.outputShape.length;let o="";if(a)if(0===s||1===r.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=Dd(s);if(o="\n          ".concat(t," coords = getOutputCoords();\n        "),1===s)o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=fp("coords",s);o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[s-2]," + 1) >= ").concat(this.outputShape[s-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[s-1]," + 1) >= ").concat(this.outputShape[s-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function _p(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Rp={kernelName:r.Identity,backendName:"webgl",kernelFunc:_p};function Dp(t){const{inputs:e,backend:n}=t,{real:a,imag:r}=e,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=_p({inputs:{x:a},backend:n});n.texData.get(i.dataId).complexParentRefCount++;const c=_p({inputs:{x:r},backend:n});return n.texData.get(c.dataId).complexParentRefCount++,o.complexTensorInfos={real:i,imag:c},s}const Fp={kernelName:r.Complex,backendName:"webgl",kernelFunc:Dp},Mp="return (a < 0.) ? b * a : a;",zp="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Lp={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{alpha:o}=a,i=n.makeTensorInfo([],"float32",r.util.createScalarValue(o,"float32")),c=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ap(zp,s.shape,i.shape):new Ep(Mp,s.shape,i.shape),u=n.runWebGLProgram(c,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),u}},Pp="return (a < 0.) ? b * a : a;",Bp="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Wp={kernelName:r.Prelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a,alpha:s}=e,o=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ap(Bp,a.shape,s.shape):new Ep(Pp,a.shape,s.shape);return n.runWebGLProgram(o,[a,s],a.dtype)}};function Vp({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:o})=>{const{x:i}=s,c=o,u=a||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=n){const t=c.texData.get(i.dataId),e=n(t.values,u);return c.makeTensorInfo(i.shape,u,e)}let l;return l=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new Ip(i.shape,e):new wp(i.shape,t),c.runWebGLProgram(l,[i],u)}}function Up({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:o}){return({inputs:i,backend:c})=>{const{a:u,b:l}=i,d=c;if(a&&"complex64"===u.dtype){const e=d.texData.get(u.dataId),n=d.texData.get(l.dataId),[a,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,a]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:a.dataId,dtype:a.dtype,shape:l.shape},i=new Ep(t,u.shape,l.shape);return d.runWebGLProgram(i,[s,o],Object(r.upcastType)(n.dtype,a.dtype))}),o=Dp({inputs:{real:a,imag:s},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(s),o}const p=o||Object(r.upcastType)(u.dtype,l.dtype);if(d.shouldExecuteOnCPU([u,l])&&null!=s){const t=d.texData.get(u.dataId),e=d.texData.get(l.dataId),[n,a]=s(u.shape,l.shape,t.values,e.values,p),r=d.makeTensorInfo(a,p);return d.texData.get(r.dataId).values=n,r}let h;return h=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Ap(e,u.shape,l.shape,n):new Ep(t,u.shape,l.shape),d.runWebGLProgram(h,[u,l],p)}}function Gp(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?Bp:Pp;if("leakyrelu"===t)return e?zp:Mp;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class Hp{constructor(t,e,n,a=!1,r=!1,s=!1,o=null,i=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=a?t[1]:t[2],l=Math.ceil(u/2),d=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";t[0]<e[0]?y="int(min(float(rc.x), ".concat(t[0]-1,".))"):e[0]<t[0]&&(x="int(min(float(rc.x), ".concat(e[0]-1,".))")),this.userCode="\n      ".concat(m,"\n\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ").concat(l,"; i++) {\n          int batchA = ").concat(y,";\n          int batchB = ").concat(x,";\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(p,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(h[0]," * ").concat(f[0],");\n          result += (").concat(h[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(g,"\n\n        ").concat(b,"\n\n        setOutput(result);\n      }\n    ")}}const qp="return areal * breal - aimag * bimag;",Kp="return areal * bimag + aimag * breal;";class Xp{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const Yp="return a * b;";function Qp(t){const{inputs:e,backend:n}=t,{a:a,b:s}=e,o=r.backend_util.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){const t=n.texData.get(a.dataId),e=n.texData.get(s.dataId),r=new Xp(qp,a.shape,s.shape),o=new Xp(Kp,a.shape,s.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],c=n.runWebGLProgram(r,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),l=Dp({inputs:{real:c,imag:u},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}if(n.shouldExecuteOnCPU([a,s])){const t=n.texData.get(a.dataId),e=n.texData.get(s.dataId),[r,i]=tp(a.shape,s.shape,t.values,e.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=r,c}let i;return i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ap(Yp,a.shape,s.shape):new Ep(Yp,a.shape,s.shape),n.runWebGLProgram(i,[a,s],o)}const Zp={kernelName:r.Multiply,backendName:"webgl",kernelFunc:Qp};function Jp(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{shape:o}=a,i=n,c=r.util.sizeFromShape(s.shape),u=r.util.inferFromImplicitShape(o,c),l=r.util.sizeFromShape(u);r.util.assert(c===l,()=>"The new shape (".concat(u,") has ").concat(l," elements and the old ")+"shape (".concat(s.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements.");const d=i.texData.get(s.dataId);return!d.isPacked||Xl(s.shape,u)||null!==d.texture&&Xl(d.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(t,e,n){const a=[Gl(t.shape),...Hl(t.shape)],r={dtype:t.dtype,shape:a,dataId:t.dataId},s=[Gl(e),...Hl(e)],o=new bp(s,a),i=n.runWebGLProgram(o,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}(s,u,i)}const $p={kernelName:r.Reshape,backendName:"webgl",kernelFunc:Jp};class th{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:o}=t;this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u="sumValue += dot(values * ".concat(r.util.isInt(t)?t.toPrecision(2):t,", ones);")}let l="";s%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(u,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class eh{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=t;this.outputShape=[a,s];let o="0.0",i="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",i="min"):"max"===e&&(o="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const u=4*Math.floor(n/4),l=n%4;let d="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n      }\n    "),p="vec4";"all"===e?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(h,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(u,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(u,";\n        if (").concat(1===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function nh(t,e,n,a){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],a=r.backend_util.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return e}(t.shape);let o=t;for(let r=0;r<s.length;r++){const{inSize:i,windowSize:c,outSize:u}=s[r];let l,d;l="mean"===n?0===r?new th({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u},i):new th({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u}):new eh({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u},n),d=o,o=a.runWebGLProgram(l,[o],e),d.dataId!==t.dataId&&a.disposeIntermediateTensorInfo(d)}return o}class ah{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const a=Dd(this.rank),r=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(e);for(let r=0;r<t.length;r++)a[t[r]]=n[r];return a.join()}(e);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class rh{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=Dd(this.rank),r=hp("rc",this.rank),s=new Array(this.rank);for(let u=0;u<e.length;u++)s[e[u]]=r[u];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function sh(t,e,n){const a=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rh(t.shape,e):new ah(t.shape,e);return n.runWebGLProgram(a,[t],t.dtype)}function oh(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a;return function(t,e,n,a){const s=e,o=t.shape.length,i=r.util.parseAxisParam(s,t.shape);let c=i;const u=r.backend_util.getAxesPermutation(c,o),l=null!=u;let d=t;l&&(d=sh(t,u,a),c=r.backend_util.getInnerMostAxes(c.length,o)),r.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[p,h]=r.backend_util.computeOutAndReduceShapes(d.shape,c);let f=p;n&&(f=r.backend_util.expandShapeToKeepDim(p,i));const m=r.util.sizeFromShape(h),b=Jp({inputs:{x:d},attrs:{shape:[r.util.sizeFromShape(t.shape)/m,m]},backend:a}),g=nh(b,Object(r.sumOutType)(t.dtype),"sum",a),y=Jp({inputs:{x:g},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(d),y}(s,o,i,n)}const ih={kernelName:r.Sum,backendName:"webgl",kernelFunc:oh};function ch(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=r.shape[s[l]];let u;if(o.shouldExecuteOnCPU([r])){const t=o.texData.get(r.dataId).values,e=dp(t,r.shape,r.dtype,s,c);u=o.makeTensorInfo(c,r.dtype);o.texData.get(u.dataId).values=e}else u=sh(r,s,o);return u}const uh={kernelName:r.Transpose,backendName:"webgl",kernelFunc:ch};function lh({a:t,b:e,transposeA:n,transposeB:a,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}){const l=t.shape.length,d=e.shape.length,p=n?t.shape[l-2]:t.shape[l-1],h=a?e.shape[d-1]:e.shape[d-2],f=n?t.shape[l-1]:t.shape[l-2],m=a?e.shape[d-2]:e.shape[d-1],b=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=r.util.sizeFromShape(b),x=r.util.sizeFromShape(g),v=y===x||1===y||1===x;r.util.assert(l>=2&&d>=2&&v,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(b,") and (").concat(g,")."));const w=(y>x?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(h,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(e.shape," and transposeA=").concat(n)+" and transposeB=".concat(a," must match."));const k=n?[y,p,f]:[y,f,p],O=a?[x,m,h]:[x,h,m],N=Jp({inputs:{x:t},backend:s,attrs:{shape:k}}),I=Jp({inputs:{x:e},backend:s,attrs:{shape:O}}),S=[N,I],T=Math.max(y,x),j=n?N.shape[1]:N.shape[2],C=null!=o,E=null!=i,A="leakyrelu"===u,_=null!=u?Gp(u,!0):null;let R;if((1===f||1===m)&&j>1e3&&!1===(C||E||A||null!=_)){let t=N,e=I;n&&(t=ch({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),S.push(t)),a&&(e=ch({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(e));const r=1===m;let o=t;1!==m&&(o=Jp({inputs:{x:t},backend:s,attrs:{shape:[T,j,1]}}),S.push(o));const i=1===m?2:1;let c=e;r&&(c=Jp({inputs:{x:e},backend:s,attrs:{shape:[T,1,j]}}),S.push(c));const u=Qp({inputs:{a:o,b:c},backend:s});R=oh({inputs:{x:u},backend:s,attrs:{axis:i,keepDims:!0}}),S.push(u)}else{const u=Object(r.upcastType)(t.dtype,e.dtype),l=new Hp(k,O,[T,f,m],n,a,C,_,E,A),d=[N,I];if(null!=o&&d.push(o),E&&d.push(i),A){const t=s.makeTensorInfo([],"float32",r.util.createScalarValue(c,"float32"));d.push(t),S.push(t)}R=s.runWebGLProgram(l,d,u)}const D=Jp({inputs:{x:R},backend:s,attrs:{shape:w}});S.push(R);for(const r of S)s.disposeIntermediateTensorInfo(r);return D}const dh={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=a;return lh({a:r,b:s,transposeA:c,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}};const ph={kernelName:r.Abs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const t=n.texData.get(a.dataId),e=sp(t.values);return n.makeTensorInfo(a.shape,a.dtype,e)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ip(a.shape,"return abs(x);"):new wp(a.shape,"return abs(x);"),n.runWebGLProgram(s,[a],a.dtype)}},hh=Vp({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),fh={kernelName:r.Acos,backendName:"webgl",kernelFunc:hh},mh=Vp({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),bh={kernelName:r.Acosh,backendName:"webgl",kernelFunc:mh},gh="return a + b;",yh=Up({opSnippet:gh,packedOpSnippet:gh,supportsComplex:!0,cpuKernelImpl:Ld}),xh={kernelName:r.Add,backendName:"webgl",kernelFunc:yh};class vh{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T".concat(e));const n=[];this.variableNames.forEach(t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))});const a=this.variableNames.map(t=>"v".concat(t)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class wh{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T".concat(e));const n=[];this.variableNames.forEach(t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))});const a=this.variableNames.map(t=>"v".concat(t)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const kh={kernelName:r.AddN,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,s=n;if(1===s.length)return _p({inputs:{x:s[0]},backend:a});if(s.length>Object(r.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:a}),r=t({inputs:s.slice(e),backend:a});return t({inputs:[n,r],backend:a})}const o=s.map(t=>t.dtype).reduce((t,e)=>Object(r.upcastType)(t,e)),i=s.map(t=>t.shape),c=Object(r.env)().getBool("WEBGL_PACK")?new wh(s[0].shape,i):new vh(s[0].shape,i);return a.runWebGLProgram(c,s,o)}};const Oh={kernelName:r.All,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a,c=s.shape.length,u=r.util.parseAxisParam(o,s.shape);let l=u;const d=r.backend_util.getAxesPermutation(l,c);let p=s;null!=d&&(p=ch({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,c)),r.backend_util.assertAxesAreInnerMostDims("all",l,c);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=Jp({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=nh(m,m.dtype,"all",n);let g;if(i){g=Jp({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,u)}})}else g=Jp({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};const Nh={kernelName:r.Any,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a,c=s.shape.length,u=r.util.parseAxisParam(o,s.shape);let l=u;const d=r.backend_util.getAxesPermutation(l,c);let p=s;null!=d&&(p=ch({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,c)),r.backend_util.assertAxesAreInnerMostDims("any",l,c);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=Jp({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=nh(m,m.dtype,"any",n);let g;if(i){g=Jp({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,u)}})}else g=Jp({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};class Ih{constructor(t,e,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Sh{constructor(t,e,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(t.length>2,()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2."));const s=t[t.length-1],o=Math.ceil(s/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=Dd(c),l=fp("coords",c);let d,p;if(1===o){p=c+1;const t=Dd(p);d="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[c-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[c-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[c-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[c-2],";")}else p=c,d="\n        ".concat(u," sourceLocR = coords;\n        ++").concat(l[c-1],";\n        ").concat(u," sourceLocG = coords;\n        ++").concat(l[c-2],";\n        ").concat(u," sourceLocA = coords;\n        --").concat(l[c-1],";\n        ").concat(u," sourceLocB = coords;\n        --").concat(l[c-2],";");const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map(t=>"int "+t),b=fp("sourceLocR",p-1).concat("inIdx.r"),g=fp("sourceLocG",p-1).concat("inIdx.g"),y=fp("sourceLocB",p-1).concat("inIdx.b"),x=fp("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(x.join(),")));"),k="vec4(\n            getAChannel(".concat(b.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(x.join(),") : 0.)"),O=a?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(h.join(),"),\n                                          vec2(").concat(h.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(h.join(),"),\n                               vec2(").concat(h.slice(-2).join(),"));\n      }\n      ").concat(O,"\n      void main() {\n        ").concat(u," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(l[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Th(t,e,n,a){const s=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,e.shape.length),!Object(r.env)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[o,i]=r.backend_util.computeOutAndReduceShapes(e.shape,s),c=r.util.sizeFromShape(i),u=Jp({inputs:{x:e},backend:t,attrs:{shape:[-1,c]}});n.push(u);const l=function t(e,n,a,s=null){let o=n.shape[0],i=n.shape[1];null!=s&&(o=s.shape[0],i=s.shape[1]);const c=r.backend_util.computeOptimalWindowSize(i),u={windowSize:c,inSize:i,batchSize:o,outSize:Math.ceil(i/c)},l=new Ih(u,a,null==s),d=[n];null!=s&&d.push(s);const p=e.runWebGLProgram(l,d,"int32");if(1===p.shape[1])return p;const h=t(e,n,a,p);return e.disposeIntermediateTensorInfo(p),h}(t,u,a);n.push(l);const d=Jp({inputs:{x:l},backend:t,attrs:{shape:o}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return function t(e,n,a,s=null){const o=null!=s?s.shape:n.shape,i=o[o.length-1],c=r.backend_util.computeOptimalWindowSize(i),u=new Sh(o,c,a,null==s),l=null==s?[n]:[n,s],d=e.runWebGLProgram(u,l,"int32");if(d.shape.length===n.shape.length){const r=t(e,n,a,d);return e.disposeIntermediateTensorInfo(d),r}return d}(t,e,a)}const jh={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=ch({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=r.backend_util.getInnerMostAxes(i.length,u.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const d=Th(n,u,i[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}};const Ch={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o}=a;let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=c&&(u=ch({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(u),i=r.backend_util.getInnerMostAxes(i.length,u.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const d=Th(n,u,i[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},Eh=Vp({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Ah={kernelName:r.Asin,backendName:"webgl",kernelFunc:Eh},_h=Vp({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Rh={kernelName:r.Asinh,backendName:"webgl",kernelFunc:_h},Dh=Vp({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Fh={kernelName:r.Atan,backendName:"webgl",kernelFunc:Dh},Mh=Up({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zh={kernelName:r.Atan2,backendName:"webgl",kernelFunc:Mh},Lh=Vp({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ph={kernelName:r.Atanh,backendName:"webgl",kernelFunc:Lh};class Bh{constructor(t,e,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,o=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),b="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(u,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:b:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let y="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(y="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n      const float initializationValue = ").concat(g,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(g,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              getValue(batch, xR, xC + 3 * ").concat(u,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(y,");\n      }\n    ")}}class Wh{constructor(t,e,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,o=t.strideDepth,i=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(b,", ").concat(g,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(p,";\n              wD += ").concat(u,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(h,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(h," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,O="\n      if (".concat(y,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(b,", ").concat(g,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(p,";\n            wD += ").concat(u,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(O,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(O,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(O,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(O,"\n            }\n          }\n          setOutput(").concat(v,");\n        }\n      }\n    ")}}const Vh={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;ed(s,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return _p({inputs:{x:s},backend:n});const d=new Bh(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};const Uh={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=a,d=r.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],c,u,l),p=new Wh(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class Gh{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=i-1-t.padInfo.top,l=c-1-t.padInfo.left,d=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(l,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Hh{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=p-1-t.padInfo.left,b=1/(e*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(h,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(b,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(p,";\n                wC += ").concat(u,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const qh={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,i=o,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=a,p=r.backend_util.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),h=new Hh(p);return n.runWebGLProgram(h,[s],i.dtype)}};const Kh={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,i=o;ed([s,o],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=a,d=r.backend_util.computePool2DInfo(i.shape,c,u,1,l),p=new Gh(d);return n.runWebGLProgram(p,[s],i.dtype)}};const Xh={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s}=e,{transposeA:o,transposeB:i}=a;return lh({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class Yh{constructor(t,e,n,a,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(t,e),r.backend_util.assertAndGetBroadcastShape(t,n);let i="0.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class Qh{constructor(t,e,n,a,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(t,e),r.backend_util.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const Zh={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a,mean:s,variance:o,offset:i,scale:c}=t;r.util.assert(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==i||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==c||s.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[a,s,o];let d=null;null!=i&&(d=i.shape,l.push(i));let p=null;null!=c&&(p=c.shape,l.push(c));const h=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Qh(a.shape,s.shape,o.shape,d,p,u):new Yh(a.shape,s.shape,o.shape,d,p,u);return e.runWebGLProgram(h,l,l[0].dtype)}};class Jh{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Dd(this.rank),n="uniform int start[".concat(this.rank,"];"),a=function(t){if(1===t)return"sourceLoc";if(t<=6)return $h.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let r;const s=t.map((t,e)=>"sourceLoc.".concat($h[e]," = start[").concat(e,"] + coords.").concat($h[e],";"));r="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(s.join("\n"),"\n      "),this.userCode="\n      ".concat(n,"\n      void main() {\n        ").concat(r,"\n        setOutput(getSource(").concat(a,"));\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const $h=["x","y","z","w","u","v"];class tf{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Dd(this.rank),n=fp("coords",this.rank),a=fp("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map((t,e)=>"start[".concat(e,"]")).join(),");"):t.map((t,e)=>"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];")).join("\n");this.userCode="\n      uniform int start[".concat(this.rank,"];\n      void main() {\n        ").concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function ef(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,size:i}=a,[c,u]=r.slice_util.parseSliceParams(s,o,i);if(r.slice_util.assertParamsValid(s,c,u),0===r.util.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=op(t.values,c,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),d=r.slice_util.isSliceContinous(s.shape,c,u);if(l||!d){const t=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tf(u):new Jh(u),e=t.getCustomSetupFunc(c);return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,a){const s=a.texData.get(t.dataId),o=a.makeTensorInfo(n,t.dtype),i=a.texData.get(o.dataId);Object.assign(i,s),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=t.dtype;let c=r.slice_util.computeFlatOffset(e,r.util.computeStrides(t.shape));s.slice&&(c+=s.slice.flatOffset),i.slice={flatOffset:c,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,u+1),o}(s,c,u,n)}const nf={kernelName:r.Slice,backendName:"webgl",kernelFunc:ef},af={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,crops:i}=a;r.util.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((t,e)=>t*e),u=r.backend_util.getReshaped(s.shape,o,c),l=r.backend_util.getPermuted(u.length,o.length),d=r.backend_util.getReshapedPermuted(s.shape,o,c),p=r.backend_util.getSliceBeginCoords(i,o.length),h=r.backend_util.getSliceSize(d,i,o.length),f=[],m=Jp({inputs:{x:s},backend:n,attrs:{shape:u}}),b=ch({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Jp({inputs:{x:b},backend:n,attrs:{shape:d}}),y=ef({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(b),f.push(g),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}};const rf={kernelName:r.Bincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),u=Pd(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,u)}},sf=Up({opSnippet:"return float(a != b);",dtype:"bool"}),of={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:sf};function cf(t){const{inputs:e,backend:n}=t,{input:a}=e;return _p({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const uf={kernelName:r.Real,backendName:"webgl",kernelFunc:cf};const lf={kernelName:r.Cast,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a,attrs:s}=e,{x:o}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===o.dtype)return _p({inputs:{x:o},backend:a});const e=r.zeros(o.shape),n=t({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),s=Dp({inputs:{real:n,imag:e},backend:a});return e.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const e=cf({inputs:{input:o},backend:a}),n=t({inputs:{x:e},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(e),n}if(!r.util.hasEncodingLoss(o.dtype,i)){const t=_p({inputs:{x:o},backend:a});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new wp(t.shape,"return float(int(x));"),a=e.runWebGLProgram(n,[t],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===i){const t=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),e=sf({inputs:{a:o,b:t},backend:a});return a.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(i))}},df="return ceil(x);",pf=Vp({opSnippet:df,packedOpSnippet:df,cpuKernelImpl:Wd}),hf={kernelName:r.Ceil,backendName:"webgl",kernelFunc:pf};class ff{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,a)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class mf{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,a)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const bf={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{clipValueMin:o,clipValueMax:i}=a;let c;c=Object(r.env)().getBool("WEBGL_PACK_CLIP")?new mf(s.shape):new ff(s.shape);const u=c.getCustomSetupFunc(o,i);return n.runWebGLProgram(c,[s],s.dtype,u)}};class gf{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function yf(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const xf={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=n.texData.get(a.dataId),s=new gf(a.shape),o=[yf(a,r.complexTensorInfos.real),yf(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class vf{constructor(t){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T".concat(e));const e=new Array(t.length-1);e[0]=t[0][1];for(let r=1;r<e.length;r++)e[r]=e[r-1]+t[r][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let r=1;r<e.length;r++){const t=e[r-1];n.push("else if (yC < ".concat(e[r],") ")+"setOutput(getT".concat(r,"(yR, yC-").concat(t,"));"))}const a=e.length,s=e[e.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(s,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class wf{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(t,e);const n=this.outputShape,a=n.length,s=Dd(a),o=fp("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map((t,e)=>"T".concat(e));const c=new Array(t.length-1);c[0]=t[0][e];for(let r=1;r<c.length;r++)c[r]=c[r-1]+t[r][e];const u=i[e],l=i.slice(-2),d=i.join();let p="if (".concat(u," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(l.join(),"));\n        }");for(let r=1;r<c.length;r++){const t=c[r-1];p+="\n        if (".concat(u," < ").concat(c[r],"  && ").concat(u," >= ").concat(c[r-1],") {\n          return getChannel(\n            getT").concat(r,"(").concat(kf(i,u,t),"),\n            vec2(").concat(kf(l,u,t),"));\n        }")}const h=c.length,f=c[c.length-1];p+="\n        return getChannel(\n          getT".concat(h,"(").concat(kf(i,u,f),"),\n          vec2(").concat(kf(l,u,f),"));"),this.userCode="\n      float getValue(".concat(i.map(t=>"int "+t),") {\n        ").concat(p,"\n      }\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function kf(t,e,n){const a=t.indexOf(e);return t.map((t,e)=>e===a?"".concat(t," - ").concat(n):t).join()}function Of(t){const{inputs:e,backend:n}=t,{input:a}=e;return _p({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Nf={kernelName:r.Imag,backendName:"webgl",kernelFunc:Of};function If(t,e,n){const a=r.backend_util.computeOutShape(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>Jp({inputs:{x:t},attrs:{shape:[-1,r.util.sizeFromShape(t.shape.slice(e))]},backend:n})),outShape:a}}function Sf(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a,o=r.util.parseAxisParam(s,e[0].shape)[0],i=r.backend_util.computeOutShape(e.map(t=>t.shape),o);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(t=>r.util.sizeFromShape(t.shape)>0);if(1===c.length)return _p({inputs:{x:c[0]},backend:n});const u=c.map(t=>t.shape);return r.backend_util.assertParamsConsistent(u,o),function t(e,n,a){const s=e[0].dtype;if("complex64"===s){const r=e.map(t=>cf({inputs:{input:t},backend:a})),s=e.map(t=>Of({inputs:{input:t},backend:a})),o=t(r,n,a),i=t(s,n,a),c=Dp({inputs:{real:o,imag:i},backend:a});return r.forEach(t=>a.disposeIntermediateTensorInfo(t)),s.forEach(t=>a.disposeIntermediateTensorInfo(t)),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}if("string"===s){const{tensors2D:t,outShape:o}=If(e,n,a),i=t.map(t=>({vals:a.readSync(t.dataId),shape:t.shape})),c=1===t[0].shape[0],u=Vd(i,o,s,c),l=r.backend_util.computeOutShape(e.map(t=>t.shape),n),d=a.makeTensorInfo(l,s,u);return t.forEach(t=>a.disposeIntermediateTensorInfo(t)),d}if(e.length>Object(r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=t(e.slice(0,r),n,a),o=t(e.slice(r),n,a),i=t([s,o],n,a);return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}if(Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new wf(e.map(t=>t.shape),n);return a.runWebGLProgram(t,e,s)}const{tensors2D:o,outShape:i}=If(e,n,a),c=new vf(o.map(t=>t.shape)),u=a.runWebGLProgram(c,o,s);o.forEach(t=>a.disposeIntermediateTensorInfo(t));const l=Jp({inputs:{x:u},attrs:{shape:i},backend:a});return a.disposeIntermediateTensorInfo(u),l}(c,o,n)}const Tf={kernelName:r.Concat,backendName:"webgl",kernelFunc:Sf};class jf{constructor(t,e=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,o=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,h=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(y,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(b,"], coords[").concat(g,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(u,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(p,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(h,") *\n                    getW(wR, wC, ").concat(h,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(h,", xR, xC) *\n                    getW(wR, wC, ").concat(h,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2),\n                getW(wR, wC, ").concat(h," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1),\n                  getX(batch, xR, xC, ").concat(h," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC),\n                  getX(batch, ").concat(h," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class Cf{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,p=t.filterWidth,h=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(p,"; wC++) {\n              int xC = xCCorner + wC * ").concat(u,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(h,") *\n                  getW(wF, wR, wC, ").concat(h,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1),\n                  getX(batch, xF, xR, xC, ").concat(h," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2),\n                  getW(wF, wR, wC, ").concat(h," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Ef{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:a,inChannels:r,strideWidth:s,strideHeight:o,padInfo:i,outWidth:c,dilationWidth:u,dilationHeight:l,dataFormat:d}=n,{left:p,top:h}=i,f=r*a,m=ad(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+="\n          blockIndex = rc.y + ".concat(n,";\n          pos = rc.x + ").concat(v,";\n\n          if(blockIndex < ").concat(t[1]," && pos < ").concat(t[0],") {\n            offsetY = int(blockIndex / (").concat(c,")) * ").concat(o," - ").concat(h,";\n            d0 = offsetY + ").concat(l," * (pos / ").concat(f,");\n\n            if(d0 < ").concat(e[g]," && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ").concat(c,".) * ").concat(s,". - ").concat(p,".);\n              d1 = offsetX + ").concat(u," * (int(mod(float(pos), ").concat(f,".) / ").concat(r,".));\n\n              if(d1 < ").concat(e[y]," && d1 >= 0) {\n\n                ch = int(mod(float(pos), ").concat(r,".));\n\n                if (").concat(b,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*v+n,"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*v+n,"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(x,"\n\n        ").concat(m.output," = result;\n      }\n    ")}}function Af({x:t,filter:e,convInfo:n,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){const u=t.shape,l=a.texData.get(t.dataId),d=n.inChannels,p=u[0]*u[1]*u[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[],g=(1===p||1===h)&&d>1e3,y=u[2]%2!==0&&!!l.isPacked;if(!g&&Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const d=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),p={dataId:t.dataId,shape:[1,d,n.inChannels],dtype:t.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.util.assert(Xl(l.shape,p.shape),()=>"packed reshape ".concat(l.shape," to ").concat(p.shape," isn't free"));const g=Jp({inputs:{x:e},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(g);const y=lh({a:p,b:g,backend:a,transposeA:!1,transposeB:!1,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),x=a.texData.get(y.dataId);r.util.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=h,x.shape=n.outShape,m=_p({inputs:{x:y},backend:a}),m.shape=n.outShape,b.push(y)}else{const r=Jp({inputs:{x:t},backend:a,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),l=Jp({inputs:{x:e},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=lh({a:r,b:l,transposeA:!1,transposeB:!1,backend:a,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});m=Jp({inputs:{x:d},backend:a,attrs:{shape:n.outShape}}),b.push(r),b.push(l),b.push(d)}for(const r of b)a.disposeIntermediateTensorInfo(r);return m}function _f({x:t,filter:e,convInfo:n,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){const{filterWidth:u,filterHeight:l,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,b=u*l*d,g=h*p,y=[b,g],x=[],v=Jp({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),w=Jp({inputs:{x:e},backend:a,attrs:{shape:[1,b,r.util.sizeFromShape(e.shape)/b]}});x.push(v),x.push(w);const k=new Ef(y,v.shape,n),O=a.runWebGLProgram(k,[v],"float32"),N=Jp({inputs:{x:O},backend:a,attrs:{shape:[1,y[0],y[1]]}});x.push(O),x.push(N);const I=null!=s,S=null!=o,T="leakyrelu"===c,j=c?Gp(c,!0):null,C=new Hp(N.shape,w.shape,[1,g,n.outChannels],!0,!1,I,j,S,T),E=[N,w];if(s&&E.push(s),S&&E.push(o),T){const t=a.makeTensorInfo([],"float32",r.util.createScalarValue(i,"float32"));E.push(t),x.push(t)}const A=a.runWebGLProgram(C,E,"float32"),_=Jp({inputs:{x:A},backend:a,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});x.push(A);for(const r of x)a.disposeIntermediateTensorInfo(r);return _}const Rf={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(u),h=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,l,c,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=_f({x:s,filter:o,convInfo:h,backend:n});else{const t=new jf(h);f=n.runWebGLProgram(t,[s,o],"float32")}else f=Af({x:s,filter:o,convInfo:h,backend:n});const m=Jp({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Df{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              if (").concat(s,") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Ff{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=s?1:2,u=s?2:3,l=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(u,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Mf{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,s=t.padInfo.top,o=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class zf{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=a-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(u,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Lf={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=a,p=r.backend_util.convertConv2DDataFormat(u),h=r.backend_util.computeConv2DInfo(s.shape,d,i,1,c,l,!1,p),f=new Df(h);return n.runWebGLProgram(f,[s,o],"float32")}};const Pf={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=a,p=r.backend_util.convertConv2DDataFormat(l),h=r.backend_util.computeConv2DInfo(i,o.shape,c,1,u,d,!1,p),f=new Ff(h);return n.runWebGLProgram(f,[s,o],"float32")}};const Bf={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dilations:u}=a,l=r.backend_util.computeConv3DInfo(s.shape,o.shape,i,u,c),d=new Cf(l);return n.runWebGLProgram(d,[s,o],"float32")}};const Wf={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:i,pad:c,filterShape:u}=a,l=r.backend_util.computeConv3DInfo(s.shape,u,i,1,c),d=new Mf(l);return n.runWebGLProgram(d,[s,o],"float32")}};const Vf={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{pad:i,strides:c,inputShape:u}=a,l=r.backend_util.computeConv3DInfo(u,o.shape,c,1,i),d=new zf(l);return n.runWebGLProgram(d,[s,o],"float32")}},Uf=Vp({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Gf={kernelName:r.Cos,backendName:"webgl",kernelFunc:Uf},Hf=Vp({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),qf={kernelName:r.Cosh,backendName:"webgl",kernelFunc:Hf};class Kf{constructor(t,e,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=t,[u]=e,[l,d]=n;this.outputShape=[u,l,d,c];const p="bilinear"===a?1:0,[h,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,b,g]=l>1?["".concat((o-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(h," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(h)],[y,x,v]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(y,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(b,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(g,";\n        if( in_y < 0.0 || in_y > ").concat(h," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(p," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const Xf={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{image:r,boxes:s,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:u}=a,l=new Kf(r.shape,s.shape,i,c,u);return n.runWebGLProgram(l,[r,s,o],"float32")}};class Yf{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const a=t.length,r=e?"0.0":"getX(".concat(Qf(a,"coords"),")"),s=t[t.length-1];let o="",i="";e?(o=n?"end != ".concat(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?"end + pow2 < ".concat(s):"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode="\n      uniform float index;\n      void main() {\n        ".concat(Dd(a)," coords = getOutputCoords();\n        int end = ").concat(Zf(a,"coords"),";\n        float val = ").concat(r,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(o,") {\n          int idx = ").concat(i,";\n          ").concat(Zf(a,"coords")," = idx;\n          val += getX(").concat(Qf(a,"coords"),");\n        }\n        setOutput(val);\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Qf(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}function Zf(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}const Jf={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,exclusive:i,reverse:c}=a,u=s.shape.length,l=r.backend_util.getAxesPermutation([o],u);let d=s;null!=l&&(d=ch({inputs:{x:s},backend:n,attrs:{perm:l}}));const p=r.backend_util.getInnerMostAxes(1,u)[0];if(p!==u-1)throw new Error("WebGL cumsum shader expects an inner-most axis=".concat(s.shape.length-1," ")+"but got axis=".concat(o));const h=d.shape[p];let f=_p({inputs:{x:d},backend:n});for(let r=0;r<=Math.ceil(Math.log2(h))-1;r++){const t=new Yf(d.shape,!1,c),e=t.getCustomSetupFunc(r),a=f;f=n.runWebGLProgram(t,[f],f.dtype,e),n.disposeIntermediateTensorInfo(a)}if(i){const t=new Yf(d.shape,i,c),e=f;f=n.runWebGLProgram(t,[f],f.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=ch({inputs:{x:f},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),t}return f}};const $f={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(s.dataId),a=Pd(t,e,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(s),a=Bd(t,e,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class tm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const em={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockSize:o,dataFormat:i}=a;r.util.assert(o>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(o));const c=s.shape[0],u="NHWC"===i?s.shape[1]:s.shape[2],l="NHWC"===i?s.shape[2]:s.shape[3],d="NHWC"===i?s.shape[3]:s.shape[1],p=u*o,h=l*o,f=d/(o*o),m=new tm("NHWC"===i?[c,p,h,f]:[c,f,p,h],o,i);return n.runWebGLProgram(m,[s],s.dtype)}};class nm{constructor(t,e=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,o=t.inWidth,i=t.padInfo.top,c=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let b="",g="";n&&(b=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(b,"\n\n      const ivec2 strides = ivec2(").concat(u,", ").concat(l,");\n      const ivec2 pads = ivec2(").concat(i,", ").concat(c,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(m,";\n        int q = d2 - d1 * ").concat(m,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(d,";\n\n          if (xR < 0 || xR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(f,"; wC++) {\n            int xC = xCCorner + wC * ").concat(p,";\n\n            if (xC < 0 || xC >= ").concat(o,") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(y,"\n        ").concat(g,"\n        setOutput(result);\n      }\n    ")}}class am{constructor(t,e=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const o=t.inHeight,i=t.inWidth,c=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,d=t.strideWidth,p=t.dilationHeight,h=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,b=m;let g="int xR; int xC; int xCOffset;";for(let r=0;r<f;r++)for(let t=0;t<m;t++)g+="\n          vec4 xTexelR".concat(r,"C").concat(2*t," = vec4(0.);\n          vec4 wR").concat(r,"C").concat(t," = vec4(0.);\n          vec4 xR").concat(r,"C").concat(t," = vec4(0.);");for(let w=0;w<f;w++)for(let t=0;t<b;t++){const e=2*t;if(g+="\n          xR = xRCorner + ".concat(w*p,";\n          xC = xCCorner + ").concat(e*h,";\n        "),1===d){if(e<m&&(g+=u%2===1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ".concat(o," && xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i,") {\n                    xTexelR").concat(w,"C").concat(e,".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ").concat(o," && xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i,") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR").concat(w,"C").concat(e," = vec4(previous.zw, xTexelR").concat(w,"C").concat(e,".xy);\n                } else {\n                  xR").concat(w,"C").concat(e," = vec4(0, 0, xTexelR").concat(w,"C").concat(e,".xy);\n                }\n              "):"\n                if(xR >= 0 && xR < ".concat(o," && xC >= 0 && xC < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                xR").concat(w,"C").concat(e," = xTexelR").concat(w,"C").concat(e,";\n              "),e+1<m)){const t=u%2===0?r.util.nearestLargerEven(h):h;h%2===0&&u%2===1||h%2!==0&&u%2!==1?(g+="\n                  xCOffset = xC + ".concat(u%2," + ").concat(t,";\n\n                  if(xR >= 0 && xR < ").concat(o," &&\n                    xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  }\n                "),h>1&&(g+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ".concat(o," &&\n                      xCOffset >= 0 && xCOffset < ").concat(i,") {\n                      xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                    }\n                  ")),g+="\n                  xR".concat(w,"C").concat(e+1," = vec4(\n                    xTexelR").concat(w,"C").concat(e,".zw, xTexelR").concat(w,"C").concat(e+2,".xy);\n                ")):g+="\n                  xCOffset = xC + ".concat(t,";\n\n                  if(xR >= 0 && xR < ").concat(o," &&\n                    xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR").concat(w,"C").concat(e+1," = xTexelR").concat(w,"C").concat(e+2,";\n                ")}}else e<m&&(g+="\n              if(xR >= 0 && xR < ".concat(o,") {\n            "),u%2===1?(g+="\n                xCOffset = xC + 1 - ".concat(d,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e+2," = vec4(0.);\n                }\n\n                xR").concat(w,"C").concat(e," = vec4(\n                  xTexelR").concat(w,"C").concat(e,".zw, xTexelR").concat(w,"C").concat(e+2,".zw);\n              "),e+1<m&&(g+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ".concat(d,";\n                  if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR").concat(w,"C").concat(e+1," = vec4(xTexelR").concat(w,"C").concat(e+2,".xy, final.xy);\n                "))):(g+="\n                if(xC >= 0 && xC < ".concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                xCOffset = xC + ").concat(d,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e+2," = vec4(0.);\n                }\n\n                xR").concat(w,"C").concat(e," = vec4(\n                  xTexelR").concat(w,"C").concat(e,".xy, xTexelR").concat(w,"C").concat(e+2,".xy);\n              "),e+1<m&&(g+="\n                  xR".concat(w,"C").concat(e+1," = vec4(\n                    xTexelR").concat(w,"C").concat(e,".zw, xTexelR").concat(w,"C").concat(e+2,".zw);\n                "))),g+="}");e<m&&(g+="\n            vec4 wTexelR".concat(w,"C").concat(e," = getW(").concat(w,", ").concat(e,", d1, q);\n            wR").concat(w,"C").concat(e," = vec4(wTexelR").concat(w,"C").concat(e,".xz, wTexelR").concat(w,"C").concat(e,".xz);\n          "),e+1<m&&(g+="\n              vec4 wTexelR".concat(w,"C").concat(e+1," = getW(").concat(w,", ").concat(e+1,", d1, q);\n              wR").concat(w,"C").concat(e+1," =\n                vec4(wTexelR").concat(w,"C").concat(e+1,".xz, wTexelR").concat(w,"C").concat(e+1,".xz);")))}for(let r=0;r<f;r++)for(let t=0;t<m;t++)g+="dotProd += xR".concat(r,"C").concat(t," * wR").concat(r,"C").concat(t,";");let y="",x="";n&&(y=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(y,"\n\n      const ivec2 strides = ivec2(").concat(l,", ").concat(d,");\n      const ivec2 pads = ivec2(").concat(c,", ").concat(u,");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ").concat(g,"\n\n        vec4 result = dotProd;\n        ").concat(v,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}const rm={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=a;let d=u;null==d&&(d=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'"));const p=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,d,c,l,!0);let h;return h=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new am(p):new nm(p),n.runWebGLProgram(h,[s,o],"float32")}};class sm{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class om{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s=e-1-t.padInfo.top,o=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const im={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,dy:o}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=a,p=r.backend_util.computeConv2DInfo(s.shape,d,i,c,u,l,!0),h=new sm(p);return n.runWebGLProgram(h,[s,o],"float32")}};const cm={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,filter:o}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=a,p=r.backend_util.computeConv2DInfo(d,o.shape,i,c,u,l,!0),h=new om(p);return n.runWebGLProgram(h,[s,o],"float32")}};class um{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const lm={kernelName:r.Diag,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=[...a.shape,...a.shape],o=r.util.sizeFromShape(a.shape),i=Jp({inputs:{x:a},backend:n,attrs:{shape:[o]}}),c=new um(o),u=n.runWebGLProgram(c,[i],i.dtype),l=Jp({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class dm{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:u}=t,{top:l,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(u,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const pm={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o}=e,{strides:i,pad:c,dilations:u}=a,l=r.backend_util.computeDilation2DInfo(s.shape,o.shape,i,c,"NHWC",u);let d;const p=new dm(l);d=n.runWebGLProgram(p,[s,o],"float32");const h=Jp({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),h}},hm=Vp({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),fm={kernelName:r.Elu,backendName:"webgl",kernelFunc:hm},mm={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:a,y:s}=e,o=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ap("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new Ep("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(o,[a,s],a.dtype)}},bm=Up({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),gm={kernelName:r.Equal,backendName:"webgl",kernelFunc:bm},ym=Vp({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(r.backend_util.ERF_P,";\n  float a1 = ").concat(r.backend_util.ERF_A1,";\n  float a2 = ").concat(r.backend_util.ERF_A2,";\n  float a3 = ").concat(r.backend_util.ERF_A3,";\n  float a4 = ").concat(r.backend_util.ERF_A4,";\n  float a5 = ").concat(r.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),xm={kernelName:r.Erf,backendName:"webgl",kernelFunc:ym},vm="return exp(x);",wm=Vp({opSnippet:vm,packedOpSnippet:vm,cpuKernelImpl:Ud}),km={kernelName:r.Exp,backendName:"webgl",kernelFunc:wm};function Om(t){const{inputs:e,attrs:n,backend:a}=t,{dim:s}=n,{input:o}=e,i=o.shape.length,c=o.shape.slice();let u=s;return s<0&&(r.util.assert(-(i+1)<=s,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+s+1),c.splice(u,0,1),Jp({inputs:{x:o},backend:a,attrs:{shape:c}})}const Nm={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:Om},Im="return exp(x) - 1.0;",Sm=Vp({opSnippet:Im,packedOpSnippet:Im,cpuKernelImpl:Gd}),Tm={kernelName:r.Expm1,backendName:"webgl",kernelFunc:Sm};class jm{constructor(t,e,n){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Cm(t,e,n){const a=n.texData.get(t.dataId),s=r.util.sizeFromShape(t.shape),o=t.shape[t.shape.length-1],i=Jp({inputs:{x:t},backend:n,attrs:{shape:[s/o,o]}}),c=i.shape,u=new jm("real",c,e),l=new jm("imag",c,e),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(u,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Dp({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Jp({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const Em={kernelName:r.FFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return Cm(a,!1,n)}};class Am{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function _m(t){const{backend:e,attrs:n}=t,{shape:a,value:s}=n;let{dtype:o}=n;if(o=o||r.util.inferDtype(s),"string"===o){const t=r.util.getArrayFromDType(o,r.util.sizeFromShape(a));return t.fill(s),e.makeTensorInfo(a,o,t)}{const t=new Am(a,s),n=t.getCustomSetupFunc(s);return e.runWebGLProgram(t,[],o,n)}}const Rm={kernelName:r.Fill,backendName:"webgl",kernelFunc:_m};class Dm{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Fm={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,a=e,r=new Dm(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},Mm="return floor(x);",zm=Vp({opSnippet:Mm,packedOpSnippet:Mm,cpuKernelImpl:Hd}),Lm={kernelName:r.Floor,backendName:"webgl",kernelFunc:zm},Pm=Up({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Bm={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:Pm};class Wm{constructor(t){this.variableNames=["A"];const e=ad(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class Vm{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=ad(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const Um={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t;let{pixels:s}=e;const{numChannels:o}=a,i="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,u="undefined"!==typeof ImageBitmap&&s instanceof ImageBitmap,[l,d]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,l],h=[d,l,o];(c||i||u)&&(null==Gm&&(Gm=document.createElement("canvas").getContext("2d")),Gm.canvas.width=l,Gm.canvas.height=d,Gm.drawImage(s,0,0,l,d),s=Gm.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=Il.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const m=Object(r.env)().getBool("WEBGL_PACK")?new Vm(h):new Wm(h),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}};let Gm;const Hm={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o,bias:i,preluActivationWeights:c}=e,{strides:u,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d),g=r.backend_util.computeConv2DInfo(s.shape,o.shape,u,p,l,h,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=_f({x:s,filter:o,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const t=null!=i,e=null!=c,a="leakyrelu"===f,u=f?Gp(f,!1):null,l=new jf(g,t,u,e,a),d=[s,o];if(i&&d.push(i),c&&d.push(c),a){const t=n.makeTensorInfo([],"float32",r.util.createScalarValue(m,"float32"));d.push(t),x.push(t)}y=n.runWebGLProgram(l,d,"float32")}else y=Af({x:s,filter:o,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const v=Jp({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}};const qm={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:o,bias:i,preluActivationWeights:c}=e,{strides:u,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=[];let b=d;null==b&&(b=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,b),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(b,"'"));const g=r.backend_util.computeConv2DInfo(s.shape,o.shape,u,b,l,p,!0),y=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?Gp(h,y):null,v=[s,o],w=null!=i,k=null!=c,O="leakyrelu"===h;if(w&&v.push(i),k&&v.push(c),O){const t=n.makeTensorInfo([],"float32",r.util.createScalarValue(f,"float32"));v.push(t),m.push(t)}let N;N=y?new am(g,w,x,k,O):new nm(g,w,x,k,O);const I=n.runWebGLProgram(N,v,"float32");return m.forEach(t=>n.disposeIntermediateTensorInfo(t)),I}};class Km{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const a=Dd(e.length),r=Dd(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        ".concat(a," strides = ").concat(a,"(").concat(this.strides,");\n         void main() {\n          ").concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ").concat(this.sliceDim,"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ").concat(s,";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ")}}const Xm={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:s}=e,o=s.shape,i=o[o.length-1],[c,u,l,d]=r.backend_util.prepareAndValidate(a,s),p=Jp({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),h=Jp({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/l,l]}}),f=new Km(i,d,[u,l]),m=n.runWebGLProgram(f,[h,p],h.dtype),b=Jp({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),b}};class Ym{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Dd(this.rank),a=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<t.length;r++)2===r?a.push("int(getIndices(resRC.x, resRC.z))"):a.push("".concat(n[r]));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")}}const Qm={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,indices:o}=e,{axis:i,batchDims:c}=a,u=r.util.parseAxisParam(i,s.shape)[0],l=r.backend_util.segment_util.collectGatherOpShapeInfo(s,o,u,c),d=r.util.sizeFromShape(o.shape),p=[],h=Jp({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Jp({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(h),p.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const t=n.bufferSync(f),e=n.bufferSync(h),a=qd(e,t,m);return p.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const b=new Ym(h.shape,m),g=n.runWebGLProgram(b,[h,f],h.dtype);p.push(g);const y=Jp({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},Zm=Up({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Kd,dtype:"bool"}),Jm={kernelName:r.Greater,backendName:"webgl",kernelFunc:Zm},$m=Up({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),tb={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:$m};const eb={kernelName:r.IFFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return Cm(a,!0,n)}},nb=Vp({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ab={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:nb},rb=Vp({opSnippet:"return float(isinf(x));",dtype:"bool"}),sb={kernelName:r.IsInf,backendName:"webgl",kernelFunc:rb},ob=Vp({opSnippet:"return float(isnan(x));",dtype:"bool"}),ib={kernelName:r.IsNan,backendName:"webgl",kernelFunc:ob},cb=Up({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Xd,dtype:"bool"}),ub={kernelName:r.Less,backendName:"webgl",kernelFunc:cb},lb=Up({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),db={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:lb};const pb={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,num:s}=n,o=Yd(a,r,s);return e.makeTensorInfo([o.length],"float32",o)}},hb=Vp({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Qd}),fb={kernelName:r.Log,backendName:"webgl",kernelFunc:hb},mb=Vp({opSnippet:"return log(1.0 + x);"}),bb={kernelName:r.Log1p,backendName:"webgl",kernelFunc:mb},gb=Up({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),yb={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:gb},xb=Vp({opSnippet:"return float(!(x >= 1.0));"}),vb={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:xb},wb=Up({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),kb={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:wb};class Ob{constructor(t,e,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class Nb{constructor(t,e,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const Ib={kernelName:r.LRN,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{depthRadius:o,bias:i,alpha:c,beta:u}=a,l=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Nb(s.shape,o,i,c,u):new Ob(s.shape,o,i,c,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Sb{constructor(t,e,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const Tb={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r,y:s,dy:o}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=a,d=new Sb(r.shape,i,c,u,l);return n.runWebGLProgram(d,[r,s,o],r.dtype)}};function jb(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reductionIndices:o,keepDims:i}=a,c=s.shape.length,u=r.util.parseAxisParam(o,s.shape);let l=u;const d=r.backend_util.getAxesPermutation(l,c),p=null!=d,h=n.shouldExecuteOnCPU([s]);let f=s;if(p){if(h){const t=n.texData.get(f.dataId).values,e=new Array(c);for(let n=0;n<e.length;n++)e[n]=s.shape[d[n]];const a=dp(t,s.shape,s.dtype,d,e);f=n.makeTensorInfo(e,s.dtype);n.texData.get(f.dataId).values=a}else f=sh(s,d,n);l=r.backend_util.getInnerMostAxes(l.length,c)}r.backend_util.assertAxesAreInnerMostDims("max",l,c);const[m,b]=r.backend_util.computeOutAndReduceShapes(f.shape,l);let g,y=m;if(i&&(y=r.backend_util.expandShapeToKeepDim(m,u)),h){const t=n.texData.get(f.dataId).values,e=Zd(t,r.util.sizeFromShape(b),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=e}else g=function(t,e,n,a){const s=r.util.sizeFromShape(e),o=Jp({inputs:{x:t},attrs:{shape:[r.util.sizeFromShape(t.shape)/s,s]},backend:a}),i=nh(o,t.dtype,"max",a),c=Jp({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(f,b,y,n);return p&&n.disposeIntermediateTensorInfo(f),g}const Cb={kernelName:r.Max,backendName:"webgl",kernelFunc:jb},Eb=Up({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Jd}),Ab={kernelName:r.Maximum,backendName:"webgl",kernelFunc:Eb};const _b={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e;ed(s,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return _p({inputs:{x:s},backend:n});const d=new Bh(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};const Rb={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{filterSize:o,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=a,d=r.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],c,l,u),p=new Wh(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class Db{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,s=t.effectiveFilterWidth,o=r-1-t.padInfo.top,i=s-1-t.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Fb{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,s=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=i-1-t.padInfo.front,d=c-1-t.padInfo.top,p=u-1-t.padInfo.left,h=i*c*u-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(d,", ").concat(p,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(u,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(h," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(u," +\n                  wR * ").concat(u," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Mb={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o}=e,i=o,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=a,p=r.backend_util.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),h=new Wh(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new Fb(p),b=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}};const zb={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:s,input:o,output:i}=e,c=o;ed([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:p}=a,h=r.backend_util.computePool2DInfo(c.shape,u,l,1,d,p),f=new Bh(h,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),b=new Db(h),g=n.runWebGLProgram(b,[s,m],c.dtype);return n.disposeIntermediateTensorInfo(m),g}};const Lb={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:a}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=e,u=n;r.util.assert(4===a.shape.length,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(a.shape.length,"."));const l=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,l),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(l,"'"));const d=r.backend_util.computePool2DInfo(a.shape,s,o,l,i),[p,h]=function(t,e,n,a){let r=new Bh(n,"max",!1);const s=a.runWebGLProgram(r,[t],"float32");return r=new Bh(n,"max",!0,!0,e),[s,a.runWebGLProgram(r,[t],"float32")]}(a,c,d,u);return[p,h]}};const Pb={kernelName:r.Mean,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:a}=t,{keepDims:s,axis:o}=e,i=n,c=a.shape.length,u=r.util.parseAxisParam(o,a.shape);let l=u;const d=r.backend_util.getAxesPermutation(l,c),p=null!=d,h=i.shouldExecuteOnCPU([a]),f=[];let m=a;if(p){if(h){const t=i.texData.get(m.dataId).values,e=new Array(c);for(let r=0;r<e.length;r++)e[r]=a.shape[d[r]];const n=dp(t,a.shape,a.dtype,d,e);m=i.makeTensorInfo(e,a.dtype);i.texData.get(m.dataId).values=n}else m=sh(a,d,i);f.push(m),l=r.backend_util.getInnerMostAxes(l.length,c)}r.backend_util.assertAxesAreInnerMostDims("sum",l,c);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,l);let y=b;s&&(y=r.backend_util.expandShapeToKeepDim(b,u));const x=function(t,e,n,a){const s=r.util.sizeFromShape(e),o=Jp({inputs:{x:t},attrs:{shape:[r.util.sizeFromShape(t.shape)/s,s]},backend:a}),i=nh(o,"float32","mean",a),c=Jp({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(m,g,y,i);for(const r of f)i.disposeIntermediateTensorInfo(r);return x}};const Bb={kernelName:r.Min,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a,c=s.shape.length,u=r.util.parseAxisParam(o,s.shape);let l=u;const d=r.backend_util.getAxesPermutation(l,c);let p=s;null!=d&&(p=ch({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,c);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,l),m=Jp({inputs:{x:p},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=nh(m,m.dtype,"min",n);let g;if(i){g=Jp({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,u)}})}else g=Jp({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}},Wb=Up({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:$d}),Vb={kernelName:r.Minimum,backendName:"webgl",kernelFunc:Wb};class Ub{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const a=t.length,r=Dd(a),s=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class Gb{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const a=t.length,r=Dd(a),s=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),i=fp("rc",a),c=fp("source",a),u="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let p="";if(1===a){const t="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");p="\n        ".concat(r," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(u,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ")}else{const t="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");p="\n        ".concat(r," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(u,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(u,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Hb={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:a}=t,{paddings:s,mode:o}=n,i=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gb(a.shape,s,o):new Ub(a.shape,s,o);return e.runWebGLProgram(i,[a],a.dtype)}},qb=Up({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Kb={kernelName:r.Mod,backendName:"webgl",kernelFunc:qb};class Xb{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const Yb=Up({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Qb={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:Yb},Zb="return a - b;",Jb=Up({opSnippet:Zb,packedOpSnippet:Zb,supportsComplex:!0,cpuKernelImpl:cp}),$b={kernelName:r.Sub,backendName:"webgl",kernelFunc:Jb};function tg(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{dim:o}=a,i=r.util.parseAxisParam([o],s.shape),c=jb({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=r.backend_util.expandShapeToKeepDim(c.shape,i),l=Jp({inputs:{x:c},backend:n,attrs:{shape:u}}),d=Jb({inputs:{a:s,b:l},backend:n}),p=wm({inputs:{x:d},backend:n}),h=oh({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=Jp({inputs:{x:h},backend:n,attrs:{shape:u}}),m=Yb({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const eg={kernelName:r.Softmax,backendName:"webgl",kernelFunc:tg};const ng={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{numSamples:s,seed:o,normalized:i}=a,c=i?r:tg({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new Xb(u,l,s),p=d.getCustomSetupFunc(o),h=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),h}},ag="return -x;";const rg={kernelName:r.Neg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])){const t=n.texData.get(a.dataId),[e,r]=ep(t.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,e)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ip(a.shape,ag):new wp(a.shape,ag),n.runWebGLProgram(s,[a],a.dtype)}},sg=r.kernel_impls.nonMaxSuppressionV3Impl;const og={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(t){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=a,l=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=sg(l,d,i,c,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},ig=r.kernel_impls.nonMaxSuppressionV4Impl;const cg={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(t){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=a,d=n.readSync(s.dataId),p=n.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=ig(d,p,i,c,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},ug=r.kernel_impls.nonMaxSuppressionV5Impl;const lg={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(t){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=a,d=n.readSync(s.dataId),p=n.readSync(o.dataId),h=i,f=c,m=u,b=l,{selectedIndices:g,selectedScores:y}=ug(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class dg{constructor(t,e,n,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const pg={kernelName:r.OneHot,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{indices:s}=e,{depth:o,onValue:i,offValue:c}=a,u=r.util.sizeFromShape(s.shape),l=new dg(u,o,i,c),d=Jp({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const h=Jp({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(p),h}};function hg(t){const{inputs:e,backend:n}=t,{x:a}=e;if("complex64"===a.dtype){const t=cf({inputs:{input:a},backend:n}),e=hg({inputs:{x:t},backend:n}),r=Of({inputs:{input:a},backend:n}),s=hg({inputs:{x:r},backend:n}),o=Dp({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return _m({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const fg={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:hg};const mg={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=cf({inputs:{input:r},backend:a}),n=t({inputs:{x:e},backend:a}),s=Of({inputs:{input:r},backend:a}),o=hg({inputs:{x:s},backend:a}),i=Dp({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return _m({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const bg={kernelName:r.Pack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{axis:s}=a;if(1===e.length)return Om({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,i=e[0].dtype;e.forEach(t=>{r.util.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=Sf({inputs:e.map(t=>{const e=Om({inputs:{input:t},backend:n,attrs:{dim:s}});return c.push(e),e}),backend:n,attrs:{axis:s}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}};class gg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const a=t.length,r=Dd(a),s=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(").concat(n,"));\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(").concat(n,"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class yg{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const a=t.length,r=Dd(a),s=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),i=fp("rc",a),c=fp("source",a),u="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(u,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(u,") {")],p=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===a?2:4;f<m;f++)h+="\n        ".concat(d[f],"\n        if (").concat(p,") {\n          result[").concat(f,"] = float(").concat(n,");\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ");h+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const xg=t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{paddings:o,constantValue:i}=a,c=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yg(s.shape,o,i):new gg(s.shape,o,i);return n.runWebGLProgram(c,[s],s.dtype)},vg={kernelName:r.PadV2,backendName:"webgl",kernelFunc:xg},wg=Up({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),kg={kernelName:r.Pow,backendName:"webgl",kernelFunc:wg};const Og={kernelName:r.Prod,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:o,keepDims:i}=a,c=s.shape.length,u=[],l=r.util.parseAxisParam(o,s.shape);let d=l;const p=r.backend_util.getAxesPermutation(d,c);let h,f=s;if(null!=p&&(f=ch({inputs:{x:s},backend:n,attrs:{perm:p}}),d=r.backend_util.getInnerMostAxes(d.length,c),u.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:a,outDtype:r}=np(f.shape,f.dtype,t,d);h=n.makeTensorInfo(a,r,e)}else{const[t,e]=r.backend_util.computeOutAndReduceShapes(f.shape,d),a=r.util.sizeFromShape(e),o=Jp({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=nh(o,Object(r.sumOutType)(s.dtype),"prod",n);h=Jp({inputs:{x:i},backend:n,attrs:{shape:t}}),u.push(o),u.push(i)}if(i){u.push(h);const t=r.backend_util.expandShapeToKeepDim(h.shape,l);h=Jp({inputs:{x:h},backend:n,attrs:{shape:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},Ng=t=>{const{backend:e,attrs:n}=t,{start:a,stop:r,step:s,dtype:o}=n,i=ap(a,r,s,o);return e.makeTensorInfo([i.length],o,i)},Ig={kernelName:r.Range,backendName:"webgl",kernelFunc:Ng},Sg=Vp({opSnippet:"return 1.0 / x;"}),Tg={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:Sg},jg=Vp({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Cg={kernelName:r.Relu,backendName:"webgl",kernelFunc:jg},Eg=Vp({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ag={kernelName:r.Relu6,backendName:"webgl",kernelFunc:Eg};class _g{constructor(t,e,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const u=[a&&e>1?o-1:o,a&&n>1?i-1:i],l=[a&&e>1?e-1:e,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class Rg{constructor(t,e,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const u=[a&&e>1?o-1:o,a&&n>1?i-1:i],l=[a&&e>1?e-1:e,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const Dg={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a,[u,l]=c,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Rg(s.shape,u,l,o,i):new _g(s.shape,u,l,o,i);return n.runWebGLProgram(d,[s],"float32")}};class Fg{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,s,o]=t,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const Mg={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a,i=new Fg(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class zg{constructor(t,e,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const u=[a&&e>1?o-1:o,a&&n>1?i-1:i],l=[a&&e>1?e-1:e,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(p,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}const Lg={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,u]=i,l=new zg(r.shape,c,u,s,o);return n.runWebGLProgram(l,[r],r.dtype)}};class Pg{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,s,o]=t,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const Bg={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a,i=new Pg(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Wg{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const a=t.map((n,a)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a)).join(","),r=Dd(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class Vg{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const a=fp("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=Dd(n);function i(n){const a=t.map((a,r)=>function(n,a){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n)),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const Ug={kernelName:r.Reverse,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{dims:o}=a,i=s.shape.length,c=r.util.parseAxisParam(o,s.shape);if(0===i)return _p({inputs:{x:s},backend:n});const u=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vg(s.shape,c):new Wg(s.shape,c);return n.runWebGLProgram(u,[s],s.dtype)}};class Gg{constructor(t,e,n,a){this.variableNames=["Image"],this.outputShape=[];const s=t[1],o=t[2],i=Math.sin(e).toFixed(3),c=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=r.backend_util.getImageCenter(a,s,o),d=u.toFixed(3),p=l.toFixed(3);let h="";h="number"===typeof n?"float outputValue = ".concat(n.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(n.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ".concat(d,") * ").concat(c," - (float(y) - ").concat(p,") * ").concat(i,";\n          float coordYFloat = (float(x) - ").concat(d,") * ").concat(i," + (float(y) - ").concat(p,") * ").concat(c,";\n          int coordX = int(round(coordXFloat + ").concat(d,"));\n          int coordY = int(round(coordYFloat + ").concat(p,"));\n          ").concat(h,"\n          if(coordX >= 0 && coordX < ").concat(o," && coordY >= 0 && coordY < ").concat(s,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Hg={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:a}=t,{radians:r,fillValue:s,center:o}=e,i=n,c=new Gg(a.shape,r,s,o);return i.runWebGLProgram(c,[a],a.dtype)}},qg=Vp({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Kg={kernelName:r.Round,backendName:"webgl",kernelFunc:qg},Xg=Vp({opSnippet:"return inversesqrt(x);",cpuKernelImpl:rp}),Yg={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:Xg};class Qg{constructor(t,e,n,a,r,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=Dd(r.length),c=Dd(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const l="getIndices(".concat(u,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")"),h=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(l,");\n              flattenedIndex += index * ").concat(h,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(p,";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ")}}const Zg={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:s,updates:o}=e,{shape:i}=a,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,i),h=[p/l,l];if(0===p)return n.makeTensorInfo(i,s.dtype);const f=Jp({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=Jp({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Qg(u,c,f.shape.length,m.shape.length,d,h),y=n.runWebGLProgram(g,[m,f,b],m.dtype),x=Jp({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}};class Jg{constructor(t,e,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<e.length;a++)o.push("".concat(n[a])),a<t&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=Dd(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const $g={kernelName:r.Select,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:s,e:o}=e,i=new Jg(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[a,s,o],Object(r.upcastType)(s.dtype,o.dtype))}},ty=Vp({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(r.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(r.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),ey={kernelName:r.Selu,backendName:"webgl",kernelFunc:ty},ny=Vp({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),ay={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:ny},ry=Vp({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),sy={kernelName:r.Sign,backendName:"webgl",kernelFunc:ry},oy=Vp({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),iy={kernelName:r.Sin,backendName:"webgl",kernelFunc:oy},cy=Vp({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),uy={kernelName:r.Sinh,backendName:"webgl",kernelFunc:cy},ly=Vp({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),dy={kernelName:r.Softplus,backendName:"webgl",kernelFunc:ly},py={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockShape:o,paddings:i}=a;r.util.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((t,e)=>t*e),u=[[0,0]];u.push(...i);for(let r=1+o.length;r<s.shape.length;++r)u.push([0,0]);const l=[],d=xg({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,o,c,!1),h=r.backend_util.getPermuted(p.length,o.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,o,c,!1),m=Jp({inputs:{x:d},backend:n,attrs:{shape:p}}),b=ch({inputs:{x:m},backend:n,attrs:{perm:h}}),g=Jp({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}};const hy={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:s,sparseValues:o,defaultValue:i}=e,{outputShape:c}=a,{sliceRank:u,numUpdates:l,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,c),h=new Qg(l,u,s.shape.length,o.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[o,s,i],o.dtype),m=Jp({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(f),m}};const fy={kernelName:r.SplitV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{numOrSizeSplits:o,axis:i}=a,c=r.util.parseAxisParam(i,s.shape)[0],u=r.backend_util.prepareSplitSize(s,o,c),l=s.shape.length,d=new Array(l).fill(0),p=s.shape.slice();return u.map(t=>{const e=[...p];e[c]=t;const a=ef({inputs:{x:s},backend:n,attrs:{begin:d,size:e}});return d[c]+=t,a})}},my=Vp({opSnippet:"return sqrt(x);"}),by={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:my},gy=Vp({opSnippet:"return x * x;"}),yy={kernelName:r.Square,backendName:"webgl",kernelFunc:gy},xy=Up({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),vy={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:xy};const wy={kernelName:r.Step,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:a}=t,r=kp+"\n    return x > 0.0 ? 1.0 : float(".concat(e.alpha,");\n  "),s=new wp(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}};class ky{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=Dd(n.length),s=Dd(n.length);let o="";if(1===a)o="coords * strides + begin";else{let t=0;o=n.map((e,a)=>(t++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(t-1,"] * strides[").concat(a,"] + begin[").concat(a,"]"))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(t,");\n      ").concat(r," strides = ").concat(r,"(").concat(e,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const Oy={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{begin:o,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=r.slice_util.sliceInfo(s.shape,o,i,c,u,l,d,p,h),v=Jp({inputs:{x:s},backend:n,attrs:{shape:y}});let w;if(f){const t=ef({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=Jp({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some(t=>0===t))w=n.makeTensorInfo(x,s.dtype,[]);else{if(n.shouldExecuteOnCPU([v])){const t=n.texData.get(v.dataId).values,e=Object(r.buffer)(v.shape,v.dtype,t),a=ip(x,e,b,m);w=n.makeTensorInfo(x,v.dtype,a.values)}else{const t=new ky(m,b,x);w=n.runWebGLProgram(t,[v],v.dtype)}}const k=Jp({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},Ny=Vp({opSnippet:"return tan(x);"}),Iy={kernelName:r.Tan,backendName:"webgl",kernelFunc:Ny},Sy=Vp({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Ty={kernelName:r.Tanh,backendName:"webgl",kernelFunc:Sy};class jy{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const a=Dd(this.rank),r=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<t.length;r++)a.push("imod(".concat(n[r],", ").concat(t[r],")"));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function Cy(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reps:o}=a;if("string"===s.dtype){const t=n.readSync(s.dataId).map(t=>r.util.decodeString(t)),e=Object(r.buffer)(s.shape,s.dtype,t),a=up(e,o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const i=new jy(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const Ey={kernelName:r.Tile,backendName:"webgl",kernelFunc:Cy};const Ay={kernelName:r.TopK,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:s,sorted:o}=a,i=n.readSync(r.dataId),[c,u]=lp(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const _y={kernelName:r.Unique,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:r}=n,{x:s}=e;ed(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:u}=pp(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([u.length],"int32",u)]}};const Ry={kernelName:r.Unpack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:r}=e;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(u[l++]=o.shape[m]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){p[s]=m;const t=ef({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),e=Jp({inputs:{x:t},backend:n,attrs:{shape:u}});f[m]=e,d.push(t)}return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}};class Dy{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,a=t.batchSize,r=t.inSize,s=t.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(u,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const Fy=[Ib,Tb,dh,ph,fh,bh,xh,kh,Oh,Nh,jh,Ch,Ah,Rh,zh,Fh,Ph,Uh,Vh,qh,Kh,Xh,Zh,af,rf,lf,hf,bf,xf,Fp,Tf,Lf,Pf,Rf,Wf,Vf,Bf,Gf,qf,Xf,Jf,$f,em,im,cm,rm,lm,pm,fm,mm,gm,xm,km,Nm,Tm,Em,Rm,Fm,Lm,Bm,Um,Hm,qm,Xm,Qm,Jm,tb,Rp,eb,Nf,ab,sb,ib,Lp,ub,db,pb,bb,fb,yb,vb,kb,Cb,Rb,_b,Mb,zb,Lb,Ab,Pb,Bb,Vb,Hb,Kb,ng,Zp,rg,og,cg,lg,of,pg,mg,bg,vg,kg,Wp,Og,Ig,uf,Qb,Tg,Ag,Cg,$p,Dg,Mg,Lg,Bg,Ug,Hg,Kg,Yg,Zg,$g,ey,ay,sy,iy,uy,nf,eg,dy,py,hy,fy,by,yy,vy,wy,Oy,$b,ih,Iy,Ty,Ey,Ay,uh,_y,Ry,{kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,segmentIds:o}=e,{numSegments:i}=a,c=s.shape.length,u=[];let l=0;const d=r.backend_util.getAxesPermutation([l],c);let p=s;null!=d&&(p=ch({inputs:{x:s},backend:n,attrs:{perm:d}}),u.push(p),l=r.backend_util.getInnerMostAxes(1,c)[0]);const h=r.backend_util.segment_util.computeOutShape(p.shape,l,i),f=r.util.sizeFromShape([p.shape[l]]),m=Jp({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});u.push(m);const b=Object(r.sumOutType)(s.dtype),g=(t,e,a,s,o)=>{const i=t.shape[0],c=t.shape[1],l=r.backend_util.segment_util.segOpComputeOptimalWindowSize(c,o),d=new Dy({windowSize:l,inSize:c,batchSize:i,numSegments:o},e),p=n.compileAndRun(d,[t,a],s);if(u.push(p),p.shape[1]===o)return p;const h=Ng({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=Cy({inputs:{x:h},backend:n,attrs:{reps:[c/l]}});u.push(h),u.push(f);return g(p,e,f,s,o)},y=Jp({inputs:{x:g(m,"unsortedSegmentSum",o,b,i)},backend:n,attrs:{shape:h}});let x=y;if(null!=d){u.push(y);const t=r.backend_util.getUndoAxesPermutation(d);x=ch({inputs:{x:x},backend:n,attrs:{perm:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),x}},fg];for(const My of Fy)Object(r.registerKernel)(My);r.version_core,_r.b}]]);
//# sourceMappingURL=2.74d5ba8c.chunk.js.map